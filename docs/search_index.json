[["index.html", "The AED Manual Modelling Aquatic Eco-Dynamics: Overview of the AED modular simulation platform Welcome! How to contribute? Editing the book How to cite this book Supporting the project", " The AED Manual 2022-05-04 Modelling Aquatic Eco-Dynamics: Overview of the AED modular simulation platform Welcome! This is the online home of Modelling Aquatic Eco-Dynamics, a book on describing the AED (previously released as AED2) modelling platform for the simulation of aquatic ecosystem dynamics. Inspired by bookdown and the Open Data movement in ecology and the environmental sciences, this book is open source. This encourages a collaborative approach to model development and discussion and ensures the approaches adopted by the user community are reproducible and publicly accessible for people worldwide. The model platform has been applied to many diverse sites across the globe (Figure 0.1) and we hope it can be useful to help with your application! Figure 0.1: Locations How to contribute? You may be a new user seeking to understand how to get started, or you may be interested in tailoring a module to your research or management application. As modules evolve, through incremental improvements or wholesale changes, the experts working on these changes can ensure the latest information is available to the community by continuously updating and improving this book. bookdown makes editing a book as easy as editing a wiki, provided you have a GitHub account (sign-up at github.com). Once logged-in to GitHub, click on the ‘edit me’ icon highlighted with a red ellipse in the image below. This will take you to an editable version of the the source R Markdown file that generated the page you’re on: To raise an issue about the book’s content (e.g. code not running) or make a feature request, check-out the issue tracker. Readers may also use the hypothes.is utility on the right margin of the book to add personal annotations and public comments on the book content. Maintainers and contributors must follow this repository’s CODE OF CONDUCT. Editing the book To build the book locally, clone or download the aed-science repo, load R in root directory (e.g. by opening aed-sceince.Rproj in RStudio) and run the following lines: bookdown::render_book(&quot;index.Rmd&quot;) # to build the book browseURL(&quot;_book/index.html&quot;) # to view it How to cite this book Please cite this edited book and the AED model in scientific publications as: Hipsey, M.R., ed. (2022) Modelling Aquatic Eco-Dynamics: Overview of the AED modular simulation platform. Zenodo repository. ADD ZENODO DOI LINK HERE. If you would like to cite an individual chapter of this book (not the AED model), please use this format (example given for chapter 4): Hipsey, M.R. and P. Huang. (2022) Chapter 4. Dissolved oxygen. Hipsey, M.R., ed. Modelling Aquatic Eco-Dynamics: Overview of the AED modular simulation platform. Zenodo repository. ADD ZENODO DOI LINK HERE. Supporting the project If you find AED useful, please support it by: Telling people about it in person Join our Slack channel: general-lake-model.slack.com Communicating about the model in digital media, e.g. via the “AEDmodel” hashtag on Twitter Citing the book, as described above Contributing to this book via GitHub or the AED model more broadly via Github This work is licensed under a Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License. "],["preface.html", "Preface Who is this book for? Why AED? Acknowledgements", " Preface Who is this book for? This book describes the scientific basis and technical details of the module within the AED library. If you are a new user seeking to get started with water quality modelling, you may have undertaken an AED tutorial and are interested to setup your own site for the first time. Or, you may have your own conceptual model and are keen to build a tailored setup to simulate your site. Or, you may be ready to modify an AED module or create a whole new module for your research or management application. Depending at what stage you are at in your model development journey, different parts of the book may be more relevant to you. Why AED? The AED modelling code-base is a community-driven library of modules and algorithms for simulation of “aquatic ecodynamics” - water quality, aquatic biogeochemistry, biotic habitat and aquatic ecosystem dynamics. The AED software is unique as it is suitable for a very wide range water bodies types, including lakes, reservoirs, wetlands, ponds, estuaries and coastal waters. It has been applied to many research and water engineering projects across the world. Users select water quality and ecosystem variables they wish to simulate and are able to customize links and dependencies between modules. Each module aims to be based on state-of-the-art science sourced from a wide variety of scientific literature, making the library one of the most advanced available to aquatic ecosystem modellers. Importantly, this software is an open-source project, and the source code is accessible and customisable for specific applications. Most modules have numerous options and alternate algorithms so users can tailor the model to their specific needs, but inevitably, users will require flexibility to embed custom algorithms or functionality. It is envisaged that the flexible nature of the model components will facilitate the model community to experiment with model structural complexity, to more easily share model innovations at the algorithm level, and support the development of common performance assessment approaches (for a discussion on model assessment, readers are referred to Hipsey et al., 2020). Acknowledgements We gratefully acknowledge financial support from the Australian Research Council (Grant IDs: LP130100756, LP150100451, DP130104078, LP110100040, LP0991254, LP110200975, LP150100519) and the Water and Environment Group of BMT. Casper Boon, Louise Bruce, David Hamilton, Peisheng Huang, and Dan Paraska as well as all members, past and present, of the Aquatic EcoDynamics research group at the University of Western Australia provided valuable feedback and support critical for developing the AED model. Finally, we thank members of the Global Lake Ecological Observatory Network (GLEON) for contributing to the model, providing use cases, and sharing feedback. Cayelan Carey and Quinn Thomas helped with the final editing of the first version of this book prior to publication. "],["introduction.html", "1 Introduction Scientific Overview Application Contexts Navigating this book", " 1 Introduction Author: Matthew R. Hipsey Scientific Overview The AED modelling library (termed ‘AED’ for short) consists of numerous modules that are designed as individual model ‘components’ able to be configured in a way that facilitates custom aquatic ecosystem conceptualisations – from very simple to very complex. Think of it like a set of jigsaw pieces that connect together to build a complete picture. Users select water quality and ecosystem variables they wish to simulate and then are able to customize connections and dependencies with other modules, including support for easy customisation at an algorithm level how model components operate (e.g. photosynthesis functions, sorption algorithms etc). In general, model components consider the cycling of carbon, nitrogen and phosphorus, and other relevant components such as oxygen, and are able to simulate organisms including different functional groups of phytoplankton and zooplankton, and also organic matter. Modules to support simulation of water column and sediment geochemistry, including coupled kinetic-equilibria, are also included. Application Contexts The AED modules have been applied across wetlands, lakes, rivers and estuaries, by taking advantage of the standard coupling interface between the scientific modules and hydrodynamic drivers. Due to this flexibility, the model can be applied across a range of scales and contexts. For example, it can be coupled with a 0D box model, the 1D model GLM, or the 3D finite volume model TUFLOW-FV. Applications of the model include: Hypoxia in lakes or estuaries Fish-kill risks Harmful algal blooms Pathogen risk Nutrient cycling Greenhouse-gases Habitat quality Floodplain response Invasive species Food web studies Navigating this book This is not the sort of book you read from cover to cover! The book has initial introductory material in the first 4 chapters, and then is followed by 5 major sections: Part I: AED Water - Descriptions of the core “water” modules, those relevant to simulating basic water quality in the pelagic environment. Part II: AED+ Water - Description of the advanced “plus” water modules. Part III: AED+ Benthic - Description of the advanced benthic modules. Part IV: AED+ Riparian - Description of the advanced riparian modules. Part V: Supporting Material. The chapters within the Parts I-IV of the book typically map to a specific module within the AED code library. Each describes the scientific context of the module, provides technical descriptions for the model processes, and the provides summary information on the required module parameters, and configuration details. Where available, the modules also include case-studies to demonstrate the functionality and publications using the module that can be referred to for further information. "],["nomenclature.html", "2 Nomenclature 2.1 Variables and Data Types 2.2 A Note on Notation", " 2 Nomenclature Author: Matthew R. Hipsey 2.1 Variables and Data Types There is often confusion over the types of variables and data-types used within the modules. Standard terminology adopted in the \\(\\mathrm{AED}\\) system is described in Table 2.1. Table 2.1 Table 2.1: Variables and data types State variable A state variable is a primary variable being simulated within the cells of the computational domain, and which is subject to transport or boundary conditions as controlled by the host model. Generally, state variables are subject to solution of an Ordinary Differential Equation (ODE) to predict their time-varying conditions within AED, in addition to transport by the host. State variables can be “normal” in which case they exist in all water cells, or they can be “sheet” in which case they are used for surface or benthic attributes (these are typically called “3D” and “2D”, or “pelagic” and “benthic”, respectively, though are still relevant in 1D models like GLM). Diagnostic variable A diagnostic variable is a property of interest defined on the computational domain, and available to be output by the host model for plotting and post-processing. Typically, diagnostic variables include derived measure of model state, integrated values, process rates or other cell-specific attributes of interest for debugging. Importantly, diagnostic variables are not subject to transport or boundary conditions as are state variables. Diagnostic variables can be “normal” in which case they exist in all water cells, or they can be “sheet” in which case they are used for surface or benthic attributes (these are typically called 3D and 2D, respectively, though are still relevant in 1D models like GLM). Environment variable An environment variable in AED is a variable managed by the host model but is required by AED for computation of module-specific dynamics. This typically relate to predictions of the host model such as temperature, salinity and velocity, but can also include features of the domain, including benthic material type or cell thickness. Boundary condition A boundary condition is a driving variable external to the simulation dynamics, such as weather or flow. In most cases in AED these are handled by the host model, and passed to AED modules as environment vars (e.g. wind, solar radiation etc). Process rate A process rate in AED refers to a flux pathway, ie. a mass or energy flux connecting two variables or more variables. Generally these are units of concentration per time. Parameter - constant A constant parameter is a fixed value over the course of the simulation associated with a process calculation, unit conversion etc. This will be in a variety of units. These values are not accessible outside of the specific module in which they are declared. Parameter - variable A variable parameter is a value over associated with a process calculation, or related attribute, that can vary between computational cells, and/or from time to time depending on local conditions. These values are not accessible outside of the specific module in which they are declared, unless the spatiotemporal varying parameters are also stored as “diagnostic” variables, where they can be linked to other modules and output for post-processing assessment. Option An option is an integer or Boolean “switch” used to enable a feature in a module, or select a specific algorithm or function 2.2 A Note on Notation The modules being described in this book each list the specific simulated variables and parameters, with summaries of the module specific notations. For consistency across the modules a standard mathematical notation is adopted. 2.2.1 General Notation The following symbols are used to denote commonly used variables: \\(t\\) = time \\(N\\) = number of groups (integer) \\(a, om, z\\) = indices of various biological sub-groups, such as algae/phytoplankton, organic matter and zooplankton (integer) \\(\\chi_{C:Y}^{group}\\) = the stoichiometric ratio of “\\(group\\)” between element ““\\(C\\)”” and element “\\(Y\\)” (\\(mmol\\) \\(C\\) \\(/\\) \\(mmol\\) \\(Y\\)) \\(f_{process}^{var}\\) = function that returns the mass flux of “\\(process\\)” on “\\(var\\)” (\\(mmol \\text{ var}/m^3/time\\)) \\(R_{process}^{var}\\) = the relative rate of “\\(process\\)” influencing the variable “\\(var\\)” (\\(/time\\)) \\(F_{process}^{var}\\) = the areal flux of variable “var” due to a “\\(process\\)”, applied at the sediment-water or air-water interface (\\(mmol \\text{ var}/m^2\\)) \\(p_{source}^{group}\\) = the preference of “\\(group\\)” for “\\(source\\)” (0-1) \\(\\Phi_{lim}^{group}[var]\\) = dimensionless limitation or scaling function to account for the effect of “\\(lim\\)” on a “\\(group\\)” (-) \\(\\Phi_{lim}^{process}[var]\\) = dimensionless limitation or scaling function to account for the effect of “\\(lim\\)” (limiting) “\\(var\\)” on a “\\(process\\)” (-) \\(k^{var}\\) = generic fraction related to “\\(var\\)” (0-1) \\(\\Theta_{config}^{group}\\) = switch to configure selectable model component “\\(config\\)” for “\\(group\\)” (0,1,2,…) \\(K_{process}^{var}\\) = half-saturation constant associated with a biogeochemical “\\(process\\)”, based on the concentration of variable “\\(var\\)” (\\(mmol \\text{ var}/m^3\\)) \\(c,\\theta,\\gamma, \\dotsb\\) = miscellaneous coefficients (various units) 2.2.2 Model Domain and Position The \\(\\mathrm{AED}\\) model links with a variety of models that have diverse approaches to discretize the spatial domain, ranging from an individual ‘box’ to a complex finite-volume mesh. The following standard descriptions are used: \\(c, sz\\) = indices of computational cells, or sediment zones (integer) \\(\\Delta z\\) = generic vertical thickness of a computational cell or layer \\(\\Delta z_{s}\\) = vertical thickness of the surface computational cell or layer \\(\\Delta z_{b}\\) = vertical thickness of the bottom computational cell or layer \\(h\\) = height above a reference point \\(z\\) = depth below water surface \\(d\\) = water depth \\(A\\) = area In the science descriptions within each module the dynamics are referred to usually at a generic point in space for convenience. However, we highlight that most variables and properties are resolved as vectors, spanning the number of cells in the computational domain. Note the following conventions: \\(C\\) = generic use of a variable without a specific spatial position \\(C_c\\) = denoting the value of a variable \\(C\\) at the location of a specific cell, \\(c\\) \\(C_{sz}\\) = denoting the value of a variable \\(C\\) at the location of a specific sediment zone, \\(sz\\) To highlight whether a process is particular to a certain set of cells within the domain we use: \\(f_{process}^{var}\\) = generic use of a function that returns the mass flux of “\\(process\\)” on “\\(var\\)” \\(\\hat{f}_{process}^{var}\\) = use of a function that returns the mass flux of “\\(process\\)” on “\\(var\\)” specific to a benthic process at the sediment-water interface \\(\\check{f}_{process}^{var}\\) = use of a function that returns the mass flux of “\\(process\\)” on “\\(var\\)” specific to a surface process at the air-water interface To differentiate between a symbol that is referring to a scalar or a vector of cells we use: \\(C\\) = generic use of a variable without a specific spatial position \\(\\mathbf{C}\\) = an array of the variable \\(C\\) spanning the model’s 1D, 2D or 3D spatial domain \\(f_{process}^{var}\\) = generic “\\(process\\)” within the model without a specific spatial position \\(\\mathbf{f}_{process}^{var}\\) = an array of of values describing a “\\(process\\)”, spanning the model’s 3D spatial domain \\(F_{process}^{var}\\) = generic value or constant describing an areal flux of variable “var” due to a “\\(process\\)” \\(\\mathbf{F}_{process}^{var}\\) = an array of of values describing an areal flux of variable “var” due to a “\\(process\\)”, spanning the model’s 2D spatial domain 2.2.3 Environmental Conditions As outlined in Table 2.1, \\(\\mathrm{AED}\\) refers to a specific class of variable denoted an environmental variable. These are provided to the \\(\\mathrm{AED}\\) modules from the host model - that is, they are external drivers of dynamics carried out by \\(\\mathrm{AED}\\). Key variables referred to commonly include: \\(T\\) or \\(T_K\\) = water temperature in Celsius or Kelvin, respectively (\\(^{\\circ}C\\), \\(K\\)) \\(S\\) = water salinity in practical salinity units (\\(psu\\)) \\(I\\) = light intensity (\\(W/m^2\\)) \\(u\\) = generic water velocity (\\(m/s\\)) \\(\\tau\\) = shear stress (\\(N/m^2\\)) Variables outside of the water may also be referred to: \\(U\\) = wind speed, above the domain (\\(m/s\\)) \\(T_a\\) = air temperature (\\(^{\\circ}C\\)) \\(I_0\\) = light intensity incident on the domain (\\(W/m^2\\)) 2.2.4 Transport Reference Frame As \\(\\mathrm{AED}\\) is designed to be agnostic of the host model spatial domain, and the transport of \\(\\mathrm{AED}\\) variables is managed by the host model, this book refers to transport in a generic way. Each simulated state variable is subject to advection and turbulent mixing, plus boundary conditions, as managed by the host hydrodynamic model. The material derivative, \\(\\frac{D}{Dt}\\) is used to depict that the reactions and processes in the \\(\\mathrm{AED}\\) library (those summarised in the module descriptions) are undertaken superimposed on the movement of the water being simulated by the host model. For a generic non-reactive \\(\\mathrm{AED}\\) variable, \\(C\\), this is: \\[\\begin{equation} \\frac{D}{Dt}C = \\frac{\\partial C}{\\partial t} + \\mathbf{u} \\cdot \\nabla C \\tag{2.1} \\end{equation}\\] where \\(\\nabla\\) is the gradient operator, which in the context of a hydrodynamic model, can be used to generically summarise the advection field: \\[\\begin{equation} \\frac{D}{Dt}C = \\frac{\\partial C}{\\partial t} + u\\frac{\\partial C}{\\partial x} + v\\frac{\\partial C}{\\partial y} + w\\frac{\\partial C}{\\partial z} \\tag{2.2} \\end{equation}\\] where \\(u\\), \\(v\\), and \\(w\\) are the water velocity in cartesian coordinates, \\(x\\), \\(y\\), and \\(z\\). As the \\(\\mathrm{AED}\\) model links with hydrodynamic models that use unstructured or non-standard computational domains, the exact transport solution and notation for a given model will necessarily be model-specific, but broadly consistent with the above. Similarly, each model will resolve diffusion and turbulent mixing between computational cells in a unique way. For this reason we simply denote the process of “mixing” using the symbol \\(\\mathbb{M}\\). For a typical RANS hydrodynamic model this would be \\(\\mathbf{u} \\cdot \\nabla^2 C\\). Some models, such as the General Lake Model (Hipsey et al., 2019), may however adopt a “bulk mixing” model, whereby mixing is resolved using a multi-step algorithm that is not so easily summarised. The host model will also have various model-specific approaches for defining the model boundary conditions for simulated \\(\\mathrm{AED}\\) variables. We therefore use the generic symbol \\(\\mathcal{S}\\) to represent sources of mass to a computational cell. \\(\\mathcal{S}\\) will be cell-specific, and would be zero for interior model cells not subject to source terms. Therefore, the rate of change of a generic \\(\\mathrm{AED}\\) variable in an unspecified cell can be summarised as: \\[\\begin{equation} \\frac{D}{Dt}C = \\mathbb{M} + \\mathcal{S} \\quad \\underbrace{\\color{#ED7D31} \\pm \\color{#ED7D31} \\dotsb \\color{#ED7D31} f \\color{#ED7D31} \\dotsb}_{\\text{AED terms}} \\tag{2.3} \\end{equation}\\] where the AED terms on the RHS are the reaction or movement (e.g. settling) processes that are subsequently described throughout the remainder of this book. In summary, generic notation is adopted to denote the effects of advection, mixing and boundary conditions that are managed by the host hydrodynamic model for \\(\\mathrm{AED}\\) simulated variables. Reactions, species interactions, and material or organism redistribution is the focus of the \\(\\mathrm{AED}\\) module library. "],["organisation-of-the-library-module-structure.html", "3 Organisation of the Library &amp; Module Structure 3.1 Library Design 3.2 Model Structure 3.3 Module Summary", " 3 Organisation of the Library &amp; Module Structure Author: Matthew R. Hipsey 3.1 Library Design The AED modelling library is organised as a series of “modules” that can be connected or “linked” through specific variable dependencies. By linking modules users can simulate most aquatic biogeochemical processes relevant to nutrient cycling, oxygen dynamics, harmful algal blooms, sediment/soil biogeochemistry, vegetation, pathogens etc. Each module can work alone or combined with other modules, depending on the complexity of targeted system. A wide array of modules are available with some operational only in water, some operational where no water is present, and some can operate under both dry and wet conditions. The current AED software is divided into 5 separate code-libraries: water, benthic, demo, dev, and riparian. Prior to the 2020 release, the model was distributed as two libraries: the first was the core AED2 library (libaed2) and the second is the advanced modules which are bundled together as AED2+ (libaed2-plus). Currently there are 8 core modules in AED, and 12 advanced modules in AED+. For routine water quality assessments of lakes or estuaries, AED will suit most applications. For advanced users and researchers seeking to extend their simulation abilities, then AED+ includes numerous advanced options. 3.2 Model Structure The philosophy of the AED/AED2 library is that biogeochemical and ecological modules have a standard class structure. State variables defined within each module are subject to transport and mass conservation, as managed by the scalar transport facility of the host hydrodynamic model (see Section 4). Any AED module can have the ability to simulate a range of physical, chemical and biological processes, that can be generally classified as belonging to: Feedback of chemical or biological attributes to physical properties of water (light extinction, drag, density) Water column kinetic (time-varying) chemical / biological transformations (e.g., denitrification or algal growth) Water column equilibrium (instantaneous) chemical transformations (e.g., PO4 adsorption) Biogeochemical transformations in the sediment or biological changes in the benthos Vertical sedimentation or migration Fluxes across the air-water interface Fluxes across the sediment-water interface Fluxes across the terrestrial-water interface (riparian interactions) Ecohydrological dynamics and biogeochemical transformations in the exposed (dry) cells Feedbacks of soil and vegetation dynamics onto lake hydrodynamics and water balance A general module structure in the figure above. Specific methods available within a module include those shown in the table. Note that not all methods must be used in modules; developers must choose which methods are relevant to a specific module. The only exception is “define”, which is compulsory for all modules to configure the chosen state variables, diagnostic variables, and set the necessary parameters and options. 3.3 Module Summary A high level overview of the simulatable modules are include in Table 3.1 below. /* Style the buttons inside the tab */ .tab button { background-color: #2481AA; float: left; width: 50%; border: none; outline: none; cursor: pointer; padding: 14px 16px; transition: 0.3s; font-size: 17px; color: #FFFFFF; font-weight: bold; } AED-water AED-benthic Table 3.1: Modules Module Description Relevant Variables TRC: Tracers, Suspended Soilds and Retention Time Modellers can use the aed_tracer to simulate a dissolved or particulate tracer (subject to transport processes only), or this can be optionally configured to account for decay, sedimentation and/or resuspension. This module also include an option to simulate water “retention time” where the water age increments once enters into the waterbody C,\\(t_{ret}\\) OXY: Dissolved Oxygen Dissolved oxygen (DO) dynamics are able to be simulated, accounting for atmospheric exchange and sediment oxygen demand, and through links to other modules will account for microbial use during organic matter mineralisation and nitrification, photosynthetic oxygen production and respiratory oxygen consumption, and respiration by other optional biotic components O2 NUT: Inorganic Nutrients Modules exist for simulation of inorganic nutrients including phosphorus, nitrogen and silica. These modules provide basic nutrient cycling functionality and are designed to be linked with other modules (eg OGM, PHY) in order to provide a more comprehensive depiction of nutrient cycling. OGM: Organic Matter Organic matter variables cover the C, N &amp; P stored in the dissolved and particulate organic matter pools. This module optionally also supports depiction of “labile” vs “refractory” fractions of organic matter, including the breakdown and hydrolysis process, photo-degradation and mineralisation. DOM, POM PHY: Phytoplankton Highly customisable phytoplankton module for simulating change in algae, cyano-bacteria and chl-a, including phytoplankton production/respiration, nutrient uptake, excretion, vertical movement (eg buoyancy control), and grazing effects. Benthic phytoplankton may also be optionally configured. ZOO: Zooplankton Simulates different size classes of zooplankton, accounting for carbon and nutrient assimilation from grazing, carbon loss via respiration, excretion of DOM, faecal pellet production, mortality, and predation by larger organisms. TOT: Totals A summary module, allowing users to “sum-up” component variables from other modules into a total, for example, to compute TN, TP or TSS. SDF: Sediment Flux An interface module designed to provide spatially variable sediment flux settings to key modules (e.g., OXY, OGM, NUT), and/or link these variables to the dynamic sediment biogeochemistry model (SDG). Table 3.2: Modules Module Description Relevant Variables MAC: Benthic macrophytes Simulates benthic habitat and/or growth of macrophytes such as seagrasses in specified sediment zones. NA MAG: Macroalgae Simulates benthic macroalgal growth and sloughing/detachment of macroalgae and its subsequent redistribution within the domain. NA BIV: Bivalves A model of one or more groups of benthic filter feeders, able to assimilate C, N and P and recycle filter material back to the water column and sediment. NA HAB: Habitat Quality A high level module that returns habitat quality metrics based on underlying water condition attributes, for example, for seagrass or crab habitat suitability at different life stages. NA "],["DO_1.html", "4 Dissolved Oxygen 4.1 Contributors 4.2 Overview 4.3 Model Description 4.4 Setup &amp; Configuration 4.5 Case Studies &amp; Examples", " 4 Dissolved Oxygen 4.1 Contributors Matthew R. Hipsey and Peisheng Huang 4.2 Overview Dissolved Oxygen (\\(DO\\) or \\(O_2\\)) is considered to be one of the most important indicators of aquatic ecosystem conditions and is commonly used in models of water quality. Eutrophication and climate change pressures are exacerbating issues of hypoxia and anoxia in waters, ranging from small wetlands, lakes, and the coastal ocean. \\(O_2\\) dynamics respond to processes of atmospheric exchange, sediment oxygen demand, microbial respiration during organic matter mineralisation and nitrification, photosynthetic oxygen production and respiratory oxygen consumption, chemical oxygen demand, and respiration by other biotic components such as seagrass and bivalves. The \\(\\mathrm{AED}\\) oxygen module is suitable for a wide range of waterbody types, from ponds and wetlands, to lakes estuaries and the coastal ocean. 4.3 Model Description This module supports one state variable to capture the oxygen concentration, \\(O_2\\). The module is a low-level module that supports the two core processes of air-water exchange, \\(\\check{f}_{atm}^{O_2}\\), and sediment-water exchange, \\(\\hat{f}_{sed}^{O_2}\\), and is designed to be linked to by other modules that interact with oxygen. The dynamics of \\(O_2\\) can therefore be summarised as: \\[\\begin{eqnarray} \\frac{D}{Dt}O_2 = \\color{darkgray}{ \\mathbb{M} + \\mathcal{S} } \\quad &amp;+&amp; \\overbrace{\\check{f}_{atm}^{O_2}+\\hat{f}_{sed}^{O_2}}^\\text{aed_oxygen} \\\\ \\tag{4.1} &amp;-&amp; \\color{brown}{ f_{min}^{DOC} - f_{nitrf}^{NH_4} - f_{ch4ox}^{CH_4} - f_{h2sox}^{H_2S} - f_{feox}^{FeII} } \\\\ \\nonumber &amp;+&amp; \\color{brown}{ f_{gpp}^{PHY} - f_{rsp}^{PHY} - f_{rsp}^{ZOO} + \\hat{f}_{gpp}^{MAC} - \\hat{f}_{rsp}^{MAC} + f_{gpp}^{MAG} - f_{rsp}^{MAG} - \\hat{f}_{rsp}^{BIV} } \\\\ \\nonumber \\end{eqnarray}\\] where \\(\\mathbb{M}\\) and \\(\\mathcal{S}\\) refer to water mixing and boundary source terms, respectively, and the coloured \\(\\color{brown}{f}\\) terms reflect the optionally configurable contributions from other modules; these include the breakdown of \\(DOC\\) by aerobic heterotrophic bacteria to \\(CO_2\\), whereby a stoichiometrically equivalent amount of oxygen is removed, chemical oxidation reactions, such as nitrification or sulfide oxidation, photosynthetic oxygen production and respiratory consumption by phytoplankton, and also oxygen consumed and produced by any benthic biological groups. 4.3.1 Process Descriptions Oxygen solubility &amp; atmospheric exchange Atmospheric exchange is typically modelled based on Wanninkhof (1992) and the flux equation of Riley and Skirrow (1974) for the open water, and on Ho et al. (2011) for estuarine environments. The instantaneous flux at the air-water interface, \\(\\mathcal{F}_{atm}^{O_2}\\), depends on the oxygen gradient between the air and water and the gas transfer or piston velocity, \\(k_{piston}\\) \\((m/s)\\) : \\[\\begin{equation} \\mathcal{F}_{atm}^{O_2} = k_{piston}^{O_2} \\left({O_2}_{air} - {O_2}_{s}\\right) \\tag{4.2} \\end{equation}\\] where \\({O_2}_{s}\\) is the oxygen concentration in the surface waters near the air-water interface and \\(C_{air}\\) is the concentration of oxygen in the air phase near the interface (\\(mmol\\) \\(O_2/m^3\\)). A positive flux represents input of oxygen from the atmosphere to the water. \\({O_2}_{air}\\) is dependent on temperature, \\(T\\), salinity, \\(S\\) and atmospheric pressure, \\(p\\), as given by: \\[\\begin{eqnarray} {O_2}_{air}\\left[T,S,p \\right] &amp;=&amp; \\tfrac{32}{1000} \\: 1.42763 \\: \\Phi_{p}^{atm} \\\\ &amp;\\times&amp;\\exp \\left\\{ -173.4292+249.6339 \\left[\\tfrac{100}{T_K}\\right] + 143.3483 \\ln \\left[ \\tfrac{T_K}{100}\\right] - 21.8492 \\left[\\tfrac{T_K}{100}\\right] \\right. \\nonumber \\\\ &amp;+&amp; \\left. S\\left(-0.033096 +0.014259 \\left[\\tfrac{T_K}{100}\\right] -0.0017 \\left[\\tfrac{T_K}{100}\\right]^2 \\right) \\right\\} \\tag{4.3} \\end{eqnarray}\\] where \\(T_K\\) is temperature in degrees Kelvin, salinity is expressed as parts per thousand and atmospheric pressure is in kPa. The pressure correction function, \\(\\Phi_{p}^{atm}\\) varies between one and zero for the surface and high altitudes respectively: \\[\\begin{equation} \\Phi_{p}^{atm}[p]=\\frac{p_H}{p_{SL}}\\left[1-\\frac{p_{vap}}{p_H}\\right]/\\left[1-\\frac{p_{vap}}{p_{SL}}\\right]. \\tag{4.4} \\end{equation}\\] where \\(p_H\\) and \\(p_{SL}\\) is the pressure at the altitude of the simulation domain (\\(H\\)) and at sea level, respectively. As \\(\\mathrm{AED}\\) can be applied across many types of environments, spanning the ocean to small lakes and flowing waters, users can select from a range of \\(k_{piston}\\) options, or implement their own, to capture this process. The options of \\(k\\) methods are listed in the [Gas Transfer] section of Chapter 30. Once the exchange flux is computed it is applied to the surface cells of the simulated domain, and the change in the \\(O_2\\) concentration in the surface layer is: \\[\\begin{equation} \\check{f}_{atm}^{O_2} = \\frac{\\mathcal{F}_{atm}^{O_2}}{\\Delta z_{surf}} \\tag{4.5} \\end{equation}\\] where \\(\\Delta z_{surf}\\) is the surface layer thickness. Sediment oxygen demand Modelling sediment oxygen demand (\\(SOD\\)) can take a variety of forms. The simplest form in AED is the “static” model whereby \\(SOD\\) varies as a function of the overlying water temperature and bottom water dissolved oxygen concentration: \\[\\begin{equation} \\mathcal{F}_{sed}^{O_2}[T,O_2] = F_{sed}^{oxy} \\: \\theta_{sod}^{T-20} \\: \\Phi_{sod}^{oxy}\\left[O_2\\right] \\tag{4.6} \\end{equation}\\] where \\(F_{sed}^{oxy}\\) is the maximum oxygen flux across the sediment-water interface at \\(20^{\\circ}C\\). The oxygen limitation is computed based on: \\[\\begin{equation} \\Phi_{sod}^{oxy}\\left[O_2\\right]=\\frac{O_2}{K_{sod}^{oxy}+O_2} \\tag{4.7} \\end{equation}\\] where \\(K_{sod}^{oxy}\\) is the half-saturation constant controlling the sediment oxygen demand. Once the exchange flux is computed it is applied to the bottom cells of the simulated domain, and the change in the \\(O_2\\) concentration in the bottom layer is: \\[\\begin{equation} \\hat{f}_{sed}^{O_2} = \\frac{\\mathcal{F}_{sed}^{O_2}}{\\Delta z_{bot}} \\tag{4.8} \\end{equation}\\] where \\(\\Delta z_{bot}\\) is the bottom layer thickness. Spatially variable sediment fluxes: The approach described above is the most simple and default method for capturing oxygen fluxes into the sediment, and is referred to as the static model. This approach can be extended to allow for spatial variability in \\(F_{sed}^{oxy}\\) by engaging the link to the aed_sedflux module, where the host models support multiple benthic cells or zones. In this case, users input spatially discrete values of \\(F_{sed}^{oxy}\\). Dynamically varying sediment flux rates: Where dynamic rates of \\(O_2\\) are required to flux to the sediment (e.g. in response to episodic loading of organic material to the sediment, or for assessment of long-term changes in sediment quality), then the above expressions may be replaced instead with dynamically calculated variables in aed_seddiagenesis via a link created with the aed_sedflux module. 4.3.2 Optional Module Links Other oxygen sources/sinks are indicated in Eq (4.1). These include: Oxygen consumption during bacterial mineralisation of DOC is done in the organic matter module - aed_organic_matter; Oxygen consumption during nitrification is done in the nitrogen module - [aed_nitrogen][Inorganic Nutrients: C/N/P/Si]; Oxygen production/consumption by phytoplankton phtosynthesis/respiration is done in the phytoplankton module - aed_phytoplankton; Oxygen consumption due to zooplankton respiration is done in the zooplankton module - [aed_zooplankton][Zooplankton]; Oxygen production/consumption by seagrass phtosynthesis/respiration is done in the macrophyte module - aed_macrophyte; Oxygen consumption due to bivalve respiration is done in the benthic module - [aed_bivalve][Benthic Vegetation]; 4.3.3 Feedbacks to the Host Model The oxygen module has no feedbacks to the host hydrodynamic model. 4.3.4 Variable Summary The default variables created by this module, and the optionally required linked variables needed for full functionality of this module are summarised in Table 4.1. The diagnostic outputs able to be output are summarised in Table 4.2. State variables Table 4.1: Oxygen - state variables AED name Symbol Description Unit Type Typical Range Comments aed_oxygen OXY_oxy \\[\\mathbf{O_2}\\] dissolved oxygen concentration \\[\\small{mmol\\:O_2/m^3}\\] pelagic 0 - 500 . Dependent variables SDF_Fsed_oxy \\[\\mathbf{F}_{sed}^{oxy}\\] sediment \\(O_2\\) flux \\[\\small{mmol \\:O_2/m^2/s}\\] benthic -300 - 300 read and output as /day, but internally used as /s Diagnostics Table 4.2: Oxygen - diagnostic variables AED name Symbol Description Unit Type Typical Range Comments diag_level = 0+ OXY_sat \\[\\mathbf{O_2^{sat}}\\] oxygen saturation \\[\\small{\\%}\\] pelagic 0-200 . diag_level = 2+ OXY_sed_oxy \\[\\mathbf{F}_{sed}^{oxy}\\] \\(O_2\\) exchange across sediment-water interface \\[\\small{mmol\\: O_2/m^2/d}\\] benthic 0 - 50 . OXY_atm_oxy_flux \\[\\mathbf{F}_{atm}^{oxy}\\] \\(O_2\\) exchange across atm-water interface \\[\\small{mmol \\:O_2/m^2/d}\\] surface 0 - 100 . diag_level = 9+ OXY_atm_oxy_exch3d \\[\\mathbf{\\check{f}}_{atm}^{oxy}\\] \\(O_2\\) exchange across atm-water interface \\[\\small{mmol \\:O_2/m^3/d}\\] surface 0 - 1 . 4.3.5 Parameter Summary The parameters and settings used by this module are summarised in Table 4.3. Table 4.3: Oxygen module parameters and configuration options AED name Symbol Description Unit Type Typical Range Comments Initialisation oxy_initial \\[O_2|_{t=0}\\] initial \\(O_2\\) concentration \\[\\small{mmol\\: O_2/m^3}\\] float 0 - 5000 can be overwritten by initial condition files oxy_min \\[O_2\\rfloor_{min}\\] minimum \\(O_2\\) concentration \\[\\small{mmol\\: O_2/m^3}\\] float 0 optional limitier oxy_max \\[O_2\\rceil^{max}\\] maximum \\(O_2\\) concentration \\[\\small{mmol\\: O_2/m^3}\\] float 600 optional limitier Sediment exchange Fsed_oxy \\[F_{sed}^{oxy}\\] sediment \\(O_2\\) flux at 20C \\[\\small{mmol\\: O_2/m^2/d}\\] float -300 - 300 . Ksed_oxy \\[K_{sod}^{O_2}\\] half-saturation oxygen conc. controlling \\(O_2\\) flux \\[\\small{mmol\\: O_2/m^3}\\] float 20 - 100 . theta_sed_oxy \\[\\theta_{sed}^{oxy}\\] Arrhenius temperature multiplier for sediment \\(O_2\\) flux \\[\\small{-}\\] float 1.0 - 1.2 . Fsed_oxy_variable variable name to link to for spatially resolved sediment zones \\[\\small{-}\\] string SDF_Fsed_oxy optional link to enable spatially resolved fluxes Atmospheric exchange oxy_piston_model \\[\\Theta_{oxy}^{piston}\\] selection of air/water \\(O_2\\) flux velocity method \\[\\small{-}\\] integer 1 - 9 see options in the Gas Transfer section altitude \\[H\\] altitude of site above sea level \\[\\small{m}\\] float 0 - 4000 defaults to 0; Eq (4.4) used for \\(H \\gt 1\\) 4.4 Setup &amp; Configuration An example aed.nml parameter specification block for the aed_oxygen module is shown below: &amp;aed_oxygen oxy_initial = 250.0 oxy_min = 0 oxy_max = 500 Fsed_oxy = -40.0 Ksed_oxy = 100.0 theta_sed_oxy = 1.08 ! Fsed_oxy_variable = &#39;SDF_Fsed_oxy&#39; ! altitude = 1000 / Note that when users link Fsed_oxy_variable then Fsed_oxy is not required as this parameter will be set for each each sediment zone from values input via the aed_sedflux module. The entries oxy_min and oxy_max are optional. 4.5 Case Studies &amp; Examples 4.5.1 Case Study: Swan-Canning Estuary The Swan-Canning Estuary in Western Australia experiences hypoxia and anoxia due to the strong salt-wedge that forms within the system, and the high sediment oxygen demand. Huang et al. (2018) used the aed_oxygen model with the TUFLOW-FV hydrodynamic model to captured the large spatio-temporal variability in oxygen distribution. Using spatial zones with different values of Fsed_oxy, the simulations show very high accuracy in resolving the “dome” of low oxygen associated with the salt-wedge. Figure 1: Cross-section plots comparing modelled and field salinity (psu, left) and \\(O_2\\) (mg/L, right) for Sep-Dec 2008 within the Swan River. The field plots are based on contouring approx. 20 profile data locations. The results of the model were integrated over the length of the modelled domain to demonstrate the model’s performance in capturing the system-scale areal extent of hypoxia (\\(O_2&lt;4\\:mg/L\\)) and anoxia (\\(O_2&lt;2\\:mg/L\\)). Huang et al. (2018) also used the validated model to explore different remediation options based on artificial oxygenation inputs. Figure 2: The total area of anoxia (&lt;2 mg O2 / L) and hypoxia (&lt;4 mg O2 / L) within the estuary for a) 2008 and b) 2010, comparing the model (black line) and spatially interpolated weekly profile data (shaded region). 4.5.2 Publications html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #yxexarxcjz .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 12px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: 100%; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #yxexarxcjz .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #yxexarxcjz .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #yxexarxcjz .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #yxexarxcjz .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #yxexarxcjz .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #yxexarxcjz .gt_col_heading { color: #FFFFFF; background-color: #14759E; font-size: 14px; font-weight: bold; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #yxexarxcjz .gt_column_spanner_outer { color: #FFFFFF; background-color: #14759E; font-size: 14px; font-weight: bold; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #yxexarxcjz .gt_column_spanner_outer:first-child { padding-left: 0; } #yxexarxcjz .gt_column_spanner_outer:last-child { padding-right: 0; } #yxexarxcjz .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #yxexarxcjz .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #D3D3D3; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #yxexarxcjz .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #D3D3D3; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #yxexarxcjz .gt_from_md > :first-child { margin-top: 0; } #yxexarxcjz .gt_from_md > :last-child { margin-bottom: 0; } #yxexarxcjz .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #yxexarxcjz .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #yxexarxcjz .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #yxexarxcjz .gt_row_group_first td { border-top-width: 2px; } #yxexarxcjz .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #yxexarxcjz .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #yxexarxcjz .gt_first_summary_row.thick { border-top-width: 2px; } #yxexarxcjz .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #yxexarxcjz .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #yxexarxcjz .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #yxexarxcjz .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #yxexarxcjz .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #yxexarxcjz .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #yxexarxcjz .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #yxexarxcjz .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #yxexarxcjz .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #yxexarxcjz .gt_left { text-align: left; } #yxexarxcjz .gt_center { text-align: center; } #yxexarxcjz .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #yxexarxcjz .gt_font_normal { font-weight: normal; } #yxexarxcjz .gt_font_bold { font-weight: bold; } #yxexarxcjz .gt_font_italic { font-style: italic; } #yxexarxcjz .gt_super { font-size: 65%; } #yxexarxcjz .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #yxexarxcjz .gt_asterisk { font-size: 100%; vertical-align: 0; } #yxexarxcjz .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #yxexarxcjz .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #yxexarxcjz .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } Author/Year Paper Title Description Bruce et al. (2014) Hydrodynamic controls on oxygen dynamics in a riverine salt wedge estuary, the Yarra River estuary, Australia. NA Bruce et al. (2015) A model of oxygen and nitrogen biogeochemical response to hydrodynamic regimes in the Yarra River estuary. NA Snortheim et al. (2017) Meteorological drivers of hypolimnetic anoxia in a eutrophic, north temperate lake. NA Huang et al. (2018) Assessing artificial oxygenation in a riverine salt-wedge estuary with a three-dimensional finite-volume model NA Huang et al. (2019) An integrated modelling system for water quality forecasting in an urban eutrophic estuary: The Swan-Canning Estuary Virtual Observatory. NA Ladwig et al. (2021) Lake thermal structure drives interannual variability in summer anoxia dynamics in a eutrophic lake over 37 years. NA References "],["Carbon_1.html", "5 Inorganic Carbon 5.1 Contributors 5.2 Overview 5.3 Model Description 5.4 Setup &amp; Configuration 5.5 Case Studies &amp; Examples", " 5 Inorganic Carbon 5.1 Contributors Peisheng Huang, Kamilla Kurucz, and Matthew R. Hipsey 5.2 Overview Understanding carbon cycling is central to understanding food webs and how aquatic communities are structured and supported (Dodds and Whiles, 2010). Exchange of carbon between aquatic systems and the atmosphere is also fundamental in influencing climate (e.g. Cai, 2011; Borges and Abril, 2012). Accordingly, there are a wide range of applications that require simulation of carbon species. The \\(\\mathrm{AED}\\) library can be used to simulate both the organic and inorganic pools of carbon. As carbon is a core building block of an aquatic ecosystem, aed_carbon (\\(\\mathrm{CAR}\\)) is designed as a low-level module for managing inorganic carbon pools, and is able to be linked to by higher level modules associated with organic matter cycling, primary production, and other biotic groups. In particular, organic carbon is the currency of energy exchange through food webs, and the processes for modelling organic carbon are described in aed_organic_matter. This chapter presents the forms of inorganic carbon and fluxes of carbon in the aquatic environment and how they are modelled in the aed_carbon module 5.3 Model Description The core variables included in the aed_carbon module are Dissolved Inorganic Carbon (DIC) and methane (CH4). The dynamics for DIC is captured in the model when simDIC = .true.. The rate of change of DIC concentration as it moves with the water is calculated from local effects associated with air-water exchange (\\(\\check{f}_{atm}^{CO_2}\\)), oxidation of CH4, (\\(f_{ox}^{CH_4}\\)), and sediment-water exchange (\\(\\hat{f}_{sed}^{DIC}\\)), which is summarized as: \\[\\begin{eqnarray} \\frac{D}{Dt}DIC = \\color{darkgray}{ \\mathbb{M} + \\mathcal{S} } \\quad &amp;+&amp; \\overbrace{\\check{f}_{atm}^{CO_2}+f_{ox}^{CH_4}+\\hat{f}_{sed}^{DIC} }^\\text{aed_carbon} \\\\ \\tag{5.1} &amp;+&amp; \\color{brown}{ f_{min}^{DOC} - f_{gpp}^{PHY} + f_{rsp}^{PHY} + f_{rsp}^{ZOO} } \\\\ \\nonumber &amp;-&amp; \\color{brown}{ \\hat{f}_{gpp}^{MAC} + \\hat{f}_{rsp}^{MAC} - f_{gpp}^{MAG} - f_{rsp}^{MAG} + \\hat{f}_{rsp}^{BIV} } \\\\ \\nonumber \\end{eqnarray}\\] where \\(\\mathbb{M}\\) and \\(\\mathcal{S}\\) refer to water mixing and boundary source terms, respectively, and the coloured \\(\\color{brown}{f}\\) terms reflect DIC fluxes computed by other (optionally) linked modules such as modules of organic matter (\\(\\mathrm{OMG}\\)), phytoplankton (\\(\\mathrm{PHY}\\)) or zooplankton (\\(\\mathrm{ZOO}\\)). The dynamics for CH4 is captured in the model when simCH4 = .true.. CH4 is formed during the decomposition of organic material by microbial methanogenesis (e.g., Cicerone and Oremland, 1988), which requires strictly anaerobic conditions and is therefore usually restricted to be deep within aquatic sediment. Inputs to the water therefore are from sediment CH4 production, which can enter the water column either as a dissolved flux or via ebullition (bubble release), or from external sources such as wastewater discharges. Once in the water, dissolved CH4 is the balance between inputs from the sediment and losses from air-water exchange and CH4 oxidation to DIC. The rate of change of CH4 concentration as it moves with the water is therefore calculated as: \\[\\begin{eqnarray} \\frac{D}{Dt}CH_4 = \\color{darkgray}{ \\mathbb{M} + \\mathcal{S} } \\quad &amp;+&amp; \\overbrace{\\check{f}_{atm}^{CH_4}-f_{ox}^{CH_4}+\\hat{f}_{sed}^{CH_4} +f_{dis}^{CH_{4-bubble}} }^\\text{aed_carbon} \\\\ \\tag{5.2} \\end{eqnarray}\\] where \\(\\check{f}_{atm}^{CH_4}\\) is the air-water exchange of dissolved methane and \\(\\hat{f}_{sed}^{CH_4}\\) is the sediment diffusive release flux. Bubbles moving through the water column after release from the sediment can also dissolve, denoted \\(f_{dis}^{CH_{4-bubble}}\\). The details of how each flux relevant to DIC and CH4 is calculated, and the associated parameter settings, are described in the next sections. For details on how to model organic carbon refer to the aed_organic_matter model. 5.3.1 Process Descriptions 5.3.1.1 Carbonate buffering and pH In most circum-neutral waters the carbonate buffer system controls the pH conditions within the water. When CO2 within the atmosphere (\\(CO_{2(gas)}\\)) is dissolved in water, it can exist in a variety of forms. Initially, carbon dioxide will dissolve, \\(CO_{2_{(aq)}}\\), which can then form carbonic acid, \\(H_2CO_3\\), and dissociate into bicarbonate, \\(HCO_3^-\\), and carbonate, \\(CO_3^{2-}\\), ions. \\[\\begin{eqnarray} CO_{2_{(aq)}} &amp;\\rightleftharpoons&amp; CO_{2_{(gas)}} \\\\ CO_{2_{(aq)}} + H_2O &amp;\\rightleftharpoons&amp; H_2CO_3 \\\\ H_2CO_3 &amp;\\rightleftharpoons&amp; H^+ + HCO_3^- \\\\ HCO_3^- &amp;\\rightleftharpoons&amp; H^+ + CO_3^{2-} \\end{eqnarray}\\] Figure 5.1: Bjerrum plot of DIC speciation. The sum of the concentrations of all these forms is the inorganic carbon concentration (DIC), and the composition of these forms depends on acidity (pH). The total \\(DIC\\) state variable is the sum of carbonate species in a water parcel, which is conservative with respect to hydrodynamics: \\[\\begin{equation} DIC = [CO_{3}^{2-}]+[HCO_{3}^{-}]+[CO_{2}]+[H_2CO_{3}]. \\label{eq:DIC} \\end{equation}\\] To capture the interaction between carbonate species that make up DIC, each cell is treated as a closed system, as in a titration, where fluxes into and out of the system are specified, such as fluxes due to respiration, dissolved sediment fluxes, or atmospheric exchange. The changes due to these fluxes alter the \\(CO_{2_{(aq)}}\\) concentration without changing the alkalinity, allowing for the speciation and pH to be recomputed at the end of the time-step. aed_carbon provides three options for modelling the bicarbonate equilibrium by switching the CO2_model options: The users can choose the aed_geochemistry module, or adopts the widely used CO2SYS code (Lewis and Wallace, 1998) or Butler (1982) code to calculate the partial pressure of CO2 (pCO2) and bicarbonate system. These options all lead to creation of state variables for DIC and pH, and their concentrations need to be specified in the boundary conditions. The use of each option is described in below sections. 5.3.1.1.1 co2_model = 0 This option is selected if the user wishes to defer the speciation, pCO2 and pH calculation to the geochemistry model in aed_geochemistry. In this option, aed_carbon creates the DIC and pH state variables, will compute the atmospheric exchange and sediment fluxes, but not update the speciation, pCO2 or pH. When using this approach, users must pay attention to correctly configure the aed_geochemistry model to link to DIC, pCO2 and pH within the aed_carbon module. To resolve carbonate buffering that module can be setup with the following components, and species: \\[\\begin{eqnarray} X &amp;\\in&amp; \\{CO_3^{2-}, H^+,H_2O\\} \\\\ C &amp;\\in&amp; \\{CO_2, HCO_3^-, H_2CO_3,CO_3^{2-},H^+,OH^-\\} \\end{eqnarray}\\] This will be solved each time the geochemical module is run. Fluxes of \\(CO_2\\) between the atmosphere and sediment or from bioloigcal process will also be applied to the \\(DIC\\) variable and therefore dynamically affect \\(pH\\). For users interested in simulating calcite precipitation, then this may also be achieved by configuring the geochemistry module, and enabling Calcite as a simulated mineral component. 5.3.1.1.2 co2_model = 1 This option adopts the CO2SYS code (Lewis and Wallace, 1998) in which the bicarbonate system was modelled from DIC (mmol m-3) and total alkalinity (TA, mmol m-3), with water temperature (T, degrees), salinity (S, PSU) and water pressure (P, dbar) derived from the coupled hydrodynamic model, and DIC concentration derived from the aed_carbon model. There are multiple options for TA calculation methods in this code depending on the data availability and environment of the study site, which can be switched by the alk_mode option: \\[\\begin{equation} \\Theta_{alk\\_code}^{car}=\\left\\{ \\begin{array}{@{}ll@{}} 0, &amp; \\text{carbonate alkalinity only}\\\\ 1, &amp; \\text{dependance on salinity}\\\\ 2-5 &amp; \\text{dependance on salinity and DIC}\\\\ \\end{array}\\right. \\end{equation}\\] For freshwaters, there is a simple freshwater alkalinity option (alk_mode = 0), whereby TA is assumed to be dominated by the carbonate alkalinity. In this option, TA is calculated from the carbonate species according to: \\[\\begin{equation} TA=-[H^+ ]+[HCO_3^- ]+2[CO_3^(2-) ]+[OH^-] \\end{equation}\\] For hardwater lakes, estuaries or coastal systems, then other ions contribute significantly to the total alkalinity and the assumption above is no longer valid. However, the component ions needed for an alkalinity calculation are not always commonly available or included in the model and so approximations are needed to estimate TA. TA is a quasi-conservative parameter and it has been a popular practice in coastal modelling to predict TA from salinity (e.g. Lee et al. 2006; Alin et al., 2012; Takahashi et al., 2014), or from combination of salinity and DIC concentration (Kim and Lee, 2009; Jones et al., 2016). Accordingly, aed_carbon supports a few options to model the TA in coastal waters. The first alk_mode option (\\(\\Theta_{alk\\_code}^{car}=1\\)) approximates the TA from salinity as: \\[\\begin{equation} TA=a+bS \\end{equation}\\] where \\(a\\) and \\(b\\) are constant coefficients, with pre-defined values of \\(a=1627.4\\) and \\(b=22.176\\) derived from a study case in the Caboolture River estuary. Other remaining alk_mode options (\\(\\Theta_{alk\\_code}^{car}=2-5\\)) approximate the TA from salinity and DIC concentration with a quadratic polynomial relationship as: \\[\\begin{equation} TA=p00+p10\\ S+p01\\ DIC+p20\\ S^2+p11\\ S\\ DIC+p02\\ {DIC}^2 \\end{equation}\\] where \\(p00\\), \\(p10\\), \\(p01\\), \\(p20\\), \\(p11\\), \\(p02\\) are constant coefficients. For this method the available options include: alk_mode=2: constant coefficients derived from all field work in Noosa, Maroochy, and Brisbane estuaries in Australia; alk_mode=3: constant coefficients derived from field work in Noosa River; alk_mode=4: constant coefficients derived from field work in Maroochy River; alk_mode=5: constant coefficients derived from field work in Brisbane River; The constant coefficients in these options are provided in Table 5.1. A case study using alk_mode=5 in Brisbane River is given in Section 5.5.1. Users may wish to implement tailored alkalinity relationships as additional alk_mode options for specific study sites and use-cases. Table 5.1: Constant coefficients in alk_mode options 2 - 5. alk_mode \\(p00\\) \\(p10\\) \\(p01\\) \\(p20\\) \\(p11\\) \\(p02\\) alk_mode=2 334.40 -2.123 0.7194 0.2259 0.0007654 0.0000496 alk_mode=3 -258.80 34.590 0.9923 0.8186 -0.0310100 0.0001045 alk_mode=4 -47.51 -17.210 1.3200 0.1439 0.0122400 -0.0002055 alk_mode=5 357.80 -2.095 0.6931 0.2244 0.0007714 0.0000563 5.3.1.1.3 co2_model = 2 This option adopts the approach of Butler (1982) to model the carbonate system in freshwater environment. In a closed carbonate system, the TA, DIC and pH are related by: \\[\\begin{equation} TA=DIC \\frac{K_{a1}[H^+]+2K_{a1}K_{a2}}{[H^+]^2+K_{a1}[H^+]+K_{a1}K_{a2}}+ \\frac{K_w}{[H^+]} -[H^+] \\label{eq:TA} \\end{equation}\\] where \\(K_w\\) is the ion product of water, \\(K_{a1}\\) is the first acidity constant, \\(K_{a2}\\) is the second acidity constant. \\(pH\\) is calculated from: \\[\\begin{equation} pH = - \\log_{10}[H^+] \\end{equation}\\] and \\(DIC\\) is defined as: \\[\\begin{equation} DIC = [CO_{3}^{2-}]+[HCO_{3}^{-}]+[CO_{2}]+[H_2CO_{3}] \\label{eq:DIC2} \\end{equation}\\] where all concentrations are in (\\(mmol\\:C/m^3\\)). Note that the concentration of hydrated carbon dioxide, \\([H_2CO_3]\\), is considered to be negligible and is therefore omitted. The conversion between the carbon dioxide partial pressure, \\(pCO_2\\) and carbon dioxide concentration (\\(molL^{-1}\\)) is given by: \\[\\begin{equation} [CO_2]=K_HpCO_2 \\label{eq:pCO2} \\end{equation}\\] where \\(K_H\\) is the activity coefficient. The ionic strength of the water impacts the dissociation constants. Ionic strength, \\(I\\), is typically defined as : \\[\\begin{equation} I = 0.5 \\left([Na^+]+[H^+]+[HCO_{3}^-]+4[CO_{3}^{2-}]+[H^+]/K_w \\right). \\end{equation}\\] Rather than model this explicitly, the ionic strength is entered into the model as a constant, and is not assumed to vary significantly in space or time for a given system. From the ionic strength, an activity coefficient is defined as: \\[\\begin{equation} f = \\left( \\frac{I^{1/2}}{1+I^{1/2}}-0.2I \\right) \\left(\\frac{298}{T_K} \\right)^{2/3}. \\end{equation}\\] The dissociation constants are then computed following: \\[\\begin{eqnarray} \\log_{10}\\left(K_{H}^{i+1}\\right) &amp;=&amp; \\log_{10}\\left(K_{H}^{0}\\right) -bI \\\\ log_{10}\\left(K_{w}^{i+1}\\right) &amp;=&amp; \\log_{10}\\left(K_{w}^{0}\\right) +f \\\\ log_{10}\\left(K_{a1}^{i+1}\\right) &amp;=&amp; \\log_{10}\\left(K_{a1}^{0}\\right) +f+bI \\\\ log_{10}\\left(K_{a2}^{i+1}\\right) &amp;=&amp; \\log_{10}\\left(K_{a2}^{0}\\right) +2f \\end{eqnarray}\\] where \\(b=0.105\\) . For this system, if two of the three components (i.e. \\(TA\\), \\(pH\\) or \\(DIC\\)) are known the third can be determined. In AED, \\(pH\\) and \\(DIC\\) are tracked as state variables, and at each time step \\(TA\\) is also computed and avalable via a diagnostic output. The carbonate speciation for a given value of \\(pH\\) and \\(DIC\\) is then estimated from: \\[\\begin{eqnarray} \\left[CO_{3}^{2-}\\right] &amp;=&amp; DIC \\frac{K_{a1}K_{a2}}{[H^+]^2+K_{a1}[H^+]+K_{a1}K_{a2}}, \\label{eq:speciation1} \\\\ \\left[HCO_{3}\\right] &amp;=&amp; DIC \\frac{K_{a1}[H^+]}{[H^+]^2+K_{a1}[H^+]+K_{a1}K_{a2}}, \\label{eq:speciation2} \\\\ \\left[CO_{2}\\right]&amp;=&amp;DIC\\frac{[H^+]^2}{[H^+]^2+K_{a1}[H^+]+K_{a1}K_{a2}}. \\label{eq:speciation3} \\end{eqnarray}\\] Using this framework, the inorganic carbon model co2_model = 2 operates as follows: from initial field measurements of TA and pH, calculate DIC using \\(\\ref{eq:TA}\\) calculate initial carbonate speciation using \\(\\ref{eq:speciation1}\\)-\\(\\ref{eq:speciation3}\\) calculate partial pressure of \\(CO_2\\) using \\(\\ref{eq:pCO2}\\) start timestep loop calculate atmospheric \\(CO_2\\) flux using \\(\\ref{eq:atmco2}\\) calculate internal \\(CO_2\\) fluxes from phytoplankton photosynthesis/respiration, zooplankton respiration and bacterial respiration calculate new DIC using \\(\\ref{eq:DIC}\\) assuming \\(TA\\) constant, as \\(CO_2\\) does not change the alkalinity directly, calculate new \\(pH\\) by iteratively solving \\(\\ref{eq:TA}\\) calculate new carbonate speciation using \\(\\ref{eq:speciation1}\\)-\\(\\ref{eq:speciation3}\\) calculate new partial pressure of \\(CO_2\\) using \\(\\ref{eq:pCO2}\\) update new \\(TA\\) and \\(DIC\\) concentratino estimates 5.3.1.2 Sediment exchange The exchange fluxes of DIC and CH4 between the sediment and overlaying water are modelled as a function of the overlying water temperature and bottom water dissolved oxygen concentration: \\[\\begin{equation} \\mathcal{F}_{sed}^{DIC}[T,O_2]=F_{sed}^{DIC} \\theta_{sed - DIC}^{T-20} \\phi_{O_2}^{DIC}[O_2] \\tag{5.3} \\end{equation}\\] \\[\\begin{equation} \\mathcal{F}_{sed}^{CH_4}[T,O_2]=F_{sed}^{CH_4} \\theta_{sed - CH_4}^{T-20} \\phi_{O_2}^{CH_4}[O_2] \\tag{5.4} \\end{equation}\\] where the parameters \\(F_{sed}^{DIC}\\) and \\(F_{sed}^{CH_4}\\) are the maximum flux rate across the sediment-water interface at 20°C, the \\(\\theta_{sed-DIC}\\) and \\(\\theta_{sed-CH_4}\\) are the Arrhenius temperature multiplier for temperature control. The last item is the oxygen mediation of the fluxes. Oxygen mediation of the inorganic carbon fluxes: The sediment flux can be changed by bottom water O2 concentration. If the aed2_oxygen module is correctly linked to the carbon module then this setting will switch on automatically. At low O2 concentrations, the amount of DIC fluxing out of the sediment is decreased and at high O2 concentrations, it is set close to the \\(F_{sed}^{DIC}\\), as shown in Equation (5.3). This is a convenient simplification that can be tuned within this module, rather than a more complicated full set of biogeochemical reactions. The half-saturation oxygen parameter \\(K_{sed-DIC}^{O_2}\\) can be used to tune the DIC flux dependence on bottom water O2. A similar function can be used to tune the CH4 flux using the parameter \\(K_{sed-CH_4}^{O_2}\\), as shown in Equation 6.22. At high O2 concentrations, CH4 flux decreases, and at low O2 concentrations, the flux is close to the parameter \\(F_{sed}^{CH_4}\\). \\[\\begin{equation} \\Phi_{O2}^{DIC}\\left[O_2\\right]=\\frac{O_2}{O_2+K_{sed-DIC}^{O2}} \\tag{5.5} \\end{equation}\\] \\[\\begin{equation} \\Phi_{O2}^{CH_4}\\left[O_2\\right]=\\frac{K_{sed-CH_4}^{O_2}}{O_2+K_{sed-CH_4}^{O_2}} \\tag{5.6} \\end{equation}\\] Once the exchange fluxes are computed it is applied to the bottom cells of the simulated domain, and the changes in the DIC and CH4 concentrations in the bottom layer are: \\[\\begin{equation} {\\hat{f}}_{sed}^{DIC}= \\frac{F_{sed}^{DIC}}{\\Delta z_{bot}} \\tag{5.7} \\end{equation}\\] \\[\\begin{equation} {\\hat{f}}_{sed}^{CH_4}= \\frac{F_{sed}^{CH_4}}{\\Delta z_{bot}} \\tag{5.8} \\end{equation}\\] where \\(\\Delta z_{bot}\\) is the bottom layer thickness. Advanced options: The approach described above is the most simple and default method for capturing inorganic carbon fluxes from the sediment, and is referred to as the static model. This approach can be extended to allow for spatial variability in \\(F_{sed}^{DIC}\\) and \\(F_{sed}^{CH_4}\\), by engaging the link to the aed_sedflux module, where the host models support multiple benthic cells or zones. In this case, users input spatially discrete values of \\(F_{sed}^{DIC}\\) and \\(F_{sed}^{CH4}\\). Where dynamic rates of DIC and CH4 are required to flux to/from the sediment (e.g. in response to episodic loading of organic material to the sediment, or for assessment of long-term changes in C loading), then the above expressions (Eq (5.3) and (5.4)) are replaced instead with dynamically calculated variables in aed_seddiagenesis, via a link created with the aed_sedflux module. Methane ebullition Methane bubbles are formed when anoxic methane production in the sediments exceeds the rate of oxidation and diffusion. As the bubbles overcome sediment tension, they are released to the water column. The sediment bubble flux is greatly depth-dependent and is enhanced by increasing temperatures (DelSontro et al., 2010). Moreover, it has been observed that falling water levels and decreasing hydrostatic pressure also result in increased ebullition rates (Casper et al., 2000). The ebullition flux is formulated mathematically as follows: \\[\\begin{equation} {\\hat{f}}_{sed}^{CH_{4}-bub}[T,\\Delta z]=F_{sed}^{CH_{4}-bub} \\theta_{sedch4-bub}^{T-20} \\Phi_{\\Delta z}^{CH_{4}-bub}[\\Delta z]\\frac{1}{\\Delta z} \\tag{5.9} \\end{equation}\\] The sediment bubble flux \\(F_{sed}^{CH_{4}-bub}\\) can be set as a constant or depth-dependent flux. By setting up a link to the aed_sedflux module (Fsed_ebb_variable = 'SDF_Fsed_ch4_ebb'), different sediment bubble flux rates can be implemented in each sediment zone, accounting for the spatial variability of ebullition. \\(\\Phi_{\\Delta z}^{{CH}_{4-bub}}\\left[\\Delta z\\right]\\) accounts for the effect of water level fluctuations (z) on the sediment bubble flux and is calculated by adopting a site-specific regression equation from Lake Kinneret derived by Ostrovsky et al., (2013). \\[\\begin{equation} \\Phi_{\\Delta z}^{CH_{4}-bub}[\\Delta z] = c_{n}\\text{exp}\\{\\varepsilon_{reg}(\\bar{z}-z)\\} \\tag{5.10} \\end{equation}\\] Where \\(c_n\\) is a normalising constant, \\(\\varepsilon_{reg}\\) is the exponential factor from the regression equation. The methane bubbles released from the sediments either dissolve in the water column or are directly emitted to the atmosphere. The dissolution rate of methane bubbles can be set constant, or depth-dependent by splitting the water column into two layers and assigning different dissolution rates above (ch4_bub_disf1) and below (ch4_bub_disf2) the splitting depth (ch4_bub_disp). In stratified lakes, this functionality can be used to set different dissolution rates in the epilimnion and hypolimnion (\\(R_{diss}\\left[z\\right]\\)) to account for the effect of different thermal layers on dissolution rates. \\[\\begin{equation} f_{dis}^{{CH}_{4-bub}}=R_{diss}\\left[z\\right]\\ {\\hat{f}}_{sed}^{CH_{4}-bub} \\tag{5.11} \\end{equation}\\] Methane oxidation Aerobic oxidation is mediated by methanotrophs and is the most significant sink for dissolved methane. The metabolic rate of methanotrophs increases with increasing temperatures, hence aerobic oxidation is temperature sensitive. The aerobic oxidation rate can be described according to Michealis-Menten Kinetics as follows (Schmid et al., 2017): \\[\\begin{equation} f_{ox}^{{CH}_4}=\\ R_{oxmax}^{{CH}_4}\\ \\Phi_{O2}^{ch4-ox}\\left[O_2\\right]\\theta_{ox}^{T-20}[CH_4] \\tag{5.12} \\end{equation}\\] where \\(R_{oxmax}^{{CH}_4}\\) is the maximum reaction rate of methane oxidation at 20˚C (/day), \\(\\Phi_{O2}^{ch4-ox}\\left[O_2\\right]\\) is the oxygen mediation of the oxidation rate, \\(\\theta_{ox}\\) is the temperature multiplier for methane oxidation, \\(T\\) the water temperature, and \\([CH_4]\\) is the methane concentration in the water. The methane oxidation rate can be changed by water O2 concentration. At low O2 concentrations, the amount of CH4 oxidated to DIC decreased and at high O2 concentrations, it is set close to the \\(R_{oxmax}^{{CH}_4}\\), as shown in Equation (5.13): \\[\\begin{equation} \\Phi_{O_2}^{CH_{4}-ox}\\left[O_2\\right]=\\frac{O_2}{O_2+K_{CH_{4}-ox}^{O_2}} \\tag{5.13} \\end{equation}\\] where O2 is the dissolved oxygen concentration, \\(K_{CH_{4}-ox}^{O_2}\\) is the half saturation oxygen concentration for methane oxidation. Air-water exchange Carbon dioxide and methane transfer occurs across the air-water interface based on the gas solubility, the amount of turbulence at the interface and the concentration gradient between the air and water, using widely used approach introduced by Wanninkhof (1992). The air-water exchange rate of CO2 is modelled as: \\[\\begin{equation} \\mathcal{F}_{atm}^{{CO}_2}=\\ k_{600}^{CO_2}\\ \\Upsilon_{0-CO_2}({pCO}_2^w-{pCO}_2^a) \\tag{5.14} \\end{equation}\\] where the \\({pCO}_2^w\\) and \\({pCO}_2^a\\) are the partial pressure of CO2 in the water surface and the air (in unit of atm), respectively; \\(\\Upsilon_{0-CO_2}\\) is the solubility of CO2, and \\(k_{600}^{CO_2}\\) is the air-water gas transfer velocity for CO2. As AED can be applied across many types of environments, spanning the ocean to small lakes and flowing waters, users can select from a range of gas exchange piston velocity models and Schmidt models, or implement their own, to capture this process. The options are listed in the ‘Gas Transfer’ section of the ‘Generic utilities &amp; Functions’ chapter. The switches of the piston and Schmidt models are set via the use of \\(\\Theta_{gas}^{piston}\\) and \\(\\Theta_{gas}^{schmidt}\\), respectively (see option details in chapter 30 Generic utilities &amp; Functions). The exchange flux can then be added to or subtracted from the surface cells of an aquatic system, and the change in the CO2 concentration in the surface layer is: \\[\\begin{equation} {\\check{f}}_{atm}^{{CO}_2}=\\frac{F_{atm}^{CO_2}}{\\Delta Z_{surf}} \\tag{5.15} \\end{equation}\\] where \\(\\Delta z_{surf}\\) is the surface layer thickness. 5.3.2 Optional Module Links Other carbon sources/sinks are indicated in Eq (5.1) for DIC. These include: aed_oxygen: Oxygen is used to control oxidation; aed_organic_matter: organic matter mineralisation can update DIC; aed_phytoplankton: phytoplankton photosynthetic uptake of CO2 can update DIC; aed_geochemistry: optional link to simulate the carbonate system; aed_sedflux: interface module to update the sediment-water exchange in zones; aed_seddiagenesis: an advanced sediment biogeochemistry mode can dynamically predict sediment fluxes of DIC and CH4. 5.3.3 Feedbacks to the Host Model The inorganic carbon module has no feedbacks to the host hydrodynamic model. 5.3.4 Variable Summary The default variables created by this module, and the optionally required linked variables needed for full functionality of this module are summarised in Table 5.2. The diagnostic outputs able to be output are summarised in Table 5.3. State variables Table 5.2: Carbon - state variables AED name Symbol Description Unit Type Typical Range Comments aed_carbon CAR_dic \\[\\mathbf{DIC}\\] dissolved inorganic carbon concentration \\[\\small{mmol\\: C/m^3}\\] pelagic 0 - 5000 simDIC activated by setting dic_initial \\(\\gt -9999\\) CAR_ch4 \\[\\mathbf{CH_4}\\] dissolved methane concentration \\[\\small{mmol\\: C/m^3}\\] pelagic 0 - 200 simDIC activated by setting ch4_initial \\(\\gt -9999\\) CAR_pH \\[\\mathbf{pH}\\] \\(pH\\) value \\[\\small{-}\\] pelagic 7 - 9 activated when simDIC=T Dependent variables OXY_oxy \\[\\mathbf{O_2}\\] dissolved oxygen concentration \\[\\small{mmol\\: O_2/m^3}\\] pelagic 0 - 500 optional for methane oxidation, via methane_reactant_variable SDF_Fsed_dic \\[\\mathbf{F}_{sed}^{dic}\\] dissolved sediment \\(CO_2\\) flux \\[\\small{mmol\\: C/m^2/s}\\] benthic 0 - 300 required for sediment zones; internally used as /s SDF_Fsed_ch4 \\[\\mathbf{F}_{sed}^{ch4}\\] dissolved sediment \\(CH_4\\) flux \\[\\small{mmol\\: C/m^2/s}\\] benthic NA required for sediment zones; internally used as /s SDF_Fsed_ch4_ebb \\[\\mathbf{F}_{sed}^{ch4-ebb}\\] sediment \\(CH_4\\) bubble release rate \\[\\small{mmol\\: C/m^2/s}\\] benthic NA required for sediment zones; internally used as /s Diagnostics Table 5.3: Carbon - diagnostics AED name Symbol Description Unit Type Typical Range Comments diag_level = 0+ CAR_pco2 \\[\\mathbf{pCO_2}\\] partial pressure of \\(CO_2\\) in water \\[\\small{atm}\\] pelagic 0 - 5000 diag_level = 2+ CAR_ch4ox \\[\\mathbf{f}_{ox}^{ch4}\\] methane oxidation rate \\[\\small{mmol\\: C/m^3/d}\\] pelagic 0 - 100 CAR_sed_dic \\[\\mathbf{\\mathcal{F}}_{sed}^{dic}\\] \\(CO_2\\) exchange across sediment-water interface \\[\\small{mmol\\: C/m^2/d}\\] benthic 0 - 50 CAR_sed_ch4 \\[\\mathbf{\\mathcal{F}}_{sed}^{ch4}\\] \\(CH_4\\) exchange across sediment-water interface \\[\\small{mmol\\: C/m^2/d}\\] benthic 0 - 1 CAR_atm_co2_flux \\[\\mathbf{\\mathcal{F}}_{atm}^{dic}\\] \\(CO_2\\) exchange across atm-water interface \\[\\small{mmol\\: C/m^2/d}\\] surface 0 - 100 CAR_atm_ch4_flux \\[\\mathbf{\\mathcal{F}}_{atm}^{ch4}\\] \\(CH_4\\) exchange across atm-water interface \\[\\small{mmol\\: C/m^2/d}\\] surface 0 - 1 CAR_atm_ch4_ebb_flux \\[\\mathbf{\\mathcal{F}}_{atm}^{ch4-bub}\\] \\(CH_4\\) bubble flux across air-water interface \\[\\small{mmol\\: C/m^2/d}\\] surface NA CAR_sed_ch4_ebb \\[\\mathbf{\\mathcal{F}}_{sed}^{ch4-bub}\\] \\(CH_4\\) bubble flux (ebullition) across sediment-water interface \\[\\small{mmol\\: C/m^2/d}\\] benthic NA CAR_sed_ch4_ebb_3d \\[\\mathbf{\\hat{f}}_{sed}^{CH_{4-bubble}}\\] \\(CH_4\\) bubble flux (ebullition) volume flux \\[\\small{mmol\\: C/m^3/d}\\] pelagic NA CAR_ch4_ebb_df \\[\\mathbf{f}_{dis}^{CH_{4-bubble}}\\] \\(CH_4\\) bubble dissolution \\[\\small{mmol\\: C/m^3/d}\\] pelagic 0 - 1 5.3.5 Parameter Summary The parameters and settings used by this module are summarised in Table 5.4. Table 5.4: Carbon - parameters AED name Symbol Description Unit Type Typical Range Comments Initialisation dic_initial \\[DIC|_{t=0}\\] initial \\(DIC\\) cooncentration \\[\\small{mmol\\: C/m^3}\\] float 0 - 5000 can be overwritten by initial condition files pH_initial \\[pH|_{t=0}\\] initial \\(pH\\) values \\[\\small{-}\\] float 7 - 9 can be overwritten by initial condition files ch4_initial \\[CH_4|_{t=0}\\] initial \\(CH_4\\) values \\[\\small{mmol\\: C/m^3}\\] float 0 - 200 can be overwritten by initial condition files Carbonate buffering co2_model \\[\\Theta_{co2}\\] selection of \\(pCO_2\\) model algorithms \\[\\small{-}\\] integer 0, 1, 2 1: CO2SYS; 2: Butler; 0: aed_geochem alk_model \\[\\Theta_{TA}\\] selection of total alkalinity model algorithms \\[\\small{-}\\] integer 0,1,2,3,4,5 empirical relations developed for Queensland Rivers ionic \\[I\\] average ionic strength of the water column \\[\\small{meq}\\] float NA Atmospheric exchange atm_co2 \\[pCO_2^a\\] atmospheric \\(CO_2\\) concentration \\[\\small{atm}\\] float \\(350-450\\times 10^{-6}\\) atm_ch4 \\[pCH_4^a\\] atmospheric \\(CH_4\\) concentration \\[\\small{atm}\\] float \\(1-2\\times 10^{-6}\\) co2_piston_model \\[\\Theta_{co2}^{piston}\\] selection of air-water \\(CO_2\\) flux velocity method \\[\\small{-}\\] integer 1 - 9 see options in the Gas Transfer section ch4_piston_model \\[\\Theta_{ch4}^{piston}\\] selection of air-water \\(CH_4\\) flux velocity method \\[\\small{-}\\] integer 1 - 9 see options in the Gas Transfer section Methane oxidation Rch4ox \\[R_{ox}^{ch4}\\] maximum reaction rate of \\(CH_4\\) oxidation @ \\(20^{\\circ}C\\) \\[\\small{/d}\\] float 0 - 1 Kch4ox \\[K_{ch4ox}^{O_2}\\] half-saturation \\(O_2\\) conc. for \\(CH_4\\) oxidation \\[\\small{mmol\\: O_2/m^3}\\] float 0.1 - 10 vTch4ox \\[\\theta_{ox}^{ch4}\\] Arrhenius temperature multiplier for \\(CH_4\\) oxidation \\[\\small{-}\\] float 1 - 1.1 methane_reactant_variable \\[O_2\\] state variable to be consumed during \\(CH_4\\) oxidation \\[\\small{-}\\] string OXY_oxy Sediment exchange Fsed_dic \\[F_{sed}^{dic}\\] sediment \\(CO_2\\) flux @ \\(20^{\\circ}C\\) \\[\\small{mmol\\: C/m^2/d}\\] float 0 - 1 Ksed_dic \\[K_{sed-dic}^{O_2}\\] half-saturation oxygen conc. controlling \\(CO_2\\) flux \\[\\small{mmol\\: O_2/m^3}\\] float 20 - 100 theta_sed_dic \\[\\theta_{sed}^{dic}\\] Arrhenius temperature multiplier for sediment \\(CO_2\\) flux \\[\\small{-}\\] float 1 - 1.1 Fsed_dic_variable \\[\\mathbf{F}_{sed}^{dic}\\] variable name to link to for spatially resolved sediment zones \\[\\small{-}\\] float SDF_Fsed_dic Fsed_ch4 \\[F_{sed}^{ch4}\\] sediment \\(CH_4\\) flux @ \\(20^{\\circ}C\\) \\[\\small{mmol\\: C/m^2/d}\\] float 0 - 1 Ksed_ch4 \\[K_{sed-ch4}^{O_2}\\] half-saturation oxygen conc. controlling \\(CH_4\\) flux \\[\\small{mmol\\: O_2/m^3}\\] float 10 - 50 theta_sed_ch4 \\[\\theta_{sed}^{ch4}\\] Arrhenius temperature multiplier for sediment \\(CH_4\\) flux \\[\\small{-}\\] float 1 - 1.1 Fsed_ch4_variable \\[\\mathbf{F}_{sed}^{ch4}\\] variable name to link to for spatially resolved sediment zones \\[\\small{mmol\\: C/m^2/d}\\] float SDF_Fsed_ch4 Sediment ebullition ebb_model \\[\\Theta_{ch4}^{ebullition}\\] option to activate \\(CH_4\\) ebullition \\[\\small{-}\\] logical 0 , 1 0: no ebullition (default); 1: simple release model Fsed_ebb_variable \\[\\mathbf{F}_{sed}^{ch4-ebb}\\] variable name to link to for spatially resolved sediment zones \\[\\small{-}\\] float SDF_Fsed_ch4_ebb ch4_bub_aLL \\[\\bar{z}\\] mean water depth \\[\\small{m}\\] float 1 - 100 ch4_bub_cLL \\[c_{n}\\] normalising constant \\[\\small{-}\\] float 0.5 - 0.7 Lake Kinneret specific value ch4_bub_kLL \\[\\epsilon_{reg}\\] exponential factor from the depth-ebullition regression relation \\[\\small{-}\\] float -0.8 - -0.9 Lake Kinneret specific value ch4_bub_disf1 \\[k_{dis}^{shallow}\\] bubble dissolution fraction (surface) \\[\\small{-}\\] float 0 - 1 ch4_bub_disf2 \\[k_{dis}^{deep}\\] bubble dissolution fraction (deep) \\[\\small{-}\\] float 0 - 1 ch4_bub_disdp \\[z_{dis}^{depth}\\] bubble dissolution fraction depth interface \\[\\small{m}\\] float 1 - 100 5.4 Setup &amp; Configuration An example aed.nml parameter specification block for the aed_carbon module that is only modelling \\(DIC\\) is shown below: &amp;aed_carbon dic_initial = 1000. pH_initial = 7.5 ch4_initial = -9999 ! disables CH4 ! Carbonate buffering co2_model = 1 alk_model = 5 ! Atmospheric exchange atmco2 = 0.000380 co2_piston_model = 1 ! Sediment respiration Fsed_dic = 10.0 ! replaced by linked SDF var Ksed_dic = 100. theta_sed_dic = 1.08 Fsed_dic_variable = &#39;SDF_Fsed_dic&#39; / An example aed.nml parameter specification block for the aed_carbon module that includes all options is shown below: &amp;aed_carbon !-- DIC and pH --! dic_initial = 91 Fsed_dic = 0.001 Ksed_dic = 53.44356 theta_sed_dic = 1.08 !Fsed_dic_variable = &#39;SDF_Fsed_dic&#39; pH_initial = 6.2 atm_co2 = 4e-04 co2_model = 1 alk_mode = 1 ionic = 0.1 co2_piston_model = 1 !-- CH4 (dissolved) --! ch4_initial = 5 Rch4ox = 0.1 Kch4ox = 0.2 vTch4ox = 1.2 Ksed_ch4 = 3.437 theta_sed_ch4 = 1.2 methane_reactant_variable = &#39;OXY_oxy&#39; atm_ch4 = 1.76e-6 ch4_piston_model = 1 !Fsed_ch4_variable = &#39;SDF_Fsed_ch4&#39; !-- CH4 (bubbles) --! ebb_model = 1 Fsed_ch4_ebb = 0.0 !Fsed_ebb_variable = &#39;SDF_Fsed_ch4_ebb&#39; ch4_bub_aLL = 42.95127 ch4_bub_cLL = 0.634 ch4_bub_kLL = -0.8247 ch4_bub_disdp = 20 ch4_bub_disf1 = 0.33 ch4_bub_disf2 = 0.07 / 5.5 Case Studies &amp; Examples 5.5.1 Case Study : South-east Queensland estuaries The aed_carbon model was applied to three estuaries of the Moreton Bay region in south-east Queensland, Australia. The river and estuaries were monitored to measure dissolved inorganic carbon and methane as part of a campaign in March 2016 to understand controls on greenhouse gas emissions. Figure 5.2: Map of the three estuaries of the Moreton Bay region in south-east Queensland, Australia. Using the AED model coupled with the 3-D model TUFLOW-FV, the dynamics of the estuaries were simulated for the year 2016 and compared against data from the intensive field campaigns. An example of the model capturing the different gradients in DIC and CH4 in the three systems is shown in Figure 5.3. Figure 5.3: Trasect plots comparing modelled and field data for DOC (uM, 1st row), DIC (uM, 2nd row), pCO2 (uATM, 3rd row) and pCH4 (uATM, 4th row) for three estuaries in south-east Queensland: a) Brisbane river, b) Maroochy estuary, and c) Noosa estuary. Data presented for March 2016, collected by Southern Cross University Centre for Coastal Biogeochemistry. 5.5.2 Case Study : Lake Kinneret The aed_carbon model was applied to Lake Kinneret, a deep subtropical lake in Israel. Using the AED model coupled with the General Lake Model, the dynamics of Lake Kinneret (Figure 5.4) were simulated from 01/01/1998 until 23/02/2002. Figure 5.4: Map of Lake Kinneret, Israel. Dissolved methane concentrations were calibrated using the glmtools R package and were compared against observations (Figure 5.5). Ebullition was simulated using a site-specific algorithm and the sources and sinks of both dissolved methane and methane bubbles are presented on Figure 5.6. Figure 5.5: The observed vs. simulated dissolved methane concentrations (mmol/m3) at 1 m, 10 m, 20 m, 30 m, 35 m and 38-39 m depths in Lake Kinneret. The rhombus symbols represent the observed and the solid lines represent the simulated methane concentrations. Data consisting of dissolved methane concentrations in Lake Kinneret was extracted from Schmid et al., 2017, using WebPlotDigitizer (http://arohatgi.info/WebPlotDigitizer). Figure 5.6: The sources and sinks of methane (mol 106) in Lake Kinneret. The sources and sinks of dissolved methane (stacked) are presented in the first figure and include the dissolution of bubbles (“dissolution”), sediment diffusive flux (“sed_flux”), aerobic oxidation (“oxid”) and gas exchange at the water-air interface on the secondary axis (“sed_flux”). The sources and sinks of ebullition (stacked) in Lake Kinneret are presented in the second figure and include the sediment bubble flux (“sed_ebb”), the dissolution of bubbles (“dissolution”) and the atmospheric ebullition flux (“atm_ebb”). "],["inorganic-nitrogen.html", "6 Inorganic Nitrogen 6.1 Contributors 6.2 Overview 6.3 Model Description - Default Model 6.4 Model Description - Adding N2O Reactions 6.5 Setup &amp; Configuration 6.6 Case Studies &amp; Examples", " 6 Inorganic Nitrogen 6.1 Contributors Daniel Paraska, Louise Bruce, Peisheng Huang, and Matthew R. Hipsey 6.2 Overview Nitrogen is fundamental to shaping water quality in aquatic ecosystems. Nitrogen is of particular interest in that exists in many redox states and there are a myriad of organic and inorganic reactions that make up the nitrogen biogeochemical system. NO3- and NH4+ are the primary inorganic nutrients that are taken up by aquatic plants (phytoplankton, macroalgae and macrophytes) to build biomass as organic nitrogen. As nitrogen is a core building block of an aquatic ecosystem, aed_nitrogen (\\(\\mathrm{NIT}\\)) is designed as a low-level module for managing the inorganic nitrogen pools, and is able to be linked to by higher order modules associated with primary production, organic matter breakdown, and other ecosystem processes. The general nitrogen redox processes specifically resolved in this module are NH4+ oxidation to NO3- by O2, and NO3- reduction to N2 with organic matter. Advanced options are available, in which the end result is generation of the nitrogen species N2O. Producing N2O uses more variables and reaction pathways and is not necessary for most nutrient cycling studies. The module also supports processes associated with the dissolved sediment flux and atmospheric deposition. Importantly, nitrogen species react with organic matter. The description of organic matter involvement in nitrogen reactions and interactions can be found in Section (OGM). The uptake and use of these variables by phytoplankton and macroalgae are described in Section (PHY) and (MAG). When configuring the \\(\\mathrm{NIT}\\) module, users must first identify the level of complexity they wish to adopt in their nitrogen module configuration. Whilst the module is highly configurable, users generally adopt the default model, and if N2O or more granuallr resolution of nitrogen redox interactions are required then they can choose these more advanced options via the switch simN2O. 6.3 Model Description - Default Model 6.3.1 Process Descriptions In the default nitrogen module configuration, the variables NO3 and NH4 are included as state variables and able to be modified by nitrification, denitrification, sediment release and atmospheric deposition; to use this basic functionality, ensure the parameter simN2O is set to 0. The main balance equations for these two simulated variables are summarised as: \\[\\begin{eqnarray} \\frac{D}{Dt}NO_3 = \\color{darkgray}{ \\mathbb{M} + \\mathcal{S} } \\quad &amp;+&amp; \\overbrace{f_{nitrf}^{NH_4} - f_{denit}^{NO_3} + \\check{f}_{atmdep}^{NO_3}+\\hat{f}_{sed}^{NO_3}}^\\text{aed_nitrogen} \\\\ \\tag{6.1} &amp;-&amp; \\color{brown}{ f_{nup}^{PHY} - f_{nup}^{MAG} } \\\\ \\nonumber \\end{eqnarray}\\] \\[\\begin{eqnarray} \\frac{D}{Dt}NH_4 = \\color{darkgray}{ \\mathbb{M} + \\mathcal{S} } \\quad &amp;-&amp; \\overbrace{ f_{nitrf}^{NH_4} + \\check{f}_{atmdep}^{NH_4}+\\hat{f}_{sed}^{NH_4}}^\\text{aed_nitrogen} \\\\ \\tag{6.2} &amp;+&amp; \\color{brown}{ f_{min}^{DON} - f_{nup}^{PHY} - f_{nup}^{MAG} } \\\\ \\nonumber \\end{eqnarray}\\] where \\(\\mathbb{M}\\) and \\(\\mathcal{S}\\) refer to water mixing and boundary source terms, respectively, and the coloured \\(\\color{brown}{f}\\) terms reflect the optionally configurable contributions from other modules; these include the mineralisation of \\(DON\\) and \\(N\\) cycling terms associated with photosynthesis and respiration by various biotic groups. If users wish to include NO2 or N2O as state variables in a simulation, then refer to Section X.4 6.3.1.1 Nitrification and denitrification reactions In an environment of high O2, NH4+ is oxidized by oxygen to NO3- via nitrification. In an environment of low O2, NO3- is reduced to N2 via the process denitrification. O2 limitation on the rate of the reaction is not included in the default setup, but can be chosen by the user, as described in the section below. 6.3.1.2 Nitrification The rate of nitrification is assumed to vary primarily due to temperature, and also due to variation in O2 and pH, according to: \\[\\begin{equation} f_{nitrf}^{NH_4} =R_{nitrf} \\; \\theta_{nitrif}^{T-20} \\; {\\underbrace{\\Phi_{O2}^{nitrf}\\left[O_2\\right] \\Phi_{pH}^{nitrf}\\left[pH\\right]}_{\\text{Optional limitations}}} \\; NH_4 \\tag{6.3} \\end{equation}\\] where \\(\\theta_{nitrif}\\) is a Arrhenius temperature parameter specific to nitrification, and \\(T\\) is the temperature produced by the host model. O2 limitation on this rate will not be included in the setup unless a link to the oxygen module is made, as described in the section below. Oxygen limitation on nitrification: An extra option is to allow low O2 concentration to limit the nitrification rate, \\(\\Phi_{O_{2}}^{nitrf}\\left[O_2\\right]\\). If the aed_oxygen module is linked to the nitrogen module, then this setting will switch on automatically. The limitation effect is calculated according to: \\[\\begin{equation} \\Phi_{O_{2}}^{nitrf}\\left[O_2\\right]=\\frac{O_2}{O_2+K_{nitrif}} \\tag{6.4} \\end{equation}\\] where \\(K_{nitrif}\\) is a half saturation constant concentration of oxygen. The purpose of this factor is to reduce the rate of nitrification as oxygen moves below a critical concentration. pH limitation on nitrification: The rate of nitrification can be decreased at very high and low pH values, if pH is being simulated (see Carbon and Geochemistry). To use this function, the parameter simNitrfpH is set to .TRUE.. Around neutral pH, between the upper and lower optimum parameters, the reaction proceeds at the normal rate. Below a lower tolerance, and above an upper tolerance, the reaction is stopped entirely. Between the optimum and tolerance values, the rate is limited, in proportion to pH. The piecewise function is described as: \\[\\begin{equation} \\Phi_{pH}^{nitrf}[pH]= \\left\\{\\begin{array}{ll} 0, \\ \\ \\ \\ pH &lt; 0\\\\ 0, \\ \\ \\ \\ x \\geq 0\\\\ 1, \\ \\ \\ \\ x \\geq 0\\\\ 0, \\ \\ \\ \\ x \\geq 0\\\\ 0, \\ \\ \\ \\ pH \\geq 0\\\\ \\end{array} \\right. \\tag{6.5} \\end{equation}\\] The function is shown schematically in Figure 6.1. Figure 6.1: pH limitation on nitrification. Light limitation on nitrification: This process is not currently included and is an open area for contributions. 6.3.1.3 Denitrification Denitrification is a heterotrophic process occurring in low oxygen environments such as anoxic bottom waters and sediments. In addition to oxygen, the rate of denitrification depends on temperature and nitrate availability. It is calculated according to: \\[\\begin{equation} f_{denit}^{NO_3} = R_{denit}\\; \\theta_{denit}^{T-20}\\; \\frac{NO_3}{NO_3+K_{NO3}} \\; \\Phi_{O2}^{denit}\\left[O_2\\right] NO_3 \\tag{6.6} \\end{equation}\\] where \\(R_{denit}\\) is the kinetic rate constant for denitrification and \\(\\theta_{denit}\\) is a temperature parameter specific to denitrification. The Monod term in Equation (6.6) slows the rate at low NO3- concentrations, and allows it to proceed at the maximum rate R_denit at high NO3- concentrations. The parameter KNO3 is the half-saturation parameter for limiting the reaction rate and is set by the user to slow the rate at low NO3- concentrations. This parameter should not be confused with the O2 limitation factor K_denit, mentioned below; O2 limitation on the rate of the reaction is not included in the default setup, but can be chosen by the user, as described in the section below. Oxygen mediation of denitrification: For denitrification, oxygen slows the reaction through inclusion of an inhibition function as: \\[\\begin{equation} \\Phi_{O2}^{denit}\\left[O_2\\right]= \\left\\{\\begin{array}{ll} \\frac{K_{denit}}{O_{2}+K_{denit}},\\ \\ \\ \\ \\ \\ \\ \\Theta^{denit}_{oxylim} = 1\\\\ e^{(-O_{2}/K_{denit})},\\ \\ \\ \\Theta^{denit}_{oxylim} = 2\\\\ \\end{array} \\right. \\tag{6.7} \\end{equation}\\] Such that the denitrification rate is inhibited by high O2 concentrations, using the parameter K_denit. This parameter is an O2 concentration, and should not be confused with the parameter KNO3 which is a NO3- concentration. To use the process shown in Equation (6.7), the switch oxy_lim, \\(\\Theta_{oxylim}^{denit}\\), set to the number 1. Alternatively, the rate of denitrification can be set to decreases exponentially at high O2 concentrations, also using the parameter Kdenit. This is the same parameter as for the inhibition function described above, but applied differently. 6.3.1.4 Atmospheric deposition Nitrogen can be added to the surface cells of an aquatic system through two kinds of atmospheric deposition: wet and dry. These functions can be turned on by setting the parameters simDryDeposition and simWetDeposition to .TRUE.. \\[\\begin{equation} f_{atmdep}^{NOx}=\\left[{\\underbrace{F_{atm}^{DIN}}_{\\text{Dry flux}}}+{\\underbrace{R_n\\left[t\\right] {DIN}_{atm}}_{\\text{Wet flux}}}\\right] \\frac{{k}_{DINdepNO_x}}{\\Delta z_{surf}} \\tag{6.8} \\end{equation}\\] \\[\\begin{equation} f_{atmdep}^{NH_4}=\\left[{\\underbrace{F_{atm}^{DIN}}_{\\text{Dry flux}}} + {\\underbrace{R_n\\left[t\\right] {DIN}_{atm}}_{\\text{Wet flux}}}\\right]\\frac{\\left({1-k}_{DINdepNO_x}\\right)}{\\Delta z_{surf}} \\tag{6.9} \\end{equation}\\] where \\(\\Delta z_{surf}\\) is the surface layer thickness. Wet deposition adds nitrogen as a result of rain, \\(R_n\\) (m/day), which is a variable or a boundary condition provided as an environment variable from the host model. The deposition from rain is proportional to the atmospheric nitrogen concentration atm_din_conc. As with dry deposition, the proportion that is assigned to NOx and NH4+ is given by the same parameter f_dindep_nox. 6.3.1.5 Sediment flux NO3- and NH4+ can flux into the water column from the sediment, using the parameters \\(F_{sed}^{nit}\\) and \\(F_{sed}^{amm}\\), which set the maximum flux rate. The maximum flux rate is limited by temperature, using the parameters theta_sed_nit and theta_sed_amm, according to \\[\\begin{equation} f_{sed}^{NOx}=F_{sed}^{nit} \\theta_{sednit}^{T-20}\\Phi_{O2}^{nit}\\left[O_2\\right] \\tag{6.10} \\end{equation}\\] \\[\\begin{equation} f_{sed}^{NH4}=F_{sed}^{amm} \\theta_{sedamm}^{T-20}\\Phi_{O2}^{amm}\\left[O_2\\right] \\tag{6.11} \\end{equation}\\] This assumes that there is a higher flux at higher temperatures; set \\(\\theta_{sed}=1.0\\) to remove any temperature dependance. Oxygen mediation of the sediment nitrogen fluxes: As with the nitrification reaction, the sediment flux can be changed by bottom water O2 concentration. If the aed2_oxygen module is correctly linked to the nitrogen module then this setting will switch on automatically. At low O2 concentrations, the amount of NO3- fluxing out of the sediment is decreased and at high O2 concentrations, it is set close to the F_sed_nit, as shown in Equation (6.12). This is a convenient simplification that can be tuned within this module, rather than a more complicated full set of biogeochemical reactions. The parameter K_sed_nit can be used to tune the NO3- flux dependence on bottom water O2. A similar function can be used to tune the NH4+ flux using the parameter K_sed_amm, as shown in Equation 13. At high O2 concentrations, NH4+ flux decreases, and at low O2 concentrations, the flux is close to the parameter F_{sed}^{amm}. \\[\\begin{equation} \\Phi_{O2}^{nit}\\left[O_2\\right]=\\frac{O_2}{K_{sednit}+O_2} \\tag{6.12} \\end{equation}\\] \\[\\begin{equation} \\Phi_{O2}^{amm}\\left[O_2\\right]=\\frac{K_{sedamm}}{K_{sedamm}+O_2} \\tag{6.13} \\end{equation}\\] Advanced options: The approach described here is the most simple and default method for capturing DIN fluxes from the sediment, and is sometimes referred to the static model. This approach can be extended to allow for spatial variability in \\(F_{sed}^{nit}\\) and \\(F_{sed}^{amm}\\), by engaging the link to the aed_sedflux module, where the host models support multiple benthic cells or zones. In this case, users input spatially discrete values of \\(F_{sed}^{nit}\\) and \\(F_{sed}^{amm}\\). Where dynamic rates of DIN species are required to flux to/from the sediment (e.g. in response to episodic loading of organic material to the sediment, or for assessment of long-term changes in N loading), then the above expressions (Eq (6.10)-(6.13)) are replaced instead with dynamically calculated variables in aed_seddiagenesis, via a link created with the aed_sedflux module. 6.3.2 Variable Summary The default variables created by this module, and the optionally required linked variables needed for full functionality of this module are summarised in Table X. 6.3.3 Parameter Summary The default parameters and settings used by this module are summarised in Table @ref(tab:nitrogen_tab1). html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #xrinuldajl .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 12px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #xrinuldajl .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #xrinuldajl .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #xrinuldajl .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #xrinuldajl .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #xrinuldajl .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #xrinuldajl .gt_col_heading { color: #FFFFFF; background-color: #14759E; font-size: 14px; font-weight: bold; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #xrinuldajl .gt_column_spanner_outer { color: #FFFFFF; background-color: #14759E; font-size: 14px; font-weight: bold; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #xrinuldajl .gt_column_spanner_outer:first-child { padding-left: 0; } #xrinuldajl .gt_column_spanner_outer:last-child { padding-right: 0; } #xrinuldajl .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #xrinuldajl .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #D3D3D3; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #xrinuldajl .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #D3D3D3; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #xrinuldajl .gt_from_md > :first-child { margin-top: 0; } #xrinuldajl .gt_from_md > :last-child { margin-bottom: 0; } #xrinuldajl .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #xrinuldajl .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #xrinuldajl .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #xrinuldajl .gt_row_group_first td { border-top-width: 2px; } #xrinuldajl .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #xrinuldajl .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #xrinuldajl .gt_first_summary_row.thick { border-top-width: 2px; } #xrinuldajl .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #xrinuldajl .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #xrinuldajl .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #xrinuldajl .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #xrinuldajl .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #xrinuldajl .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #xrinuldajl .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #xrinuldajl .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #xrinuldajl .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #xrinuldajl .gt_left { text-align: left; } #xrinuldajl .gt_center { text-align: center; } #xrinuldajl .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #xrinuldajl .gt_font_normal { font-weight: normal; } #xrinuldajl .gt_font_bold { font-weight: bold; } #xrinuldajl .gt_font_italic { font-style: italic; } #xrinuldajl .gt_super { font-size: 65%; } #xrinuldajl .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #xrinuldajl .gt_asterisk { font-size: 100%; vertical-align: 0; } #xrinuldajl .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #xrinuldajl .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #xrinuldajl .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } Parameter name Description Unit Parameter type Default Typical range Nitrification/Denitrification R_nitrif Kinetic rate constant for nitrification day-1 real 0.01 0.001-0.2 theta_nitrif Temperature dependence of nitrification real 1 1.05-1.12 R_denit Kinetic rate constant for denitrification day-1 real 0.01 theta_denit Temperature dependence of denitrification Unitless real 1 KNO3 Half saturation constant for NO3- limitation on denitrification mmol m-3 real 5 Kdenit O2 inhibition of denitirification or exponential reduction mmol m-3 real 150 oxy_lim Integer 1 1 or 2 NITpHTolMin Minimum tolerance pH unit real 5.5 NITpHOptMin Minimum optimum pH unit real 7.1 NITpHOptMax Maximum optimum pH unit real 7.9 NITpHTolMax Maximum tolerance pH unit real 9 Atmospheric Deposition simDryDeposition Switch to turn on atmospheric deposition LOGICAL TRUE simWetDeposition Switch to turn on rain deposition LOGICAL TRUE atm_din_dd Atmospheric DIN deposition rate mmol m-2 d-1 real 0 atm_din_conc Atmospheric DIN composition mmol m-3 real 0 f_dindep_nox Fraction of DIN that is NOx real 0.5 Sediment Flux Fsed_nit Sediment NO3- flux Fsed_amm Sediment NH4+ flux Ksed_nit Sediment NO3- flux mmol m-2 d-1 real 30 Ksed_amm Sediment NH4+ flux mmol m-2 d-1 real 30 theta_sed_nit Temperature dependence on sediment NO3- flux real 1 theta_sed_amm Temperature dependence on sediment NH4+ flux real 1 6.3.4 Optional Module Links Other nitrogen sources/sinks are indicated in Eq (6.1)-(6.2). These include: Ammonium release during bacterial mineralisation of DON in the organic matter module - aed_organic_matter; Nitrate consumption during denitrification of DON in the organic matter module - done in aed_organic_matter if simDenitrification == 1; Oxygen consumption during nitrification is done in the nitrogen module - [aed_nitrogen][Inorganic Nutrients: C/N/P/Si]; Ammonium and nitrate uptake by phytoplankton phtosynthesis is done in the phytoplankton module - aed_phytoplankton; Ammonium and nitrate uptake by macroalgae phtosynthesis is done in the macroalgae module - aed_phytoplankton; Ammonium and nitrate release and/or consumption from the sediment can be managed via the sediment flux module - aed_sedflux; Ammonium and nitrate release and/or consumption from the sediment can be computed dynamically using the sediment diagnenesis module - aed_seddiagnesis; 6.3.5 Feedbacks to the Host Model The nitrogen module has no feedbacks to the host hydrodynamic model. 6.4 Model Description - Adding N2O Reactions The basic function of the nitrogen model is described above, when the parameter simN2O is set to the number 0. Users may extend their model to simulate the N cycle in more detail, including resolution of intermediate N pools. Using these advanced options, there are extra reaction pathways that are not critical for resolving basic nutrient cycling processes, but are needed for calculating the concentration of the greenhouse gas N2O. Here, these advanced module options are outlined, for when the user sets the parameter simN2O to the number 1 or 2. Simulation option 1 includes N2O, using a relatively simplistic assumption that N2O passively “leaks out” as a by-product or is consumed during the traditional nitrification-denitrification reactions. Simulation option 2 is a more comprehensive biogeochemical depiction of N cycling between its different redox states and considering the full diversity of autotrophic and heterotrophic pathways. In addition to different N reaction pathways in these sub-models, the inclusion of additional inorganic N components is also accompanied by new process pathways for atmospheric exchange and sediment interaction. 6.4.1 Process Descriptions (simN20 = 1) The simN2O 1 option is based on the conceptual model from Babbin et al. or Nevison. If the parameter simN2O is set to the number 1, N2O is both created and consumed through the denitrification reaction, and produced during nitrification; these rates are oxygen dependent. The main balance equation for the additional N2O is summarised as: \\[\\begin{equation} \\frac{\\partial N_{2}O}{\\partial t} = {f_{nitp}^{N_{2}O}} + {f_{denp}^{N_{2}O}} - {f_{denc}^{N_{2}O}} + \\color{#394E73}{f_{atm}^{N_{2}O}} + \\color{#8B701F}{f_{sed}^{N2O}} \\tag{6.14} \\end{equation}\\] 6.4.1.1 Denitrification production of N2O All of the NO3- consumed by denitrification is assumed to first produces N2O. The rate of production of N2O is multiplied by half because there is one mole of N2O produced for every two moles of NO3- consumed. The rate of denitrification is calculated as described here, and can have different O2 limitations, using the parameter use_oxy. \\[\\begin{equation} f^{N_{2}O}_{denp} = \\frac{1}{2}f^{NO_{x}}_{denit} \\tag{6.15} \\end{equation}\\] 6.4.1.2 Denitrification consumption of N2O Denitrification can also consume N2O, when the N2O acts as a high energy yielding oxidant that reacts with organic matter. The organic matter reaction is described in the organic matter model page here. The rate of N2O consumption is calculated as shown in Equation (6.16). Rn2o is a kinetic rate constant that sets the speed of the reaction and Kn2oc is the parameter for the exponential O2 inhibition of the reaction. \\[\\begin{equation} f_{denc}^{N2O}=R_{N_{2}O} e^{(-O_2/{K_{N_2Oc}})} N_{2}O \\tag{6.16} \\end{equation}\\] 6.4.1.3 Nitrification production of N2O N2O is also produced by the O2 oxidation of NH4+ as: 6.4.1.4 Atmospheric N2O Flux N2O fluxes from the atmosphere are calculated from the difference between water and atmospheric concentration: \\begin{equation} f_{atm}^{N_{2}O}=k_{N_{2}O}(N_{2}O-N_{2}O_{atm}) \\end{equation} Where \\(N_{2}O_{atm}\\) is the user defined atmospheric value, and \\(k_{N_{2}O}\\) is the piston velocity; refer to generic utility Section X for more detail using aed2_gas_piston_velocity, and the n2o_piston_model options. 6.4.1.5 Sediment N2O Flux N2O flux from the sediment is calculated in a similar way to the fluxes of NO3- and NH4+(Equation 22). \\begin{equation} \\(f_{sed}^{N2O}=F_{sed}^{n2o} \\theta_{sedamm}^{T-20}\\Phi_{O2}^{n2o}\\left[O_2\\right]\\) \\end{equation} \\[ f_{sed}^{N_{2}O}=F_{sed}^{N_{2}O}\\theta_{sedamm}^{T-20}\\Phi_{O_{2}}^{N_{2}O}[O_2] \\] {#eq:label} 6.4.2 Process Descriptions (simN2O = 2) The simN2O 2 option uses the terminology from Weissbach et al. (2017) for the names of the reaction processes, in order to avoid the ambiguity found across publications. The model processes are described as being part of either the oxidation pathway or reduction pathway. The main balance equations for the additional simulated variables are summarised as: \\[\\begin{equation} \\frac{\\partial{NO}_3}{\\partial t}=f_{Nitratation}-f_{Denitratation}+f_{atmdep}^{NOx}+f_{sed}^{NO3} \\end{equation}\\] \\[\\begin{equation} \\frac{\\partial{NO}_2}{\\partial t}={f_{Nitritation}+f}_{Denitratation}-f_{Denitritation}+f_{sed}^{NO2} \\end{equation}\\] \\[\\begin{equation} \\frac{\\partial N_2O}{\\partial t}=f_{Nitrousation}+f_{nitrous\\ denitritation}-f_{denitrousation}+f_{atm}^{N2O}+f_{sed}^{N2O} \\end{equation}\\] \\[\\begin{equation} \\frac{\\partial{NH}_4}{\\partial t}=f_{DNRA}+f_{NH4\\ release}-f_{NH4\\ \\ oxidation}+f_{atmdep}^{NH4}+f_{sed}^{NH4} \\end{equation}\\] 6.4.2.1 Nitrogen Oxidation Pathways In the oxidation pathway, reduced N in the form of ammonium is first oxidised to NO2 and N2O before NO3, as seen in Figure 1. These processes are described next. Figure 6.2: Nitrogen oxidation pathways resolved when simN2O=2. 6.4.2.2 Nitratation Nitratation is the production of NO3^- (nitrate) from NO2- by O2 oxidation. The rate is calculated as a second-order reaction proportional to both NO2- and O2 concentrations (Equation 14). The parameter Rno2o2 is the kinetic rate constant for the reaction. \\[\\begin{equation} f_{Nitratation}=R_{{NO}_2O_2}\\times{NO}_2^-\\times O_2 \\end{equation}\\] 6.4.2.3 Ammonium oxidation NH4+ is oxidized by O2 to both N2O and NO2-. The rate of NH4+ consumption is the second-order reaction proportional to both O2 and NH4+ concentrations (Equation 15). The parameter Rnh4o2 is the kinetic rate constant for the reaction. \\[\\begin{equation} f_{Ammonium\\ oxidation}=R_{{NH}_4O_2}\\times{NH}_4^+\\times O_2 \\end{equation}\\] 6.4.2.4 Nitritation Nitritation is the production of NO2- (nitrite) under conditions of high O2 concentration, from ammonium oxidation. It is limited by a partitioning function, in which the constant Kpart_ammox is the same as that for nitrousation, described below. Above a critical O2 concentration, this reaction pathway is favoured (Equation 16). The term R~Ammonium oxidation~ refers to the rate equation described above, rather than a kinetic constant. \\[\\begin{equation} f_{Nitritation}=f_{Ammonium\\ oxidation}\\frac{O_2}{K_{part\\ ammox}^ +O_2} \\end{equation}\\] 6.4.2.5 Nitrousation Nitrousation is one of two pathways that produce N2O using simN2O set to the number 2 (the other pathway is the reduction of NO2- via nitrous denitritation). This process occurs under conditions of low O2 concentration, and it is inhibited by oxygen, using an inhibition function (Equation 18). The constantKpart_ammox is the same as that in the nitritation process, which means that below a critical O2 concentration, this reaction pathway is favoured over nitritation. The reaction is multiplied by half, because for each mole of NH4+ oxidized, one mole of N2O is produced. The term R~Ammonium oxidation~ refers to the rate equation described above, rather than a kinetic constant. \\[\\begin{equation} f_{Nitrousation}=\\frac{1}{2}f_{Ammonium\\ oxidation}\\frac{K_{part\\ ammox}}{K_{part\\ ammox} +O_2} \\end{equation}\\] 6.4.2.6 Organic matter oxidation - nitrogen reduction reactions When the simN2O switch is set to 2, the complex set of N2O reactions is used. The details of the organic matter processes are explained on the organic matter model page here. The five nitrogen processes are explained here. 6.4.2.7 Deammonification (anammox) pathway Figure 6.3: Anammox pathways. The deammonification pathway is the oxidation of NH4+ by NO2- to produce N2. It uses neither organic matter nor O2, although it is inhibited by the presence of O2. This process is sometimes referred to as anammox (anaerobic ammonium oxidation), however, Weissbach et al (2017) use the term deammonification to distinguish it from the anammox commercial bioreactor. The parameter Rnh4no2 is the kinetic rate constant for this reaction. The parameter Kin_deamm is the O2 concentration parameter for O2 inhibition of this reaction. \\[\\begin{equation} f_{deammonification}=R_{{NH}_4{NO}_2}\\times{NO}_2^-\\times{NH}_4^+\\times\\frac{K_{in\\ deamm}}{K_{in\\ deamm} +O_2} \\end{equation}\\] 6.4.3 Variable Summary 6.4.3.1 State variables The following state variables are relevant to the nitrogen module, and dependent variables from other modules (Table x). html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #ulziqhduas .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 12px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: 100%; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #ulziqhduas .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ulziqhduas .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #ulziqhduas .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #ulziqhduas .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ulziqhduas .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #ulziqhduas .gt_col_heading { color: #FFFFFF; background-color: #14759E; font-size: 14px; font-weight: bold; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #ulziqhduas .gt_column_spanner_outer { color: #FFFFFF; background-color: #14759E; font-size: 14px; font-weight: bold; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #ulziqhduas .gt_column_spanner_outer:first-child { padding-left: 0; } #ulziqhduas .gt_column_spanner_outer:last-child { padding-right: 0; } #ulziqhduas .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #ulziqhduas .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #D3D3D3; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #ulziqhduas .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #D3D3D3; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #ulziqhduas .gt_from_md > :first-child { margin-top: 0; } #ulziqhduas .gt_from_md > :last-child { margin-bottom: 0; } #ulziqhduas .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #ulziqhduas .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #ulziqhduas .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #ulziqhduas .gt_row_group_first td { border-top-width: 2px; } #ulziqhduas .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ulziqhduas .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #ulziqhduas .gt_first_summary_row.thick { border-top-width: 2px; } #ulziqhduas .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ulziqhduas .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #ulziqhduas .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #ulziqhduas .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #ulziqhduas .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #ulziqhduas .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ulziqhduas .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #ulziqhduas .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #ulziqhduas .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #ulziqhduas .gt_left { text-align: left; } #ulziqhduas .gt_center { text-align: center; } #ulziqhduas .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #ulziqhduas .gt_font_normal { font-weight: normal; } #ulziqhduas .gt_font_bold { font-weight: bold; } #ulziqhduas .gt_font_italic { font-style: italic; } #ulziqhduas .gt_super { font-size: 65%; } #ulziqhduas .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #ulziqhduas .gt_asterisk { font-size: 100%; vertical-align: 0; } #ulziqhduas .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #ulziqhduas .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #ulziqhduas .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } Symbol Variable AED identifier Unit Comment aed_nitrogen NO3- Nitrate NIT_nit mmol m-3 simN2O=1,2 NO2- Nitrite NIT_no2 mmol m-3 simN2O=2 only N2O Nitrous oxide NIT_n2o mmol m-3 simN2O=1,2 NH4+ Ammonium NIT_amm mmol m-3 simN2O=1,2 N2 Dinitrogen NIT_n2 mmol m-3 not tracked Dependent variables O2 Oxygen OXY_oxy mmol m-3 DOC Dissolved organic carbon OGM_doc mmol m-3 6.4.3.2 Diagnostics variables The following diagnostic variables are able to be output, based on the setting of diag_level&gt;0 (Table x). 6.4.4 Parameter summary An overview of the parameters used in the nitrogen module for users selecting simN2O 1 or 2, are summarised in Table X. html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #sdxdikvagh .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 12px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: auto; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #sdxdikvagh .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #sdxdikvagh .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #sdxdikvagh .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #sdxdikvagh .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #sdxdikvagh .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #sdxdikvagh .gt_col_heading { color: #FFFFFF; background-color: #14759E; font-size: 14px; font-weight: bold; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #sdxdikvagh .gt_column_spanner_outer { color: #FFFFFF; background-color: #14759E; font-size: 14px; font-weight: bold; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #sdxdikvagh .gt_column_spanner_outer:first-child { padding-left: 0; } #sdxdikvagh .gt_column_spanner_outer:last-child { padding-right: 0; } #sdxdikvagh .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #sdxdikvagh .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #D3D3D3; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #sdxdikvagh .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #D3D3D3; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #sdxdikvagh .gt_from_md > :first-child { margin-top: 0; } #sdxdikvagh .gt_from_md > :last-child { margin-bottom: 0; } #sdxdikvagh .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #sdxdikvagh .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #sdxdikvagh .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #sdxdikvagh .gt_row_group_first td { border-top-width: 2px; } #sdxdikvagh .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #sdxdikvagh .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #sdxdikvagh .gt_first_summary_row.thick { border-top-width: 2px; } #sdxdikvagh .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #sdxdikvagh .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #sdxdikvagh .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #sdxdikvagh .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #sdxdikvagh .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #sdxdikvagh .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #sdxdikvagh .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #sdxdikvagh .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #sdxdikvagh .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #sdxdikvagh .gt_left { text-align: left; } #sdxdikvagh .gt_center { text-align: center; } #sdxdikvagh .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #sdxdikvagh .gt_font_normal { font-weight: normal; } #sdxdikvagh .gt_font_bold { font-weight: bold; } #sdxdikvagh .gt_font_italic { font-style: italic; } #sdxdikvagh .gt_super { font-size: 65%; } #sdxdikvagh .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #sdxdikvagh .gt_asterisk { font-size: 100%; vertical-align: 0; } #sdxdikvagh .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #sdxdikvagh .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #sdxdikvagh .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } Parameter name Description Unit Parameter type Default Typical range Comment simN2O Switch to use simple or advanced N reactions INTEGER 1 0, 1, 2 Rn2o Kinetic rate constant for N2O consumption s-1 AED_REAL 0.0015 Kn2oc Exponential O2 inhibiting parameter for N2O consumption through denitrification mmol m-3 AED_REAL 0.3 Knev O2 threshold for switching on N2O production from nitrification mmol m-3 AED_REAL 3 aa O2 inhibition parameter mmol m-3 AED_REAL 0.26 bb O2 inhibition parameter AED_REAL -0.0006 simN2O Switch to use simple or advanced N reactions INTEGER 2 0, 1, 2 Rno2o2 Kinetic rate constant for nitratation mmol-1 m3 s-1 AED_REAL 1 Rnh4o2 Kinetic rate constant for nitratation mmol-1 m3 s-1 AED_REAL 1 Kpart_ammox Partitioning parameter for the products of ammonium oxidation, based on O2 concentration mmol m-3 AED_REAL 20 Rdom_minerl Kinetic rate constant for DOC mineralisation mmol-1 m3 s-1 AED_REAL 0.001 OGM Kdom_minerl O2 concentration for inhibition and limitation mmol m-3 AED_REAL 0.886 OGM theta_minerl Temperature parameter AED_REAL 1 OGM f_an 1 OGM `Klim_denitrousv N2O concentration to limit denitrousation and to inhibit denitratation and denitritation mmol m-3 AED_REAL 1 Kin_denitrousv O2 concentration to inhibit denitrousation mmol m-3 AED_REAL 0.205 Knit NO3- concentration to limit denitratation mmol m-3 AED_REAL 1 Kin_denitrat O2 concentration for inhibiting denitratation mmol m-3 AED_REAL 20 Klim_denitrit NO2- concentration parameter that inhibits denitratation and limits denitritation mmol m-3 AED_REAL 1 Kpart_denitrit Partitioning parameter for the products of denitritation mmol m-3 AED_REAL 1 simN2O Switch to use simple or advanced N reactions INTEGER 2 0, 1, 2 Rnh4no2 Kinetic rate constant for deammonification mmol-1 m3 s-1 AED_REAL 1 Kin_deamm O2 concentration for inhibition of deammonification mmol m-3 AED_REAL 0.886 simN2O Switch to use simple or advanced N reactions INTEGER 1 or 2 0, 1, 2 atm_n2o Atmospheric N2O concentration mmol m-3 or ppm  AED_REAL 0.32×10-6 simN2O Switch to use simple or advanced N reactions INTEGER 1 or 2 0, 1, 2 use_oxy Fsed_n2o Maximum N2O sediment flux rate mmol m-2 y-1 0 Ksed_n2o O2 inhibition concentration parameter mmol m-2 y-1 AED_REAL 30 theta_sed_n2o Temperature limiting factor for sediment N2O flux AED_REAL 1 6.4.5 Optional Module Links As with the default model, other nitrogen sources/sinks are indicated in Eq s… . These include: Ammonium release during bacterial mineralisation of DON in the organic matter module - aed_organic_matter; Nitrate consumption during denitrification of DON in the organic matter module - done in aed_organic_matter if simDenitrification == 1; Oxygen consumption during nitrification is done in the nitrogen module - [aed_nitrogen][Inorganic Nutrients: C/N/P/Si]; Ammonium and nitrate uptake by phytoplankton phtosynthesis is done in the phytoplankton module - aed_phytoplankton; Ammonium and nitrate uptake by macroalgae phtosynthesis is done in the macroalgae module - aed_phytoplankton; Ammonium and nitrate release and/or consumption from the sediment can be managed via the sediment flux module - aed_sedflux; Ammonium and nitrate release and/or consumption from the sediment can be computed dynamically using the sediment diagnenesis module - aed_seddiagnesis; 6.4.6 Feedbacks to the Host Model This nitrogen module configuration also contains no feedbacks to the host hydrodynamic model. 6.5 Setup &amp; Configuration 6.6 Case Studies &amp; Examples 6.6.1 Case Study: Yarra River Estuary Bruce et al. (2015) demonstrate the base nitrogen setup in a 3D model of Yarra River estuary, an urban riverine estuary in Melbourne, Australia, that experiences dynamic movement of a hypoxic salt-wedge based on river flow and tidal interactions. The results of the simulation are shown in Figure X, highlighting the change in surface and bottom NH4, NO3 and organic nitrogen pools along the estuary length. Figure 6.4: Time series data for surface (blue) and bottom (red) ammonium, nitrate, dissolved and particulate organic nitrogen for (a) Morell Bridge, (b) Scotch College, (c) Bridge Road. Crosses and asterisks represent observed data for surface and bottom concentrations respectively and solid lines simulated data. 6.6.2 Publications html { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif; } #oqbernwxnl .gt_table { display: table; border-collapse: collapse; margin-left: auto; margin-right: auto; color: #333333; font-size: 12px; font-weight: normal; font-style: normal; background-color: #FFFFFF; width: 100%; border-top-style: solid; border-top-width: 2px; border-top-color: #A8A8A8; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #A8A8A8; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; } #oqbernwxnl .gt_heading { background-color: #FFFFFF; text-align: center; border-bottom-color: #FFFFFF; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #oqbernwxnl .gt_title { color: #333333; font-size: 125%; font-weight: initial; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; border-bottom-color: #FFFFFF; border-bottom-width: 0; } #oqbernwxnl .gt_subtitle { color: #333333; font-size: 85%; font-weight: initial; padding-top: 0; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; border-top-color: #FFFFFF; border-top-width: 0; } #oqbernwxnl .gt_bottom_border { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #oqbernwxnl .gt_col_headings { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; } #oqbernwxnl .gt_col_heading { color: #FFFFFF; background-color: #14759E; font-size: 14px; font-weight: bold; text-transform: inherit; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 6px; padding-left: 5px; padding-right: 5px; overflow-x: hidden; } #oqbernwxnl .gt_column_spanner_outer { color: #FFFFFF; background-color: #14759E; font-size: 14px; font-weight: bold; text-transform: inherit; padding-top: 0; padding-bottom: 0; padding-left: 4px; padding-right: 4px; } #oqbernwxnl .gt_column_spanner_outer:first-child { padding-left: 0; } #oqbernwxnl .gt_column_spanner_outer:last-child { padding-right: 0; } #oqbernwxnl .gt_column_spanner { border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: bottom; padding-top: 5px; padding-bottom: 5px; overflow-x: hidden; display: inline-block; width: 100%; } #oqbernwxnl .gt_group_heading { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; color: #333333; background-color: #D3D3D3; font-size: 100%; font-weight: initial; text-transform: inherit; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; } #oqbernwxnl .gt_empty_group_heading { padding: 0.5px; color: #333333; background-color: #D3D3D3; font-size: 100%; font-weight: initial; border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; vertical-align: middle; } #oqbernwxnl .gt_from_md > :first-child { margin-top: 0; } #oqbernwxnl .gt_from_md > :last-child { margin-bottom: 0; } #oqbernwxnl .gt_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; margin: 10px; border-top-style: solid; border-top-width: 1px; border-top-color: #D3D3D3; border-left-style: none; border-left-width: 1px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 1px; border-right-color: #D3D3D3; vertical-align: middle; overflow-x: hidden; } #oqbernwxnl .gt_stub { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; } #oqbernwxnl .gt_stub_row_group { color: #333333; background-color: #FFFFFF; font-size: 100%; font-weight: initial; text-transform: inherit; border-right-style: solid; border-right-width: 2px; border-right-color: #D3D3D3; padding-left: 5px; padding-right: 5px; vertical-align: top; } #oqbernwxnl .gt_row_group_first td { border-top-width: 2px; } #oqbernwxnl .gt_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #oqbernwxnl .gt_first_summary_row { border-top-style: solid; border-top-color: #D3D3D3; } #oqbernwxnl .gt_first_summary_row.thick { border-top-width: 2px; } #oqbernwxnl .gt_last_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #oqbernwxnl .gt_grand_summary_row { color: #333333; background-color: #FFFFFF; text-transform: inherit; padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; } #oqbernwxnl .gt_first_grand_summary_row { padding-top: 8px; padding-bottom: 8px; padding-left: 5px; padding-right: 5px; border-top-style: double; border-top-width: 6px; border-top-color: #D3D3D3; } #oqbernwxnl .gt_striped { background-color: rgba(128, 128, 128, 0.05); } #oqbernwxnl .gt_table_body { border-top-style: solid; border-top-width: 2px; border-top-color: #D3D3D3; border-bottom-style: solid; border-bottom-width: 2px; border-bottom-color: #D3D3D3; } #oqbernwxnl .gt_footnotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #oqbernwxnl .gt_footnote { margin: 0px; font-size: 90%; padding-left: 4px; padding-right: 4px; padding-left: 5px; padding-right: 5px; } #oqbernwxnl .gt_sourcenotes { color: #333333; background-color: #FFFFFF; border-bottom-style: none; border-bottom-width: 2px; border-bottom-color: #D3D3D3; border-left-style: none; border-left-width: 2px; border-left-color: #D3D3D3; border-right-style: none; border-right-width: 2px; border-right-color: #D3D3D3; } #oqbernwxnl .gt_sourcenote { font-size: 90%; padding-top: 4px; padding-bottom: 4px; padding-left: 5px; padding-right: 5px; } #oqbernwxnl .gt_left { text-align: left; } #oqbernwxnl .gt_center { text-align: center; } #oqbernwxnl .gt_right { text-align: right; font-variant-numeric: tabular-nums; } #oqbernwxnl .gt_font_normal { font-weight: normal; } #oqbernwxnl .gt_font_bold { font-weight: bold; } #oqbernwxnl .gt_font_italic { font-style: italic; } #oqbernwxnl .gt_super { font-size: 65%; } #oqbernwxnl .gt_footnote_marks { font-style: italic; font-weight: normal; font-size: 75%; vertical-align: 0.4em; } #oqbernwxnl .gt_asterisk { font-size: 100%; vertical-align: 0; } #oqbernwxnl .gt_slash_mark { font-size: 0.7em; line-height: 0.7em; vertical-align: 0.15em; } #oqbernwxnl .gt_fraction_numerator { font-size: 0.6em; line-height: 0.6em; vertical-align: 0.45em; } #oqbernwxnl .gt_fraction_denominator { font-size: 0.6em; line-height: 0.6em; vertical-align: -0.05em; } Author/Year Paper Title Description Bruce et al. (2015) A model of oxygen and nitrogen biogeochemical response to hydrodynamic regimes in the Yarra River estuary NA Huang et al. (2019) An integrated modelling system for water quality forecasting in an urban eutrophic estuary: The Swan-Canning Estuary virtual observatory NA References "],["inorganic-phosphorus.html", "7 Inorganic Phosphorus 7.1 Contributors 7.2 Overview 7.3 Model Description 7.4 Setup &amp; Configuration 7.5 Case Studies &amp; Examples", " 7 Inorganic Phosphorus 7.1 Contributors Matthew R. Hipsey, Peisheng Huang, and Cayelan C. Carey 7.2 Overview Phosphorus is a limiting nutrient for phytoplankton growth and thus is fundamental to determining water quality in aquatic ecosystems. PO43- is the primary inorganic form of phosphorus that is taken up by microbes and aquatic plants (phytoplankton and macrophytes) to build biomass as organic phosphorus. As phosphorus is a core building block of an aquatic ecosystem, aed_phosphorus (\\(\\mathrm{PHS}\\)) is designed as a low-level module for managing inorganic phosphorus cycling, and is able to be linked to by higher order modules associated with primary production, and organic matter breakdown. 7.3 Model Description This module supports one state variable to capture the dissolved phosphate concentration, \\(PO_4\\) (also referred to as Filterable Reactive Phosphorus, \\(FRP\\)), and optionally users can account for sorbed phosphate, denoted \\(PO_4^{ads}\\). The module is a low-level module that supports the processes shaping inorganic phosphorus dynamics and is designed to be linked to by other modules that interact with phosphate. The dynamics of \\(PO_4\\) are summarised as: \\[\\begin{eqnarray} \\frac{D}{Dt}PO_4 = \\color{darkgray}{ \\mathbb{M} + \\mathcal{S} } \\quad &amp;+&amp; \\overbrace{\\check{f}_{wetdep}^{frp}+\\hat{f}_{sed}^{frp} - f_{sorp}^{frp} }^\\text{aed_phosphorus} \\\\ \\tag{7.1} &amp;+&amp; \\color{brown}{ f_{min}^{DOP} - f_{gpp}^{PHY}- f_{gpp}^{MAG} } \\\\ \\nonumber \\end{eqnarray}\\] where \\(\\mathbb{M}\\) and \\(\\mathcal{S}\\) refer to water mixing and boundary source terms, respectively, and the coloured \\(\\color{brown}{f}\\) terms reflect the optionally configurable contributions from other modules; these include the breakdown of \\(DOP\\) by aerobic heterotrophic bacteria to \\(PO_4\\), and photosynthetic phosphate uptake by phytoplankton and macroalgae. The sorbed \\(PO_4\\) pool is resolved as: \\[\\begin{eqnarray} \\frac{D}{Dt}PO_4^{ads} = \\color{darkgray}{ \\mathbb{M} + \\mathcal{S} } \\quad &amp;+&amp; \\overbrace{\\check{f}_{drydep}^{pip}+\\hat{f}_{resus}^{pip} + f_{sorp}^{frp} - f_{set}^{pip} }^\\text{aed_phosphorus} \\\\ \\tag{7.2} \\end{eqnarray}\\] 7.3.1 Process Descriptions In the basic phosphorus module configuration, \\(FRP\\) and \\(FRP-ads\\) are able to be modified by sorption/desorption, atmospheric deposition (wet and dry fall), dissolved sediment release and settling and resuspension of adsorbed phosphorus. The specific equations for these processes are summarised below. 7.3.1.1 Phosphate sorption - desorption If the user optionally chooses to include an adsorbed PO4 pool, then the model allows for simulation of partitioning between the dissolved pool and a selected sorbent. The sorption processes is assumed to be at equilibrium within a modelled time-step and so is not included as a kinetic term in the model ODE solution (as suggested in Eq X), but rather is solved and applied at the end of the time-step integration. The amount of PO4 that can sorb onto the chosen particle group can be computed based on one of several sorption equation options. For reporting, the term \\(f_{sorp}^{frp}\\) is computed as …/dt. 7.3.1.2 Atmospheric deposition Inorganic phosphorus can be added to the surface cells of an aquatic system through two kinds of atmospheric deposition: wet (as FRP) and dry (as sorbed FRP). These functions can be turned on by setting the parameters simDryDeposition and simWetDeposition to .TRUE. in the phosphorus AED module. 7.3.1.3 Dissolved sediment flux PO43- can flux into the water column from the sediment, using the parameter \\(F_{sed}^{frp}\\), which sets the maximum flux rate. The maximum flux rate is limited by temperature, using the parameter theta_sed_frp, according to \\[\\begin{equation} f_{sed}^{FRP}=F_{sed}^{frp} \\theta_{sedfrp}^{T-20}\\Phi_{O2}^{frp}\\left[O_2\\right] \\tag{7.3} \\end{equation}\\] This assumes that there is a higher flux at higher temperatures. Oxygen mediation of the sediment phosphorus flux: The sediment flux can be changed by bottom water O2 concentration. If the aed_oxygen module is correctly linked to the phosphorus module then this setting will switch on automatically. The parameter K_sed_frp can be used to tune the PO43- flux dependence on bottom water O2. At high O2 concentrations, PO43- flux decreases, and at low O2 concentrations, the flux is close to the parameter F_{sed}^{frp}, as shown by the equation below. \\[\\begin{equation} \\Phi_{O2}^{frp}\\left[O_2\\right]=\\frac{K_{sedfrp}}{K_{sedfrp}+O_2} \\tag{7.4} \\end{equation}\\] 7.3.1.4 Sedimentation and resuspension 7.3.2 Optional Module Links Other phosphate sources/sinks are indicated in Eq (7.1) for \\(PO_4\\). These include: aed_oxygen: Oxygen is used to control the rate of sediment release of phosphate. aed_carbon: pH can used to influence the sorption dynamics of phosphate. aed_organic_matter: organic matter minerization replenishes \\(PO_4\\). aed_phytoplankton: phytoplankton photosynthesis consumes \\(PO_4\\). aed_geochemistry: optional link to simulate the phosphate precipitation. aed_sedflux: modules to update the sediment-water exchange rate of \\(PO_4\\). 7.3.3 Feedbacks to the Host Model The inorganic phosphorus module has no feedbacks to the host hydrodynamic model. 7.3.4 Variable Summary The default variables created by this module, and the optionally required linked variables needed for full functionality of this module are summarised in Table 7.1. The diagnostic outputs able to be output are summarised in Table 7.2. State variables Table 7.1: Phosphorus - state variables AED name Symbol Description Unit Type Typical Range Comments aed_phosphorus PHS_frp \\[\\mathbf{PO_4}\\] dissolved phosphate concentration \\[\\small{mmol\\:P/m^3}\\] pelagic 0 - 10 . PHS_frp_ads \\[\\mathbf{PO_4^{ads}}\\] adsorped phosphate concentration \\[\\small{mmol\\:P/m^3}\\] pelagic 0 - 10 activated when simPO4Adsorption=T Dependent variables OXY_oxy \\[\\mathbf{O_2}\\] dissolved oxygen concentration \\[\\small{mmol\\: O_2/m^3}\\] pelagic 0 - 500 optional for sediment release, via phosphorus_reactant_variable SDF_Fsed_frp \\[\\mathbf{F}_{sed}^{frp}\\] sediment \\(PO_4\\) flux \\[\\small{mmol \\:P/m^2/s}\\] benthic 0 - 10 spatial sediment flux set via Fsed_frp_variable; read and output as /day, but internally used as /s NCS_ssX (or TSS) \\[\\mathbf{SS}\\] suspended particulate matter concentration (linked variable or externally provided) \\[\\small{g/m^3}\\] pelagic 0 - 200 required for sorption, set po4sorption_target_variable NCS_ss1_vvel \\[\\mathbf{V_{ss1}}\\] sedimentation velocity of particulate matter \\[\\small{m/s}\\] pelagic -0.001 - 0.0001 automatically linked when w_po4ads = -999.9 . CAR_pH \\[pH\\] pH of water \\[\\small{-}\\] pelagic 2 - 12 optional for sorption, via pH_variable Diagnostics Table 7.2: Phosphorus - diagnostic variables AED name Symbol Description Unit Type Typical Range Comments diag_level = 0+ PHS_atm_dip_flux \\[\\mathbf{\\mathcal{F}}_{atm}^{dip}\\] \\(DIP\\) (\\(PO_4 + PO_4^{ads}\\)) atmospheric deposition flux \\[\\small{mmol\\: P/m^2/d}\\] surface 0 - 50 activated when simWetDeposition=T or simDryDeposition=T diag_level = 2+ PHS_sed_frp \\[\\mathbf{\\mathcal{F}}_{sed}^{frp}\\] \\(PO_4\\) exchange across sediment-water interface \\[\\small{mmol\\: P/m^2/d}\\] benthic 0 - 50 . 7.3.5 Parameter Summary The parameters and settings used by this module are summarised in Table 7.3. Table 7.3: Phosphorus module parameters and configuration options AED name Symbol Description Unit Type Typical Range Comments Initialisation frp_initial \\[PO_4|_{t=0}\\] initial \\(PO_4\\) concentration \\[\\small{mmol\\: P/m^3}\\] float 0 - 100 can be overwritten by initial condition files frp_min \\[PO_4\\rfloor_{min}\\] minimum \\(PO_4\\) concentration \\[\\small{mmol\\: P/m^3}\\] float 0 optional limitier frp_max \\[PO_4\\rceil^{max}\\] maximum \\(PO_4\\) concentration \\[\\small{mmol\\: P/m^3}\\] float 100 optional limitier Sediment exchange Fsed_frp \\[F_{sed}^{frp}\\] sediment \\(PO_4\\) flux at \\(20^{\\circ}C\\) \\[\\small{mmol\\: P/m^2/d}\\] float -30 - 30 . Ksed_frp \\[K_{frp}^{oxy}\\] half-saturation oxygen conc. controlling \\(O_2\\) flux \\[\\small{mmol\\: O_2/m^3}\\] float 20 - 100 . theta_sed_frp \\[\\theta_{sed}^{frp}\\] Arrhenius temperature multiplier for sediment \\(O_2\\) flux \\[\\small{-}\\] float 1.0 - 1.2 . phosphorus_reactant_variable \\[O_2\\] state variable used to control \\(PO_4\\) sediment release \\[\\small{-}\\] string OXY_oxy optional link for oxygen control on sediment \\(PO_4\\) release Fsed_frp_variable variable name to link to for spatially resolved sediment zones \\[\\small{-}\\] string SDF_Fsed_frp optional link to enable spatially resolved fluxes Sorption simPO4Adsorption \\[\\Theta_{frp}^{sorption}\\] option to allow include absorption \\[\\small{-}\\] boolean T or F . ads_use_external_tss option to use externally simulated \\(TSS\\) concentration as sorbent \\[\\small{-}\\] boolean T or F if an external TSS variable is linked, this can be used for sorption po4sorption_target_variable variable name to link to for \\(PO_4\\) sorbent \\[\\small{-}\\] string NCS_ss1 or GEO_FeOH3 select variable of choice PO4AdsorptionModel \\[\\Theta_{frp}^{sorption}\\] selection of \\(PO_4\\) sorption method \\[\\small{-}\\] integer 1 , 2 1: Ji (2008); 2: Chao et al. (2010) Kpo4p \\[K_{p}^{po4}\\] sorption partitioning coefficient \\[\\small{m^3/g}\\] float 0.01 - 0.1 . Kadsratio \\[K\\] ratio of adsorption and desorp-tion rate coefficients (for \\(\\Theta_{frp}^{sorption}=2\\)) \\[\\small{l/mg}\\] float 0.7 see Chao et al. (2010) Qmax \\[Q_{max}\\] maximum adsorption capacity (for \\(\\Theta_{frp}^{sorption}=2\\)) \\[\\small{mg\\:/mg\\:SS}\\] float 0.004 - 0.006 see Chao et al. (2010) w_po4ads \\[\\omega_{po4-ads}\\] sedimentation velocity of \\(PO_4^{ads}\\) \\[\\small{m/d}\\] float -0.01 . ads_use_pH option to include pH control on sorption coefficient \\[\\small{-}\\] boolean T or F function based on pH sorption control on Fe minerals pH_variable \\[pH\\] variable name to link to for pH to influence sorption \\[\\small{-}\\] string CAR_pH . Atmospheric exchange simDryDeposition \\[\\Theta_{frp-ads}^{drydep}\\] option to include dry (particulate) deposition of P \\[\\small{-}\\] boolean T or F . atm_pip_dd \\[F_{pip}^{atm}\\] \\(PO_4^{ads}\\) deposition rate \\[\\small{mmol\\: P/m^2/d}\\] float 0 - 10 . simWetDeposition \\[\\Theta_{frp}^{wetdep}\\] option to include wet deposition of P through rainfall \\[\\small{m}\\] boolean T or F . atm_frp_conc \\[PO_4^{atm}\\] \\(PO_4\\) concentration in rainfall \\[\\small{mmol\\: P/m^3}\\] float 0 - 2 . 7.4 Setup &amp; Configuration An example aed.nml parameter specification block for the aed_phosphorus module that is modelling dissolved and particulare (sorbed) \\(PO_4\\) is shown below: &amp;aed_phosphorus !-- Initial value frp_initial = 0.25 !-- Sediment flux Fsed_frp = 0.08 Ksed_frp = 30.0 theta_sed_frp = 1.08 phosphorus_reactant_variable =&#39;OXY_oxy&#39; !-- PO4 adsorption simPO4Adsorption = .true. ads_use_external_tss = .true. PO4AdsorptionModel = 1 Kpo4p = 0.01 w_po4ads = -0.01 / An example aed.nml parameter specification block for the aed_phosphorus module that includes all options is shown below: &amp;aed_phosphorus !-- Initial value frp_initial = 0.25 !-- Sediment flux Fsed_frp = 0.08 Ksed_frp = 30.0 theta_sed_frp = 1.08 phosphorus_reactant_variable =&#39;OXY_oxy&#39; Fsed_frp_variable =&#39;SDF_Fsed_frp&#39; !-- PO4 adsorption simPO4Adsorption = .true. ads_use_external_tss = .false. po4sorption_target_variable =&#39;NCS_ss1&#39; PO4AdsorptionModel = 2 Kpo4p = 0.01 Kadsratio= 1.0 Qmax = 1.0 w_po4ads = -9999 ! Note: -9999 links PO4-ad settling to target_variable ads_use_pH = .false. pH_variable = &#39;CAR_pH&#39; !-- Atmospheric deposition simDryDeposition = .false. atm_pip_dd = 0.00 simWetDeposition = .true. atm_frp_conc = 0.01 / 7.5 Case Studies &amp; Examples 7.5.1 Case Study 7.5.2 Publications "],["silica.html", "8 Silica 8.1 Contributors 8.2 Overview 8.3 Model Description 8.4 Setup &amp; Configuration 8.5 Case Studies &amp; Examples", " 8 Silica 8.1 Contributors Matthew R. Hipsey 8.2 Overview 8.3 Model Description 8.3.1 Process Descriptions 8.3.2 Optional Module Links 8.3.3 Feedbacks to the Host Model The silica module has no feedbacks to the host hydrodynamic model. 8.3.4 Variable Summary The default variables created by this module, and the optionally required linked variables needed for full functionality of this module are summarised in Table 8.1. The diagnostic outputs able to be output are summarised in Table 8.2. State variables Table 8.1: Silica - state variables AED name Symbol Description Unit Type Typical Range Comments aed_silica SIL_rsi \\[\\mathbf{RSi}\\] dissolved reactive silica concentration \\[\\small{mmol\\:Si/m^3}\\] pelagic 0 - 500 . Dependent variables SDF_Fsed_rsi \\[\\mathbf{F}_{sed}^{rsi}\\] reference sediment \\(RSi\\) flux \\[\\small{mmol \\:Si/m^2/s}\\] benthic -300 - 300 read and output as /day, but internally used as /s Diagnostics Table 8.2: Silica - diagnostic variables AED name Symbol Description Unit Type Typical Range Comments diag_level = 2+ SIL_sed_rsi \\[\\mathbf{\\mathcal{F}}_{sed}^{rsi}\\] \\(RSi\\) exchange across sediment-water interface \\[\\small{mmol\\: Si/m^2/d}\\] benthic 0 - 50 . 8.3.5 Parameter Summary The parameters and settings used by this module are summarised in Table 8.3. Table 8.3: Silica module parameters and configuration options AED name Symbol Description Unit Type Typical Range Comments Initialisation rsi_initial \\[RSi|_{t=0}\\] initial \\(RSi\\) concentration \\[\\small{mmol\\: Si/m^3}\\] float 0 - 5000 can be overwritten by initial condition files rsi_min \\[RSi\\rfloor_{min}\\] minimum \\(RSi\\) concentration \\[\\small{mmol\\: Si/m^3}\\] float 0 optional limitier rsi_max \\[RSi\\rceil^{max}\\] maximum \\(RSi\\) concentration \\[\\small{mmol\\: Si/m^3}\\] float 600 optional limitier Sediment exchange Fsed_rsi \\[F_{sed}^{rsi}\\] reference sediment \\(RSi\\) flux at \\(20^{\\circ}C\\) \\[\\small{mmol\\: Si/m^2/d}\\] float -300 - 300 . Ksed_rsi \\[K_{sed}^{rsi}\\] half-saturation oxygen conc. controlling \\(Si\\) flux \\[\\small{mmol\\: Si/m^3}\\] float 20 - 100 . theta_sed_rsi \\[\\theta_{sed}^{rsi}\\] Arrhenius temperature multiplier for sediment \\(Si\\) flux \\[\\small{-}\\] float 1.0 - 1.2 . Fsed_rsi_variable variable name to link to for spatially resolved sediment zones \\[\\small{-}\\] string SDF_Fsed_rsi optional link to enable spatially resolved fluxes silica_reactant_variable \\[O_2\\] state variable used to control \\(Si\\) sediment release \\[\\small{-}\\] string OXY_oxy optional link for oxygen control on sediment \\(Si\\) release 8.4 Setup &amp; Configuration An example aed.nml parameter specification block for the aed_silica module is shown below: &amp;aed_silica !-- Initial value rsi_initial = 12.5 !-- Sediment flux Fsed_rsi = 1.8 Ksed_rsi = 50.0 theta_sed_rsi = 1.08 silica_reactant_variable = &#39;OXY_oxy&#39; Fsed_rsi_variable = &#39;SDF_Fsed_rsi&#39; / 8.5 Case Studies &amp; Examples 8.5.1 Case Study 8.5.2 Publications "],["OGM_1.html", "9 Organic Matter 9.1 Contributors 9.2 Overview 9.3 Model Description 9.4 Setup &amp; Configuration", " 9 Organic Matter 9.1 Contributors Matthew R. Hipsey 9.2 Overview Both the inorganic and organic, and dissolved and particulate forms of C, N and P are modelled in AED along the general degradation pathway of POM to DOM to dissolved inorganic matter (DIM). The OGM module simulates the organic material as a single or as multiple discrete pools. The inorganic carbon, nitrogen and phosphorus pools are reported in separate modules which are linked to from OGM. It is well established that both autochthonous and allochthonous sources of OM have important consequences for water quality. Reactivity of OM is known to be linked with origin, varying potentially orders of magnitude, and often including a single OM pool could be a significant over-simplification. Harvey and Mannio (2001) analysed samples from several points in a US estuary according to an uncharacterisable fraction and a few major molecular classes (carbohydrates, proteins, lipids, lignins and hydrocarbons), and identified significant changes along the estuarine gradient. Within the particulate pool, similarly there is a relatively labile POM fraction based on internal generation, and inputs from urban drains, in addition to a more refractory coarse POM pool (CPOM) that originates mainly form the forested headwaters and regions with significant intact riparian vegetation. 9.3 Model Description A 10-pool organic matter model able to capture the variable reactivity of the OM pool and its stoichiometry is configureable within this module. Under this conceptual model the decomposition of particulate detrital material is broken down through a process of enzymatic hydrolysis that slowly converts POM to labile DOM. A small fraction, \\(f_{ref}\\), of this material is diverted to the DOM-R pool. The bioavailable DOM material enters the bacterial terminal metabolism pathways. These are active depending on the ambient oxygen concentrations and presence of electron acceptors, and of most relevance to the reservoirs, these pathways aerobic breakdown, denitrification, sulfate reduction, and methanogenesis. In most model approaches it is assumed these communities vary in response to temperature, and are mediated using a simple oxygen dependence or limitation factor. Figure 9.1: Schematic overview of organic matter (OM) pools and their interactions. Grey dashed line indicates optional process pathway. Different tributaries to the model must be prescribed OM pool boundary concentrations based on land-use specific ratios of POM and DOM reactivity. The main dissolved organic matter pool balance equations are simulated as: \\[\\begin{eqnarray} \\frac{D}{Dt}DOC = \\color{darkgray}{ \\mathbb{M} + \\mathcal{S} } \\quad &amp;+&amp; \\overbrace{(1-k_{ref})\\:f_{hyd}^{POC}-f_{min}^{DOC}+\\hat{f}_{sed}^{DOC} }^\\text{aed_organic_matter} \\\\ \\tag{9.1} &amp;+&amp; \\color{brown}{ f_{exr}^{PHY} + f_{exr}^{ZOO} + \\hat{f}_{rsp}^{MAG} + \\hat{f}_{rsp}^{BIV}} \\\\ \\nonumber \\end{eqnarray}\\] \\[\\begin{eqnarray} \\frac{D}{Dt}DON = \\color{darkgray}{ \\mathbb{M} + \\mathcal{S} } \\quad &amp;+&amp; f_{hyd}^{PON}-f_{min}^{DON}+\\hat{f}_{sed}^{DON}\\\\ \\tag{9.2} &amp;+&amp; \\color{brown}{ f_{exr}^{PHY} + f_{exr}^{ZOO} + \\hat{f}_{rsp}^{MAG} + \\hat{f}_{rsp}^{BIV}} \\\\ \\nonumber \\end{eqnarray}\\] \\[\\begin{eqnarray} \\frac{D}{Dt}DOP = \\color{darkgray}{ \\mathbb{M} + \\mathcal{S} } \\quad &amp;+&amp; f_{hyd}^{POP}-f_{min}^{DOP}+\\hat{f}_{sed}^{DOP}\\\\ \\tag{9.3} &amp;+&amp; \\color{brown}{ f_{exr}^{PHY} + f_{exr}^{ZOO} + \\hat{f}_{rsp}^{MAG} + \\hat{f}_{rsp}^{BIV}} \\\\ \\nonumber \\end{eqnarray}\\] where \\(\\mathbb{M}\\) and \\(\\mathcal{S}\\) refer to water mixing and boundary source terms, respectively, and the coloured \\(\\color{brown}{f}\\) terms reflect DOM related fluxes computed by other (optionally) linked modules such as modules of phytoplankton (\\(\\mathrm{PHY}\\)) or zooplankton (\\(\\mathrm{ZOO}\\)). The main particulate organic matter pools are simulated as: \\[\\begin{eqnarray} \\frac{D}{Dt}POC = \\color{darkgray}{ \\mathbb{M} + \\mathcal{S} } \\quad &amp;+&amp; \\overbrace{f_{set}^{POC}-f_{hyd}^{DOC}+\\hat{f}_{res}^{POC} }^\\text{aed_organic_matter} \\\\ \\tag{9.4} &amp;+&amp; \\color{brown}{ f_{mor}^{PHY} + f_{egs}^{ZOO} + f_{msf}^{ZOO} + \\hat{f}_{mor}^{MAG} + \\hat{f}_{msf}^{BIV}} \\\\ \\nonumber \\end{eqnarray}\\] \\[\\begin{eqnarray} \\frac{D}{Dt}PON = \\color{darkgray}{ \\mathbb{M} + \\mathcal{S} } \\quad &amp;+&amp; f_{set}^{PON}-f_{hyd}^{DON}+\\hat{f}_{res}^{PON}\\\\ \\tag{9.5} &amp;+&amp; \\color{brown}{ f_{exr}^{PHY} + f_{exr}^{ZOO} + \\hat{f}_{rsp}^{MAG} + \\hat{f}_{rsp}^{BIV}} \\\\ \\nonumber \\end{eqnarray}\\] \\[\\begin{eqnarray} \\frac{D}{Dt}POP = \\color{darkgray}{ \\mathbb{M} + \\mathcal{S} } \\quad &amp;+&amp; f_{set}^{POP}-f_{hyd}^{DOP}+\\hat{f}_{res}^{POP}\\\\ \\tag{9.6} &amp;+&amp; \\color{brown}{ f_{exr}^{PHY} + f_{exr}^{ZOO} + \\hat{f}_{rsp}^{MAG} + \\hat{f}_{rsp}^{BIV}} \\\\ \\nonumber \\end{eqnarray}\\] The OGM module optionally allows and extra 4 pools to specifically resolve the refractory (less reactive) organic matter material. In general we refer to the refractory DOM pool as \\(DOM{\\text -}R\\), which is broken into elemental pools, plus the \\(C{\\text -}POM\\) variables simulating coarse POM: \\[\\begin{eqnarray} \\frac{D}{Dt}DOC{\\text -}R = \\color{darkgray}{ \\mathbb{M} + \\mathcal{S} } \\quad &amp;+&amp; \\overbrace{k_{ref}\\:f_{hyd}^{POC}-R^{DOMR}_{pm} +\\hat{f}_{sed}^{DOCR} }^\\text{aed_organic_matter} \\\\ \\tag{9.7} &amp;+&amp; \\color{brown}{ f_{exr}^{PHY} + f_{exr}^{ZOO} + \\hat{f}_{rsp}^{MAG} + \\hat{f}_{rsp}^{BIV}} \\\\ \\nonumber \\end{eqnarray}\\] \\[\\begin{eqnarray} \\frac{D}{Dt}DON{\\text -}R = \\color{darkgray}{ \\mathbb{M} + \\mathcal{S} } \\quad &amp;+&amp; f_{hyd}^{PON}-f_{min}^{DON}+\\hat{f}_{sed}^{DON}\\\\ \\tag{9.8} &amp;+&amp; \\color{brown}{ f_{exr}^{PHY} + f_{exr}^{ZOO} + \\hat{f}_{rsp}^{MAG} + \\hat{f}_{rsp}^{BIV}} \\\\ \\nonumber \\end{eqnarray}\\] \\[\\begin{eqnarray} \\frac{D}{Dt}DOP{\\text -}R = \\color{darkgray}{ \\mathbb{M} + \\mathcal{S} } \\quad &amp;+&amp; f_{hyd}^{POP}-f_{min}^{DOP}+\\hat{f}_{sed}^{DOP}\\\\ \\tag{9.9} &amp;+&amp; \\color{brown}{ f_{exr}^{PHY} + f_{exr}^{ZOO} + \\hat{f}_{rsp}^{MAG} + \\hat{f}_{rsp}^{BIV}} \\\\ \\nonumber \\end{eqnarray}\\] \\[\\begin{eqnarray} \\frac{D}{Dt}C{\\text -}POM = \\color{darkgray}{ \\mathbb{M} + \\mathcal{S} } \\quad &amp;+&amp; f_{set}^{CPOM}-f_{bdn}^{CPOM}+\\hat{f}_{res}^{CPOM} \\\\ \\tag{9.10} &amp;+&amp; \\color{brown}{ \\check{f}_{lfl}^{VEG}} \\\\ \\nonumber \\end{eqnarray}\\] The details of how each flux relevant to POC and DOC is calculated, and the associated parameter settings, are described in the next sections. 9.3.1 Process Descriptions 9.3.1.1 Hydrolysis 9.3.1.2 Mineralisation 9.3.1.3 Photolysis Ultraviolet light is known to drive photochemical breakdown of chromophoric \\(DOM\\), conceptually equivalent to the \\(DOM{\\text -}R\\) pool in Figure X. This photolysis process can take shape either as photo-transformation of complex \\(DOM{\\text -}R\\) molecules to more bioavailable molecules (ie., DOM in Figure X), or as photo-mineralisation, where by components of the DOM-R molecule are mineralised. This is modelled based on a known intensity of UV photons, which drives a stoichiometrically equivalent loss of DOM-R via the photolysis reaction, and \\(f_{photo}\\) is introduced as an empirically defined fraction that indicates the extent to which the process transforms the DOM-R molecules to bioavailable molecules or completely mineralises them. The rate of photolysis can be computed based on the apparent quantum yield, ø¿, which varies with wavelength, the scalar photon flux density, ¡¿, and the adsorption coefficient, α¿, by integrating across the active wavelength spectrum, √415 v ́ √49?. This can be approximated for b discrete bandwidths (e.g. UV-A, UV-B, PAR) to simplify the calculation as: \\[\\begin{equation} R^{DOMR}_{pm} = \\int_{\\lambda_{min}}^{\\lambda_{max}} \\phi_{\\lambda} \\hat{I}_{\\lambda} \\alpha_{\\lambda} d\\lambda \\: \\approx \\: \\sum_{b=1}^3 \\bar{\\phi}_b \\hat{I}_b \\alpha_b \\end{equation}\\] where \\(\\hat{I}_b\\) is the mean bandwidth intensity (mol photons m-2 s-1) computed from the light intensity at any given depth, I, ø» is the mean bandwidth quantum yield, and \\(\\alpha_b\\) is the mean absorbance across the window of the specific bandwidth being computed. The latter two can be approximated by substituting into the following (Vähätalo et al. 2000; Vähätalo and Zepp, 2005): \\(\\phi_{\\lambda}=c10^{-d \\lambda }\\) and \\(\\alpha_{\\lambda} = \\alpha_x exp(-S[x-\\lambda])\\). 9.3.1.4 CPOM breakdown Internally generated inputs of POM also include from the shedding of seagrass leaves (this happens en-mass usually associated with winds/storms) and also decomposition of macroalgae or other . These latter terms are not presently included but reserved for future development efforts. 9.3.1.5 Sediment exchange 9.3.1.6 Settling 9.3.1.7 Resuspension 9.3.2 Optional Module Links 9.3.3 Feedbacks to the Host Model The organic matter can feedback conditions to the hydrodynamic model by modifying the light extinction coefficient. For each dissolved and particulate attribute a specific attenuation coefficient, \\(K_e\\), is required. This total light extinction computed by the OGM model is: \\[\\begin{equation} K_{d_{om}} = K_{e_{doc}} DOC + K_{e_{poc}} POC + K_{e_{cdom}}CDOM + K_{e_{cpom}}CPOM (\\#eq:om_light_extc) \\end{equation}\\] 9.3.4 Variable Summary The default variables created by this module, and the optionally required linked variables needed for full functionality of this module are summarised in Table 9.1. The diagnostic outputs able to be output are summarised in Table 9.2. State variables Table 9.1: Organic Matter - state variables AED name Symbol Description Unit Type Typical Range Comments aed_organic_matter OGM_doc \\[\\mathbf{DOC}\\] dissolved organic carbon concentration \\[\\small{mmol\\: C/m^3}\\] pelagic 0 - 5000 OGM_poc \\[\\mathbf{POC}\\] particulate organic carbon concentration \\[\\small{mmol\\: C/m^3}\\] pelagic NA OGM_don \\[\\mathbf{DON}\\] dissolved organic nitrogen concentration \\[\\small{mmol\\: N/m^3}\\] pelagic NA OGM_pon \\[\\mathbf{PON}\\] particulate organic nitrogen concentration \\[\\small{mmol\\: N/m^3}\\] pelagic NA OGM_dop \\[\\mathbf{DOP}\\] dissolved organic phosphorus concentration \\[\\small{mmol\\: P/m^3}\\] pelagic NA OGM_pop \\[\\mathbf{POP}\\] particulate organic phosphorus concentration \\[\\small{mmol\\: P/m^3}\\] pelagic NA OGM_docr \\[\\mathbf{DOC_R}\\] dissolved organic carbon (refractory) concentration \\[\\small{mmol\\: C/m^3}\\] pelagic NA DOC_R activated by setting simRpools=T OGM_donr \\[\\mathbf{DON_R}\\] dissolved organic nitrogen (refractory) concentration \\[\\small{mmol\\: N/m^3}\\] pelagic 0 - 200 DON_R activated by setting simRpools=T OGM_dopr \\[\\mathbf{DOP_R}\\] dissolved organic phosphorus (refractory) concentration \\[\\small{mmol\\: P/m^3}\\] pelagic 7 - 9 DOP_R activated by setting simRpools=T OGM_cpom \\[\\mathbf{CPOM}\\] coarse particulate organic matter \\[\\small{mmol\\: C/m^3}\\] pelagic 0 - 500 CPOM activated by setting simRpools=T Dependent variables CAR_dic \\[\\mathbf{DIC}\\] dissolved inorganic carbon concentration \\[\\small{mmol\\: C/m^3}\\] pelagic NA optionally linked NIT_amm \\[\\mathbf{NH_4}\\] dissolved ammonium concentration \\[\\small{mmol\\: N/m^3}\\] pelagic NA optionally linked PHS_frp \\[\\mathbf{PO_4}\\] dissolved phosphate concentration \\[\\small{mmol\\: P/m^3}\\] pelagic NA optionally linked OXY_oxy \\[\\mathbf{O_2}\\] dissolved oxygen concentration \\[\\small{mmol\\: O_2/m^3}\\] pelagic 0 - 500 optional for sediment and mineralisation reactions, via dom_miner_oxy_reactant_var NIT_nit \\[\\mathbf{NO_3}\\] dissolved nitrate concentration \\[\\small{mmol\\: N/m^3}\\] pelagic NA optional for advanced mineralisation reactions, via dom_miner_nit_reactant_var NIT_no2 \\[\\mathbf{NO_2}\\] dissolved nitrite concentration \\[\\small{mmol\\: N/m^3}\\] pelagic NA optional for advanced mineralisation reactions, via dom_miner_no2_reactant_var NIT_n2o \\[\\mathbf{N_2O}\\] dissolved nitrous oxide concentration \\[\\small{mmol\\: N/m^3}\\] pelagic NA optional for advanced mineralisation reactions, via dom_miner_n2o_reactant_var GEO_fe3 \\[\\mathbf{FeIII}\\] dissolved ferrous iron concentration \\[\\small{mmol\\: Fe/m^3}\\] pelagic NA optional for advanced mineralisation reactions, via dom_miner_fe3_reactant_var GEO_so4 \\[\\mathbf{SO_4}\\] dissolved sulfate concentration \\[\\small{mmol\\: S/m^3}\\] pelagic NA optional for advanced mineralisation reactions, via dom_miner_so4_reactant_var CAR_ch4 \\[\\mathbf{CH_4}\\] dissolved methane concentration \\[\\small{mmol\\: C/m^3}\\] pelagic NA optional for advanced mineralisation reactions, via dom_miner_ch4_reactant_var SDF_Fsed_doc \\[\\mathbf{F}_{sed}^{doc}\\] dissolved sediment \\(DOC\\) flux \\[\\small{mmol\\: C/m^2/s}\\] benthic 0 - 300 required for sediment zones; internally used as /s SDF_Fsed_don \\[\\mathbf{F}_{sed}^{don}\\] dissolved sediment \\(DON\\) flux \\[\\small{mmol\\: C/m^2/s}\\] benthic 0 - 300 required for sediment zones; internally used as /s SDF_Fsed_dop \\[\\mathbf{F}_{sed}^{dop}\\] dissolved sediment \\(DOP\\) flux \\[\\small{mmol\\: C/m^2/s}\\] benthic 0 - 300 required for sediment zones; internally used as /s NCS_resus NA sediment resuspension rate \\[\\small{g/m^2/s}\\] benthic 0 - 10 required for POM resuspension, set via resus_link Diagnostics Table 9.2: Organic Matter - diagnostic variables AED name Symbol Description Unit Type Typical Range Comments diag_level = 0+ OGM_CDOM \\[\\mathbf{CDOM}\\] chromophoric dissolved organic matter \\[\\small{/m}\\] pelagic NA OGM_BOD5 \\[\\mathbf{BOD5}\\] biochemical oxygen demand estimate \\[\\small{mg\\:O_2/L}\\] pelagic NA diag_level = 1+ OGM_sed_toc NA sediment total organic carbon \\[\\small{mmol\\: C/m^2}\\] sediment NA OGM_sed_ton NA sediment total organic nitrogen \\[\\small{mmol\\: N/m^2}\\] sediment NA OGM_sed_top NA sediment total organic phosphorus \\[\\small{mmol\\: P/m^2}\\] sediment NA diag_level = 2+ OGM_poc_hydrol \\[\\mathbf{f}_{hydrl}^{POC}\\] computed \\(POC\\) hydrolysis/breakdown rate \\[\\small{mmol\\: C/m^3/d}\\] pelagic NA OGM_pon_hydrol \\[\\mathbf{f}_{hydrl}^{PON}\\] computed \\(PON\\) hydrolysis/breakdown rate \\[\\small{mmol\\: N/m^3/d}\\] pelagic NA OGM_pop_hydrol \\[\\mathbf{f}_{hydrl}^{POP}\\] computed \\(POP\\) hydrolysis/breakdown rate \\[\\small{mmol\\: P/m^3/d}\\] pelagic NA OGM_doc_miner \\[\\mathbf{f}_{miner}^{DOC}\\] computed \\(DOC\\) mineralisation rate \\[\\small{mmol\\: C/m^3/d}\\] pelagic NA OGM_don_miner \\[\\mathbf{f}_{miner}^{DON}\\] computed \\(DON\\) mineralisation rate \\[\\small{mmol\\: N/m^3/d}\\] pelagic NA OGM_dop_miner \\[\\mathbf{f}_{miner}^{DOP}\\] computed \\(DOP\\) mineralisation rate \\[\\small{mmol\\: P/m^3/d}\\] pelagic NA OGM_docr_miner \\[\\mathbf{f}_{miner}^{DOC_R}\\] computed \\(DOC_R\\) mineralisation rate \\[\\small{mmol\\: C/m^3/d}\\] pelagic NA OGM_donr_miner \\[\\mathbf{f}_{miner}^{DON_R}\\] computed \\(DON_R\\) mineralisation rate \\[\\small{mmol\\: N/m^3/d}\\] pelagic NA OGM_dopr_miner \\[\\mathbf{f}_{miner}^{DOP_R}\\] computed \\(DOP_R\\) mineralisation rate \\[\\small{mmol\\: P/m^3/d}\\] pelagic NA OGM_anaerobic \\[\\mathbf{f}_{anaerobic}^{doc}\\] rate of \\(DOC\\) anaerobic mineralisation \\[\\small{mmol\\: C/m^3/d}\\] pelagic NA OGM_denit \\[\\mathbf{f}_{denit}^{no3}\\] computed mineralisation rate due to denitrification \\[\\small{mmol\\: C/m^3/d}\\] pelagic NA OGM_photolysis \\[\\mathbf{f}_{photo}^{doc}\\] computed mineralisation rate due to photolysis \\[\\small{mmol\\: C/m^3/d}\\] pelagic NA requires simPhotolysis=T OGM_pom_vvel \\[\\mathbf{\\omega}_{pom}\\] \\(POM\\) settling velocity \\[\\small{m/d}\\] pelagic NA OGM_cpom_vvel \\[\\mathbf{\\omega}_{cpom}\\] \\(CPOM\\) settling velocity \\[\\small{m/d}\\] pelagic NA OGM_Psed_poc \\[\\mathbf{\\mathcal{F}}_{set}^{poc}\\] \\(POC\\) sedimentation areal flux \\[\\small{mmol\\: C/m^2/s}\\] pelagic NA OGM_Psed_pon \\[\\mathbf{\\mathcal{F}}_{set}^{pon}\\] \\(PON\\) sedimentation areal flux \\[\\small{mmol\\: C/m^2/s}\\] pelagic NA OGM_Psed_pop \\[\\mathbf{\\mathcal{F}}_{set}^{pop}\\] \\(POP\\) sedimentation areal flux \\[\\small{mmol\\: C/m^2/s}\\] pelagic NA OGM_Psed_cpom \\[\\mathbf{\\mathcal{F}}_{set}^{cpom}\\] \\(CPOM\\) sedimentation areal flux \\[\\small{mmol\\: C/m^2/s}\\] pelagic NA OGM_swi_poc \\[\\mathbf{\\mathcal{F}}_{resus}^{doc}\\] \\(POC\\) resuspension flux \\[\\small{mmol\\: C/m^2/d}\\] benthic NA OGM_swi_doc \\[\\mathbf{\\mathcal{F}}_{dsf}^{doc}\\] \\(DOC\\) exchange across sediment-water interface \\[\\small{mmol\\: C/m^2/d}\\] benthic NA OGM_swi_pon \\[\\mathbf{\\hat{f}}_{resus}^{pon}\\] \\(PON\\) resuspension flux \\[\\small{mmol\\: C/m^2/d}\\] benthic NA OGM_swi_don \\[\\mathbf{\\mathcal{F}}_{dsf}^{don}\\] \\(DON\\) exchange across sediment-water interface \\[\\small{mmol\\: N/m^2/d}\\] benthic NA OGM_swi_pop \\[\\mathbf{\\hat{f}}_{resus}^{pon}\\] \\(POP\\) resuspension flux \\[\\small{mmol\\: C/m^2/d}\\] benthic NA OGM_swi_dop \\[\\mathbf{\\mathcal{F}}_{dsf}^{dop}\\] \\(DOP\\) exchange across sediment-water interface \\[\\small{mmol\\: P/m^2/d}\\] benthic NA 9.3.5 Parameter Summary The parameters and settings used by this module are summarised in Table 9.3. Table 9.3: Organic Matter module parameters and configuration options AED name Symbol Description Unit Type Typical Range Comments Initialisation poc_initial \\[POC|_{t=0}\\] initial \\(POC\\) concentration \\[\\small{mmol\\: C/m^3}\\] float 0-1000 can be overwritten by initial condition files doc_initial \\[DOC|_{t=0}\\] initial \\(DOC\\) concentration \\[\\small{mmol\\: C/m^3}\\] float 0-1000 can be overwritten by initial condition files pon_initial \\[PON|_{t=0}\\] initial \\(PON\\) concentration \\[\\small{mmol\\: N/m^3}\\] float 0-100 can be overwritten by initial condition files don_initial \\[DON|_{t=0}\\] initial \\(DON\\) concentration \\[\\small{mmol\\: N/m^3}\\] float 0-100 can be overwritten by initial condition files pop_initial \\[POP|_{t=0}\\] initial \\(POP\\) concentration \\[\\small{mmol\\: P/m^3}\\] float 0-10 can be overwritten by initial condition files dop_initial \\[DOP|_{t=0}\\] initial \\(DOP\\) concentration \\[\\small{mmol\\: P/m^3}\\] float 0-10 can be overwritten by initial condition files cpom_initial \\[CPOM|_{t=0}\\] initial \\(CPOM\\) concentration \\[\\small{mmol\\: C/m^3}\\] float 0-1000 can be overwritten by initial condition files Breakdown and mineralisation Rpoc_hydrol \\[R_{hydrl}^{POC}\\] reference \\(POC\\) hydrolysis/breakdown rate @ \\(20^{\\circ}C\\) \\[\\small{/d}\\] float NA Rpon_hydrol \\[R_{hydrl}^{PON}\\] reference \\(PON\\) hydrolysis/breakdown rate @ \\(20^{\\circ}C\\) \\[\\small{/d}\\] float NA Rpop_hydrol \\[R_{hydrl}^{POP}\\] reference \\(POP\\) hydrolysis/breakdown rate @ \\(20^{\\circ}C\\) \\[\\small{/d}\\] float NA theta_hydrol \\[\\theta_{hydrl}\\] Arrhenius temperature scaling coefficient for \\(POC\\) hydrolysis \\[\\small{-}\\] float 1 - 1.2 Kpom_hydrol \\[K_{hydrl}^{oxy}\\] half-saturation \\(O_2\\) conc. for \\(POM\\) hydrolysis \\[\\small{mmol\\: O_2/m^3}\\] float NA Rdom_minerl \\[R_{minerl}^{DOM}\\] reference \\(DOM\\) mineralisation rate @ \\(20^{\\circ}C\\) \\[\\small{/d}\\] float NA theta_minerl \\[\\theta_{minerl}\\] Arrhenius temperature scaling coefficient for \\(DOM\\) mineralisation \\[\\small{-}\\] float NA Kdom_minerl \\[K_{minerl}^{oxy}\\] half-saturation \\(O_2\\) conc. for \\(DOM\\) mineralisation \\[\\small{mmol\\: O_2/m^3}\\] float NA simDenitrification \\[\\Theta_{nit}^{denit}\\] option to select denitrification sub-model \\[\\small{-}\\] integer 0 , 1 f_an \\[f_{an}\\] mineralisation scaling fraction under anaerobic conditions \\[\\small{-}\\] float 0 - 1 K_nit \\[K_{denit}^{nit}\\] half-saturation \\(NO_3\\) conc. for denitrification \\[\\small{mmol\\: N/m^3}\\] float NA dom_miner_oxy_reactant_var \\[O_2\\] state variable used to control aerobic mineralisation \\[\\small{-}\\] string OXY_oxy optional link for oxygen consumption during mineralisation dom_miner_nit_reactant_var \\[NO_3\\] state variable used to control nitrate reduction \\[\\small{-}\\] string NIT_nit optional link for nitrate consumption during mineralisation dom_miner_no2_reactant_var \\[NO_2\\] state variable used to control nitrite reduction \\[\\small{-}\\] string NIT_no2 optional link for nitrite consumption during mineralisation dom_miner_n2o_reactant_var \\[N_2O\\] state variable used to control n2o reduction \\[\\small{-}\\] string NIT_n2o optional link for nitrous oxide consumption during mineralisation dom_miner_fe3_reactant_var \\[FeIII\\] state variable used to control iron reduction \\[\\small{-}\\] string GEO_feiii optional link for ferrous iron consumption during mineralisation dom_miner_so4_reactant_var \\[SO_4\\] state variable used to control sulfate reduction \\[\\small{-}\\] string GEO_so4 optional link for sulfate consumption during mineralisation dom_miner_ch4_reactant_var \\[CH_4\\] state variable to receive methane \\[\\small{-}\\] string CAR_ch4 optional link for methane production doc_miner_product_variable \\[DIC\\] state variable to receive \\(DIC\\) \\[\\small{-}\\] string CAR_dic optional link for dic production don_miner_product_variable \\[NH_4\\] state variable to receive \\(NH_4\\) \\[\\small{-}\\] string NIT_amm optional link for ammonium production dop_miner_product_variable \\[PO_4\\] state variable to receive \\(PO_4\\) \\[\\small{-}\\] string PHS_frp optional link for phosphate production Refractory organic matter simRPools \\[\\Theta_{om}^{refrac}\\] option to include refractory \\(OM\\) pools, incl. \\(DOM_R\\) and \\(CPOM\\) \\[\\small{-}\\] boolean T or F Rdomr_minerl \\[R_{minerl}^{DOM_R}\\] reference \\(DOM_R\\) mineralisation rate @ \\(20^{\\circ}C\\) \\[\\small{/d}\\] float NA Rcpom_bdown \\[R_{bdown}^{CPOM}\\] reference \\(CPOM\\) hydrolysis/breakdown rate @ \\(20^{\\circ}C\\) \\[\\small{/d}\\] float NA X_cpom_n \\[\\chi_{C:N}^{cpom}\\] \\(CPOM\\) nitrogen stoichiometry \\[\\small{mmol\\:N/mmol\\:C}\\] float NA X_cpom_p \\[\\chi_{C:P}^{cpom}\\] \\(CPOM\\) phosphorus stoichiometry \\[\\small{mmol\\:P/mmol\\:C}\\] float NA Light related parameters KeDOM \\[K_e^{DOM}\\] specific light attenuation coefficient for \\(DOM\\) \\[\\small{/m/(mmol\\:C/m^3)}\\] float NA KePOM \\[K_e^{POM}\\] specific light attenuation coefficient for \\(POM\\) \\[\\small{/m/(mmol\\:C/m^3)}\\] float 0 - 1 KeDOMR \\[K_e^{DOM_R}\\] specific light attenuation coefficient for \\(DOM_R\\) \\[\\small{/m/(mmol\\:C/m^3)}\\] float 0.1 - 10 KeCPOM \\[K_e^{CPOM}\\] specific light attenuation coefficient for \\(CPOM\\) \\[\\small{/m/(mmol\\:C/m^3)}\\] float 1 - 1.1 simPhotolysis \\[\\Theta_{om}^{photo}\\] option to include photo-mineralisation of \\(DOM_R\\) \\[\\small{-}\\] boolean T or F photo_c \\[c_{photo}\\] photolysis constant NA float 7.5 Particle settling parameters settling \\[\\Theta_{set}^{pom}\\] option to set the method of settling for \\(POM\\) and \\(CPOM\\) \\[\\small{-}\\] integer 0, 1, 2, 3 w_pom \\[\\omega_{pom}\\] sedimentation velocity of \\(POM\\) detrital particles \\[\\small{m/d}\\] float NA used if \\(\\Theta_{set}^{pom}\\) is 1 or 2 d_pom \\[d_{pom}\\] diameter of \\(POM\\) detrital particles \\[\\small{m}\\] float NA used if \\(\\Theta_{set}^{pom}\\) is 3 rho_pom \\[\\rho_{pom}\\] density of \\(POM\\) detrital particles \\[\\small{kg/m^3}\\] float NA used if \\(\\Theta_{set}^{pom}\\) is 3 w_cpom \\[\\omega_{cpom}\\] sedimentation velocity of \\(CPOM\\) particles \\[\\small{m/d}\\] float NA used if \\(\\Theta_{set}^{pom}\\) is 1 or 2 d_cpom \\[d_{cpom}\\] diameter of \\(CPOM\\) detrital particles \\[\\small{m}\\] float NA used if \\(\\Theta_{set}^{pom}\\) is 3 rho_cpom \\[\\rho_{cpom}\\] density of \\(CPOM\\) detrital particles \\[\\small{kg/m^3}\\] float NA used if \\(\\Theta_{set}^{pom}\\) is 3 Resuspension resuspension \\[\\Theta_{resus}^{pom}\\] option to set the method of resuspension for \\(POM\\) and \\(CPOM\\) \\[\\small{-}\\] integer 0 , 1 resus_link \\[-\\] diagnostic variable to link to for resuspension rate \\[\\small{-}\\] string NCS_resus sedimentOMfrac \\[c_{om}\\] fraction by weight of surficial sediment organic matter \\[\\small{g\\:OM/g\\:sediment}\\] float NA Xsc \\[\\chi_{OM:C}^{sed}\\] stoichiometry of sedment particulate carbon \\[\\small{mmol\\:C/g\\:OM}\\] float NA Xsn \\[\\chi_{OM:N}^{sed}\\] stoichiometry of sedment particulate nitrogen \\[\\small{mmol\\:N/g\\:OM}\\] float NA Xsp \\[\\chi_{OM:P}^{sed}\\] stoichiometry of sedment particulate phosphorus \\[\\small{mmol\\:P/g\\:OM}\\] float NA Sediment exchange Fsed_doc \\[F_{sed}^{doc}\\] reference sediment \\(DOC\\) flux at \\(20^{\\circ}C\\) \\[\\small{mmol\\: C/m^2/d}\\] float 0 - 1 Fsed_don \\[F_{sed}^{don}\\] reference sediment \\(DON\\) flux at \\(20^{\\circ}C\\) \\[\\small{mmol\\: N/m^2/d}\\] float NA Fsed_dop \\[F_{sed}^{dop}\\] reference sediment \\(DON\\) flux at \\(20^{\\circ}C\\) \\[\\small{mmol\\: P/m^2/d}\\] float NA Ksed_dom \\[K_{sed-dom}^{oxy}\\] half-saturation oxygen conc. controlling \\(DOM\\) sediment flux \\[\\small{mmol\\: O_2/m^3}\\] float 20 - 100 theta_sed_dom \\[\\theta_{sed}^{dom}\\] Arrhenius temperature multiplier for sediment \\(DOM\\) flux \\[\\small{-}\\] float 1 - 1.1 Fsed_doc_variable \\[\\mathbf{F}_{sed}^{doc}\\] variable name to link to for spatially resolved sediment zones \\[\\small{mmol\\: C/m^2/d}\\] string SDF_Fsed_doc Fsed_don_variable \\[\\mathbf{F}_{sed}^{don}\\] variable name to link to for spatially resolved sediment zones \\[\\small{mmol\\: N/m^2/d}\\] string SDF_Fsed_don Fsed_dop_variable \\[\\mathbf{F}_{sed}^{dop}\\] variable name to link to for spatially resolved sediment zones \\[\\small{mmol\\: P/m^2/d}\\] string SDF_Fsed_dop 9.4 Setup &amp; Configuration An example aed.nml parameter specification block for the aed_organic_matter module is shown below: &amp;aed_organic_matter !-- Initial concentrations for OM variables (mmol/m3) poc_initial = 15 doc_initial = 15 pon_initial = 2 don_initial = 1.1 pop_initial = 0.1 dop_initial = 0.01 docr_initial = 150.0 donr_initial = 9 dopr_initial = 0.15 cpom_initial = 0 !-- Breakdown and mineralisation (basic pool) Rdom_minerl = 0.01348416 Rpoc_hydrol = 0.001 Rpon_hydrol = 0.001 Rpop_hydrol = 0.0001 theta_hydrol = 1.07 theta_minerl = 1.07 Kpom_hydrol = 33.66593 Kdom_minerl = 22.36079 simDenitrification = 1 dom_miner_oxy_reactant_var = &#39;OXY_oxy&#39; doc_miner_product_variable = &#39;CAR_dic&#39; don_miner_product_variable = &#39;NIT_amm&#39; dop_miner_product_variable = &#39;PHS_frp&#39; dom_miner_nit_reactant_var = &#39;NIT_nit&#39; f_an = 0.50 K_nit = 10.0 !-- Refractory organic matter (optional) simRPools = .true. Rdomr_minerl = 0.001 !-- Coarse particulate organic matter (optional) Rcpom_bdown = 0.005 X_cpom_n = 0.005 X_cpom_p = 0.001 !-- Light related parameters KeDOM = 0.03 KePOM = 0.096 KeDOMR = 0.15 KeCPOM = 0.00096 simphotolysis = .false. photo_c = 0.75 !-- Particle settling parameters settling = 1 w_pom = -0.01 d_pom = 1e-5 rho_pom = 1.2e3 w_cpom = -0.01 d_cpom = 1e-5 rho_cpom = 1.4e3 !-- Sediment interaction parameters (basic model) resuspension = 1 resus_link = &#39;NCS_resus&#39; sedimentOMfrac = 0.0002 Xsc = 0.5 Xsn = 0.05 Xsp = 0.005 Fsed_doc = 1.4 Fsed_don = 0.0 Fsed_dop = 0.0 Ksed_dom = 93.0 theta_sed_dom = 1.06 !Fsed_doc_variable = &#39;SDF_Fsed_doc&#39; !Fsed_don_variable = &#39;SDF_Fsed_don&#39; !Fsed_dop_variable = &#39;SDF_Fsed_dop&#39; diag_level = 10 / Note that when users link Fsed_doc_variable then Fsed_doc is not required as this parameter will be set for each sediment zone from values input via the aed_sedflux module. The numbers reported here are for example purposes and should be reviewed before use based on the users chosen site context. The entries are optional and will be set to defaults if the user does not provide a specific value. "],["phytoplankton.html", "10 Phytoplankton 10.1 Contributors 10.2 Overview 10.3 Model Description 10.4 Setup &amp; Configuration 10.5 Case Studies &amp; Examples", " 10 Phytoplankton 10.1 Contributors 10.2 Overview The approach to simulate algal biomass is to adopt several plankton functional types (“PFT’s”) that are typically defined based on specific groups such as diatoms, dinoflagellates and cyanobacteria. Whilst each group that is simulated is unique, they share a common mathematical approach and each simulate growth, death and sedimentation processes, and customisable internal nitrogen, phosphorus and/or silica stores if desired. Distinction between groups is made by adoption of groups specific parameters for environmental dependencies, and/or enabling options such as vertical migration or N fixation. 10.3 Model Description The main balance equation for a single configured phytoplankton group, \\(PHY_a\\), is described as: \\[\\begin{eqnarray} \\frac{D}{Dt}PHY_{a} = \\color{darkgray}{ \\mathbb{M} + \\mathcal{S} } \\quad &amp;+&amp; \\overbrace{ f_{gpp}^{PHY_{a}} - f_{rsp}^{PHY_{a}} - f_{mor}^{PHY_{a}} - f_{exc}^{PHY_{a}} + f_{set}^{PHY_{a}} + \\hat{f}_{res}^{PHY_{a}} }^\\text{aed_phytoplankton} \\\\ \\tag{10.1} &amp;-&amp; \\color{brown}{ f_{grz}^{ZOO} - \\hat{f}_{grz}^{BIV} } \\\\ \\nonumber \\end{eqnarray}\\] where \\(\\mathbb{M}\\) and \\(\\mathcal{S}\\) refer to water mixing and boundary source terms, respectively. The main processes controlling the rate of phytoplanklton biomass accumulation are gross primary productivity, respiration, mortality, excretion and exudation, settling and vertical migration, and resuspension. In addition, the coloured \\(\\color{brown}{f}\\) terms reflect phytoplankton related fluxes computed by other (optionally) linked modules such as the zooplankton (\\(\\mathrm{ZOO}\\)) or bivalve (\\(\\mathrm{BIV}\\)) modules, which compute grazing/filtration fluxes based on their rate of phytoplankton consumption. The default method for simulating phytoplankton biomass assess a constant intracellular C:N:P ratio. In this case, only a single state variable for carbon biomass is simulated and subject to trasnport, with the N and P content computed based on the C concentration at any point in time or space. The module also supports the simulation of dynamic intracellular stoichiometry should this be required. Within this setting, state variables are also optionally created for phytoplankton biomass N and P content (termed \\(IN\\) and \\(IP\\), respectively): \\[\\begin{eqnarray} \\frac{D}{Dt}IN_{a} = \\color{darkgray}{ \\mathbb{M} + \\mathcal{S} } \\quad &amp;+&amp; \\overbrace{ f_{upt}^{IN_{a}} - f_{rsp}^{IN_{a}} - f_{mor}^{IN_{a}} - f_{exc}^{IN_{a}} + f_{set}^{IN_{a}} + \\hat{f}_{res}^{IN_{a}} }^\\text{aed_phytoplankton} \\\\ \\tag{10.2} &amp;-&amp; \\color{brown}{ f_{grz}^{ZOO} - \\hat{f}_{grz}^{BIV} } \\\\ \\nonumber \\end{eqnarray}\\] and \\[\\begin{eqnarray} \\frac{D}{Dt}IP_{a} = \\color{darkgray}{ \\mathbb{M} + \\mathcal{S} } \\quad &amp;+&amp; \\overbrace{ f_{upt}^{IP_{a}} - f_{rsp}^{IP_{a}} - f_{mor}^{IP_{a}} - f_{exc}^{IP_{a}} + f_{set}^{IP_{a}} + \\hat{f}_{res}^{IP_{a}} }^\\text{aed_phytoplankton} \\\\ \\tag{10.3} &amp;-&amp; \\color{brown}{ f_{grz}^{ZOO} - \\hat{f}_{grz}^{BIV} } \\\\ \\nonumber \\end{eqnarray}\\] A detailed overview of the above functions for C, N and P for each of the various process rates is provided next. 10.3.1 Process Descriptions Photosynthesis &amp; Nutrient Uptake For each phytoplankton group, \\(a\\), the maximum potential growth rate at 20˚C is multiplied by the minimum value of expressions for limitation by light, phosphorus, nitrogen and silica (when configured). While there may be some interaction between limiting factors, a minimum expression is likely to provide a realistic representation of growth limitation (Rhee and Gotham, 1981). Therefore, photosynthesis is parameterized as the uptake of carbon, and depends on the temperature, light and nutrient dimensionless functions (adopted from Hipsey &amp; Hamilton, 2008; Li et al., 2013): \\[\\begin{equation} \\text{Phytoplankton Growth Equation} \\tag{10.4} \\end{equation}\\] \\[\\begin{align} {f_{gpp}^{PHY_{a}}} &amp;= \\: [PHY_{a}] \\times \\end{align}\\] \\[\\begin{align} \\underbrace{{R_{growth}^{PHY_{a}}}}_{\\text{Max growth rate at 20˚C}} \\times \\underbrace{(1-{k_{pr}^{PHY_{a}}})}_{\\text{Photorespiratory loss}} \\times \\underbrace{{\\Phi_{tem}^{PHY_{a}}}(T)}_{\\text{Temperature scaling}} \\times \\underbrace{{\\Phi_{str}^{PHY_{a}}}(T)}_{\\text{Metabolic stress}} \\times \\end{align}\\] \\[\\begin{align} &amp;{\\text{min}}\\begin{Bmatrix}\\underbrace{\\Phi_{light}^{PHY_{a}}(I)}_{\\text{Light limitation}},\\underbrace{\\Phi_{N}^{PHY_{a}}(NO_{3},NH_{4},PHY_{N_{a}})}_{\\text{N limitation}},\\underbrace{\\Phi_{P}^{PHY_{a}}(PO_{4},PHY_{P_{a}})}_{\\text{P limitation}},\\underbrace{\\Phi_{Si}^{PHY_{a}}(RSi)}_{\\text{Si limitation}}\\end{Bmatrix} \\times \\end{align}\\] Temperature limitation: Temperature is a key environmental driver that shapes the responses of different phytoplankton groups. To allow for reduced growth at non-optimal temperatures, a temperature function is used where the maximum productivity occurs at a temperature \\(T_{OPT}\\); above this productivity decreases to zero at the maximum allowable temperature, \\(T_{MAX}\\). Below the standard temperature, \\(T_{STD}\\) the productivity follows a simple Arrenhius scaling formulation. In order to fit a function with these restrictions the following conditions are assumed: at \\(T=T_{STD}\\),\\(\\ {\\ \\Phi}_{tem}\\left(T\\right)=1\\) and at \\(T=T_{OPT},\\ \\ \\frac{d\\Phi_{tem}\\left(T\\right)}{dT}=0\\), and at \\(T=T_{MAX}\\),\\(\\ \\Phi_{tem}\\left(T\\right)=0\\). This can be numerically solved using Newton’s iterative method and can be specific for each phytoplankton group. The temperature function is calculated according to (Griffin et al. 2001): \\[\\begin{equation} \\Phi_{tem}^{{PHY}_a}\\left(T\\right)=\\vartheta_a^{T-20}-\\vartheta_a^{k\\left[T-{c1}_a\\right]}+{c0}_a \\tag{10.5} \\end{equation}\\] where \\({c1}_a\\) and \\({c0}_a\\) are solved numerically given input values of: \\(T_a^{std}\\), \\(T_a^{opt}\\) and \\(T_a^{max}\\). Light limitation: The level of light limitation on phytoplankton growth can be modelled as photoinhibition or non-photoinhibition. In the absence of significant photoinhibition, Webb et al. (1974) suggested a relationship for the fractional limitation of the maximum potential rate of carbon fixation for the case where light saturation behavior was absent (Talling, 1957), and the equations can be analytically integrated with respect to depth (Hipsey and Hamilton, 2008). For the case of photoinhibition, the light saturation value of maximum production (\\(I_S\\)) is used and the net level effect can be averaged over the cell by integrating over depth. The aed_phytoplankton module contains several light functions, including those from a recent review by Baklouti et al. (2006). The user must select the sensitivity to light according to a photosynthesis-irradiance (P-I curve) formulation and each species must be set to be either non-photoinhibited or photoinhibited according to the options in Table 9. Figure 10.1: Light limitation of pytoplankton via various model approaches. Nutrient limitation: Limitation of the photosynthetic rate may be dampened according to nitrogen or phosphorus availability, and this is either approximated using a Monod expression of the static model is chosen, or based on the internal nutrient stoichiometry if the dynamic (Droop uptake) model is selected: For advanced users, an optional metabolic scaling factor can be included to reduce the photosynthetic capacity of the simulated organisms, for example due to metabolic stress due to undertaking N2 fixation: \\[\\begin{equation} \\Phi_{str}^{{PHY}_a}=\\underbrace{f_{NF}^{{PHY}_a}+\\left[{1-f}_{NF}^{{PHY}_a}\\right]\\Phi_N^{{PHY}_a}\\left({NO}_3,{NH}_4,{PHY_N}_a\\right)}_{N_{2}\\text{ fixation growth scaling}} \\tag{10.6} \\end{equation}\\] The above discussion relates to photosynthesis and carbon uptake by the phytoplankton community. In addition users must choose one of two options to model the P, N uptake dynamics for each algal group: i) a constant nutrient to carbon ratio, or ii) simulation of dynamic intracellular stores. For the first model a simple Michaelis-Menten equation is used to model nutrient limitation with a half-saturation constant for the effect of external nutrient concentrations on the growth rate. The internal phosphorus and nitrogen dynamics within the phytoplankton groups can be modelled using dynamic intracellular stores that are able to regulate growth based on the model of Droop (1974). This model allows for the phytoplankton to have dynamic nutrient uptake rates with variable internal nutrient concentrations bounded by user-defined minimum and maximum values (e.g., see Li et al., 2013). The uptake of nitrogen must be partitioned into uptake of NO3, and NH4. The distinction between uptake of NO3 and NH4 is calculated automatically via a preference factor: \\[\\begin{equation} {\\ p}_{NH4}^{{PHY}_a}=\\frac{{NO}_3\\ {NH}_4}{\\left({NH}_4+K_N^{{PHY}_a}\\right)\\left({NO}_3+K_N^{{PHY}_a}\\right)}\\frac{{NH}_4{\\ K}_N^{{PHY}_a}}{\\left({NH}_4+{NO}_3\\right)\\left({NO}_3+K_N^{{PHY}_a}\\right)} \\tag{10.7} \\end{equation}\\] \\[\\begin{equation} p_{NO3}^{{PHY}_a}=1-{\\ p}_{NH4}^{{PHY}_a} \\tag{10.8} \\end{equation}\\] For diatom groups, silica processes are simulated that include uptake of dissolved silica. The silica limitation function for diatoms is similar to the constant cases for nitrogen and phosphorus which assumes a fixed C:Si ratio. Respiration, Excretion &amp; Mortality Metabolic loss of nutrients from mortality and excretion is proportional to the internal nitrogen to chla ratio multiplied by the loss rate and the fraction of excretion and mortality that returns to the detrital pool. Loss terms for respiration, natural mortality and excretion are modelled with a single ‘respiration’ rate coefficient. This loss rate is then divided into the pure respiratory fraction and losses due to mortality and excretion. The constant \\(f_{DOM}\\) is the fraction of mortality and excretion to the dissolved organic pool with the remainder into the particulate organic pool. Nutrient losses through mortality and excretion for the internal nutrient model are similar to the simple model described above, except that dynamically calculated internal nutrient concentrations are used. \\[\\begin{align*} \\hat{R}&amp;=R_{resp}^{{PHY}_a}\\ \\ \\Phi_{sal}^{{PHY}_a}\\left(S\\right)\\ \\ \\left(\\vartheta_{resp}^{{PHY}_a}\\right)^{T-20} \\tag{10.9}\\\\ f_{resp}^{{PHY_C}_a}&amp;=k_{fres}^{{PHY}_a}\\ \\hat{R}\\ \\left[{PHY_C}_a\\right] \\tag{10.10}\\\\ f_{excr}^{{PHY_C}_a}&amp;=\\left(1-k_{fres}^{{PHY}_a}\\right)\\ k_{fdom}^{{PHY}_a}\\ \\hat{R}\\ \\ \\left[{PHY_C}_a\\right] \\tag{10.11}\\\\ f_{mort}^{{PHY_C}_a}&amp;=\\left(1-k_{fres}^{{PHY}_a}\\right)\\ \\left({1-k}_{fdom}^{{PHY}_a}\\right)\\ \\hat{R}\\ \\left[{PHY_C}_a\\right] \\tag{10.12}\\\\ f_{excr}^{{PHY_N}_a}&amp;=k_{fdom}^{{PHY}_a}\\ \\hat{R}\\ \\left[{PHY_N}_a\\right] \\tag{10.13}\\\\ f_{mort}^{{PHY_N}_a}&amp;=\\left(1-k_{fdom}^{{PHY}_a}\\right)\\ \\hat{R}\\ \\left[{PHY_N}_a\\right] \\tag{10.14}\\\\ f_{excr}^{{PHY_P}_a}&amp;=k_{fdom}^{{PHY}_a}\\ \\hat{R}\\ \\left[{PHY_P}_a\\right] \\tag{10.15}\\\\ f_{mort}^{{PHY_P}_a}&amp;=\\left(1-k_{fdom}^{{PHY}_a}\\right)\\ \\hat{R}\\ \\ \\left[{PHY_P}_a\\right] \\tag{10.16}\\\\ f_{excr}^{{PHY_{Si}}_a}&amp;=\\hat{R}\\ \\left[{PHY_{Si}}_a\\right] \\tag{10.17} \\end{align*}\\] The salinity effect on mortality is given by various quadratic formulations, depending on the groups sensitivity to salinity (Griffin et al 2001; Robson and Hamilton, 2004). An example of the use of various salinity limitation options is shown in Figure 3. 10.3.2 Optional Module Links Other modules can influence phytoplankton sources/sinks, as indicated in Eq (10.1) for \\(PHY\\). These include: aed_oxygen: \\(O_2\\) is influenced by the rate of photosynthesis and respiration. aed_carbon: \\(DIC\\) is influenced by the rate of photosynthesis and respiration. aed_phosphorus: \\(PO_4\\) is consumed during photosynthesis. aed_nitrogen: \\(NO_3\\) and \\(NH_4\\) are consumed during photosynthesis. aed_silica: \\(SiO2\\) is consumed during photosynthesis. aed_organic_matter: \\(DOM\\) and \\(POM\\) is contributed to by the rate of phytoplankton excretion and mortality. aed_zooplankton: zooplankton can optionally graze upon any phytoplankton groups. aed_bivalve: bivalves can optionally graze upon any phytoplankton groups. aed_noncohesive: optional link to simulate the phytoplankton resuspension. aed_seddiagenesis: benthic phytoplankton (MPB) can grow and influence oxygen, carbon and nutrient fluxes at the sediment-water interface. 10.3.3 Feedbacks to the Host Model The phytoplankton module can feedback conditions to the hydrodynamic model by modifying the light extinction coefficient. For each group simulated a specific attenuation coefficient, \\(K_e\\), is applied, and is specific for each group simulated. This total light extinction computed by the PHY model is: \\[\\begin{equation} K_{d}^{phy} = \\sum_{a}K_{e_{PHY_a}} PHY_a \\end{equation}\\] 10.3.4 Variable Summary The default variables created by this module, and the optionally required linked variables needed for full functionality of this module are summarised in Table 10.1. The diagnostic outputs able to be output are summarised in Table 10.2. State Variables Table 10.1: Phytoplankton - state variables AED name Symbol Description Unit Type Typical Range Comments aed_phytoplankton PHY_{group} \\[\\mathbf{PHY}\\] phytoplanton group water column concentration \\[\\small{mmol\\: C/m^3}\\] pelagic 0-1000 select group using index from aed_phyto_pars database PHY_{group}_IN \\[\\mathbf{PHY_N}\\] internal nitrogen concentration of phytoplakton group \\[\\small{mmol\\: N/m^3}\\] pelagic 0 - 200 activated when simINDynamics \\(\\gt 1\\) PHY_{group}_IP \\[\\mathbf{PHY_P}\\] internal phosphorus concentration of phytoplakton group \\[\\small{mmol\\: P/m^3}\\] pelagic 0-20 activated when simIPDynamics \\(\\gt 1\\) PHY_{group}_rho \\[\\mathbf{PHY_{\\rho}}\\] phytoplankton group mean cell density \\[\\small{kg\\: C/m^3}\\] pelagic 900-1200 activated for a group when settling=3 PHY_mpb \\[\\mathbf{MPB}\\] coarse particulate organic matter \\[\\small{mmol\\: C/m^2}\\] benthic 0-5000 activated when do_mpb \\(\\gt 0\\) Dependent variables CAR_dic \\[\\mathbf{DIC}\\] dissolved inorganic carbon concentration \\[\\small{mmol\\: C/m^3}\\] pelagic NA optionally linked NIT_amm \\[\\mathbf{NH_4}\\] dissolved ammonium concentration \\[\\small{mmol\\: N/m^3}\\] pelagic NA optionally linked PHS_frp \\[\\mathbf{PO_4}\\] dissolved phosphate concentration \\[\\small{mmol\\: P/m^3}\\] pelagic NA optionally linked OXY_oxy \\[\\mathbf{O_2}\\] dissolved oxygen concentration \\[\\small{mmol\\: O_2/m^3}\\] pelagic 0 - 500 optionally linked NIT_nit \\[\\mathbf{NO_3}\\] dissolved nitrate concentration \\[\\small{mmol\\: N/m^3}\\] pelagic NA optionally linked OGM_doc \\[\\mathbf{DOC}\\] dissolved organic carbon concentration \\[\\small{mmol\\: C/m^3}\\] pelagic 0 - 5000 optionally linked OGM_poc \\[\\mathbf{POC}\\] particulate organic carbon concentration \\[\\small{mmol\\: C/m^3}\\] pelagic NA optionally linked OGM_don \\[\\mathbf{DON}\\] dissolved organic nitrogen concentration \\[\\small{mmol\\: N/m^3}\\] pelagic NA optionally linked OGM_pon \\[\\mathbf{PON}\\] particulate organic nitrogen concentration \\[\\small{mmol\\: N/m^3}\\] pelagic NA optionally linked OGM_dop \\[\\mathbf{DOP}\\] dissolved organic phosphorus concentration \\[\\small{mmol\\: P/m^3}\\] pelagic NA optionally linked OGM_pop \\[\\mathbf{POP}\\] particulate organic phosphorus concentration \\[\\small{mmol\\: P/m^3}\\] pelagic NA optionally linked SIL_rsi \\[\\mathbf{RSi}\\] reactive silica concentration \\[\\small{mmol\\: Si/m^3}\\] pelagic NA optionally linked NCS_resus \\[\\mathbf{\\mathcal{F}}_{resus}\\] sediment resuspension rate \\[\\small{g/m^2/s}\\] benthic 0 - 10 required for PHY resuspension, set via resus_link Diagnostics Table 10.2: Phytoplankton - diagnostic variables AED name Symbol Description Unit Type Typical Range Comments diag_level = 0+ PHY_set \\[\\mathbf{f_{set}^{\\mathbb{PHY}}}\\] phytoplankton community sedimentation flux \\[\\small{mmol\\: C/m^3/d}\\] pelagic NA PHY_res \\[\\mathbf{\\hat{f}_{res}^{\\mathbb{PHY}}}\\] phytoplankton community resuspension flux \\[\\small{mmol\\: C/m^2/d}\\] pelagic NA PHY_gpp \\[\\mathbf{f_{gpp}^{\\mathbb{PHY}}}\\] gross phytoplankton community primary production rate \\[\\small{mmol\\: C/m^3/d}\\] pelagic NA PHY_ncp \\[\\mathbf{f_{gpp}^{\\mathbb{PHY}}} - \\mathbf{f_{rsp}^{\\mathbb{PHY}}}\\] net phytoplankton community production \\[\\small{mmol\\: C/m^3/d}\\] pelagic NA diag_level = 1+ PHY_upt_no3 \\[\\mathbf{f_{upt_{NO3}}^{\\mathbb{PHY}}}\\] phytoplankton community \\(NO_3\\) uptake rate \\[\\small{mmol\\: N/m^3/d}\\] pelagic NA PHY_upt_nh4 \\[\\mathbf{f_{upt_{NH4}}^{\\mathbb{PHY}}}\\] phytoplankton community \\(NH_4\\) uptake rate \\[\\small{mmol\\: N/m^3/d}\\] pelagic NA PHY_upt_n2 \\[\\mathbf{f_{upt_{N2}}^{\\mathbb{PHY}}}\\] phytoplankton community \\(N_2\\) uptake rate \\[\\small{mmol\\: N/m^3/d}\\] pelagic NA PHY_upt_po4 \\[\\mathbf{f_{upt_{PO4}}^{\\mathbb{PHY}}}\\] phytoplankton community \\(PO_4\\) uptake rate \\[\\small{mmol\\: P/m^3/d}\\] pelagic NA PHY_upt_dic \\[\\mathbf{f_{upt_{DIC}}^{\\mathbb{PHY}}}\\] phytoplankton community \\(CO_2\\) uptake rate \\[\\small{mmol\\: C/m^3/d}\\] pelagic NA PHY_tchla \\[\\mathbf{\\mathbb{TCHLA}}\\] total chlorophyll-a concentration \\[\\small{\\mu g \\, /L}\\] pelagic NA PHY_in \\[\\mathbf{\\mathbb{IN}}\\] total phytoplankton nitrogen concentration \\[\\small{mmol\\: N/m^3}\\] pelagic NA PHY_ip \\[\\mathbf{\\mathbb{IP}}\\] total phytoplankton phosphorus concentration \\[\\small{mmol\\: P/m^3}\\] pelagic NA PHY_mpb_ben \\[\\mathbf{MPB}\\] microphytobenthos concentration \\[\\small{mmol\\: C/m^2}\\] benthic 0 - 10000 activated when do_mpb &amp;gt;0 PHY_mpb_gpp \\[\\hat{f}_{gpp}^{MPB}\\] benthic phytoplankton primary production \\[\\small{mmol\\: C/m^2/d}\\] benthic NA activated when do_mpb &amp;gt;0 PHY_mpb_rsp \\[\\hat{f}_{rsp}^{MPB}\\] benthic phytoplankton net production \\[\\small{mmol\\: C/m^2/d}\\] benthic NA activated when do_mpb &amp;gt;0 PHY_mpb_swi \\[\\hat{f}_{swi}^{MPB}\\] microphytobenthos vertical exchange \\[\\small{mmol\\: C/m^2/d}\\] benthic NA activated when do_mpb &amp;gt;0 diag_level = 10+ PHY_{name}_NtoP \\[\\mathbf{\\chi_{N:P}^{PHY}}\\] phytoplankton internal N:P ratio for the \\(a^{th}\\) group, name \\[\\small{-}\\] pelagic NA PHY_{name}_vvel \\[\\mathbf{\\omega_{p}^{PHY_a}}\\] phytoplankton sedimentation velocity for the \\(a^{th}\\) group, name \\[\\small{m/d}\\] pelagic NA PHY_{name}_gpp_c \\[\\mathbf{f_{gpp}^{PHY_a}}\\] phytoplankton gross primary production for the \\(a^{th}\\) group, name \\[\\small{mmol\\: C/m^3/d}\\] pelagic NA PHY_{name}_rsp_c \\[\\mathbf{f_{rsp}^{PHY_a}}\\] phytoplankton respiration rate for the \\(a^{th}\\) group, name \\[\\small{mmol\\: C/m^3/d}\\] pelagic NA PHY_{name}_exc_c \\[\\mathbf{f_{exc}^{PHY_a}}\\] phytoplankton excretion rate for the \\(a^{th}\\) group, name \\[\\small{mmol\\: C/m^3/d}\\] pelagic NA PHY_{name}_mor_c \\[\\mathbf{f_{mor}^{PHY_a}}\\] phytoplankton mortality rate for the \\(a^{th}\\) group, name \\[\\small{mmol\\: C/m^3/d}\\] pelagic NA PHY_{name}_set_c \\[\\mathbf{f_{set}^{PHY_a}}\\] phytoplankton sedimentation rate for the \\(a^{th}\\) group, name \\[\\small{mmol\\: C/m^3/d}\\] pelagic NA PHY_{name}_gpp_n \\[\\mathbf{f_{gpp}^{IN_a}}\\] phytoplankton gross primary production for the \\(a^{th}\\) group, name \\[\\small{mmol\\: N/m^3}\\] pelagic NA PHY_{name}_rsp_n \\[\\mathbf{f_{rsp}^{IN_a}}\\] phytoplankton respiration rate for the \\(a^{th}\\) group, name \\[\\small{mmol\\: N/m^3}\\] pelagic NA PHY_{name}_exc_n \\[\\mathbf{f_{exc}^{IN_a}}\\] phytoplankton excretion rate for the \\(a^{th}\\) group, name \\[\\small{mmol\\: N/m^3}\\] pelagic NA PHY_{name}_mor_n \\[\\mathbf{f_{mor}^{IN_a}}\\] phytoplankton mortality rate for the \\(a^{th}\\) group, name \\[\\small{mmol\\: N/m^3}\\] pelagic NA PHY_{name}_set_n \\[\\mathbf{f_{set}^{IN_a}}\\] phytoplankton sedimentation rate for the \\(a^{th}\\) group, name \\[\\small{mmol\\: N/m^3}\\] pelagic NA PHY_{name}_gpp_p \\[\\mathbf{f_{gpp}^{IP_a}}\\] phytoplankton gross primary production for the \\(a^{th}\\) group, name \\[\\small{mmol\\: P/m^3/d}\\] pelagic NA PHY_{name}_rsp_p \\[\\mathbf{f_{rsp}^{IP_a}}\\] phytoplankton respiration rate for the \\(a^{th}\\) group, name \\[\\small{mmol\\: P/m^3/d}\\] pelagic NA PHY_{name}_exc_p \\[\\mathbf{f_{exc}^{IP_a}}\\] phytoplankton excretion rate for the \\(a^{th}\\) group, name \\[\\small{mmol\\: P/m^3/d}\\] pelagic NA PHY_{name}_mor_p \\[\\mathbf{f_{mor}^{IP_a}}\\] phytoplankton mortality rate for the \\(a^{th}\\) group, name \\[\\small{mmol\\: P/m^3/d}\\] pelagic NA PHY_{name}_set_p \\[\\mathbf{f_{set}^{IP_a}}\\] phytoplankton sedimentation rate for the \\(a^{th}\\) group, name \\[\\small{mmol\\: P/m^3/d}\\] pelagic NA PHY_{name}_fI \\[\\mathbf{\\Phi_{light}^{PHY_{a}}}\\] phytoplankton growth limitation function for the \\(a^{th}\\) group, name \\[\\small{-}\\] pelagic 0 - 1 PHY_{name}_fNit \\[\\mathbf{\\Phi_{N}^{PHY_{a}}}\\] phytoplankton growth limitation function for the \\(a^{th}\\) group, name \\[\\small{-}\\] pelagic 0 - 1 PHY_{name}_fPho \\[\\mathbf{\\Phi_{P}^{PHY_{a}}}\\] phytoplankton growth limitation function for the \\(a^{th}\\) group, name \\[\\small{-}\\] pelagic 0 - 1 PHY_{name}_fSil \\[\\mathbf{\\Phi_{Si}^{PHY_{a}}}\\] phytoplankton growth limitation function for the \\(a^{th}\\) group, name \\[\\small{-}\\] pelagic 0 - 1 PHY_{name}_fT \\[\\mathbf{\\Phi_{tem}^{PHY_{a}}}\\] phytoplankton growth limitation function for the \\(a^{th}\\) group, name \\[\\small{-}\\] pelagic 0 - 1.5 PHY_{name}_fSal \\[\\mathbf{\\Phi_{sal}^{PHY_{a}}}\\] phytoplankton growth limitation function for the \\(a^{th}\\) group, name \\[\\small{-}\\] pelagic 0 - 5 PHY_tphy \\[\\mathbf{TPHY}\\] total phytoplankton community, \\(\\mathbb{PHY}\\) concentration \\[\\small{mmol\\: C/m^3/d}\\] pelagic NA PHY_ppr \\[\\mathbf{f_{gpp}^{\\mathbb{PHY}}} / \\mathbf{f_{rsp}^{\\mathbb{PHY}}}\\] gross phytoplankton \\(P:R\\) ratio \\[\\small{-}\\] pelagic NA PHY_npr \\[\\mathbf{f_{ncp}^{\\mathbb{PHY}}} / \\mathbf{f_{rsp}^{\\mathbb{PHY}}}\\] net phytoplankton P:R ratio \\[\\small{-}\\] pelagic NA PHY_par \\[\\mathbf{I_{PAR}}\\] photosynthetically active radiation \\[\\small{W/m^2}\\] pelagic 0-1200 10.3.5 Parameter and Option Summary The module requires users to set both module level confiuration options and parameters, and group-specific parameters. The group-specific parameters and settings are read in through the aed_phyto_pars, summarised in Table 10.3. Table 10.3: Phytoplankton group-specific parameters and configuration options AED name Symbol Description Unit Type Typical Range Comments General p_name \\[a\\] name of phytoplankton group \\[\\small{-}\\] string user specified name of chosen phytoplankton group, \\(a\\) p_initial \\[PHY |_{t=0}\\] initial concentration of phytoplankton \\[\\small{mmol\\: C/m^3}\\] float 0-1000 can be overwritten by initial condition files p0 \\[PHY_0\\] minimum concentration of phytoplankton \\[\\small{mmol\\: C/m^3}\\] float 1-20 Xcc \\[\\chi_{C:chla}^{PHY}\\] carbon to chlorophyll ratio \\[\\small{mg\\: C/mg\\: chla}\\] float 10 - 1000 Growth R_growth \\[R_{growth}^{PHY}\\] phytoplankton group maximum growth rate at \\(20^{\\circ}C\\) \\[\\small{/d}\\] float 0.1 - 5.0 fT_Method \\[\\Theta_{tem}^{phy}\\] specifies temperature limitation function of growth \\[\\small{-}\\] integer 0-1 0 = no temperature limitation 1= CAEDYM style theta_growth \\[\\theta_{growth}^{phy}\\] Arrenhius temperature scaling for growth function \\[\\small{-}\\] float 1 - 1.2 T_std \\[T_{std}\\] standard temperature \\[\\small{^{\\circ}C}\\] float 20 T_opt \\[T_{opt}\\] optimum temperature \\[\\small{^{\\circ}C}\\] float NA T_max \\[T_{max}\\] maximum temperature \\[\\small{^{\\circ}C}\\] float NA Light lightModel \\[\\Theta_{lgt}^{phy}\\] switch to assign the type of light response function \\[\\small{-}\\] integer 0-1 I_K \\[I_K\\] half saturation constant for light limitation of growth \\[\\small{W/m^2}\\] float NA used if \\(\\Theta_{lgt}^{phy}\\) is 0 I_S \\[I_S\\] saturating light intensity for optimum photosynthesis \\[\\small{W/m^2}\\] float NA used if \\(\\Theta_{lgt}^{phy}\\) is 1 KePHY \\[K_e\\] specific attenuation coefficient \\[\\small{/m/(mmol\\:C/m^3)}\\] float NA Respiration f_pr \\[f_{pr}\\] fraction of primary production lost to exudation \\[\\small{-}\\] float NA R_resp \\[R_{resp}^{PHY}\\] phytoplankton respiration/metabolic loss rate at \\(20^{\\circ}C\\) \\[\\small{/d}\\] float 0.01 - 0.3 theta_resp \\[\\theta_{resp}^{phy}\\] Arrhenius temperature scaling factor for respiration \\[\\small{-}\\] float 1 - 1.2 k_fres \\[k_{fres}\\] fraction of metabolic loss that is true respiration \\[\\small{-}\\] float 0 - 1 k_fdom \\[k_{fdom}\\] fraction of metabolic loss that is released as DOM \\[\\small{-}\\] float 0 - 1 Salinity salTol \\[\\Theta_{sal}^{phy}\\] type of salinity limitation function \\[\\small{-}\\] integer 0, 1, 2, 3, 4 S_bep \\[S_{bep}\\] salinity limitation value at maximum salinity (\\(S_{maxsp}\\)) \\[\\small{-}\\] float NA S_maxsp \\[S_{maxsp}\\] maximum salinity where growth is possible \\[\\small{g/kg}\\] float NA S_opt \\[S_{opt}\\] optimal salinity for growth \\[\\small{g/kg}\\] float NA Nitrogen simDINUptake \\[\\Theta_{din}^{phy}\\] switch for the selected group to simulate \\(DIN\\) uptake \\[\\small{-}\\] integer 0, 1 simDONUptake \\[\\Theta_{don}^{phy}\\] switch for the selected group to simulate \\(DON\\) uptake \\[\\small{-}\\] integer 0 simNFixation \\[\\Theta_{n2}^{phy}\\] switch for the selected group to simulate \\(N_2\\) fixation \\[\\small{-}\\] integer 0, 1 simINDynamics \\[\\Theta_{in}^{phy}\\] switch for the selected group to simulate dynamic intracellular \\(N\\) store \\[\\small{-}\\] integer 0, 1, 2 N_o \\[N_o\\] external \\(DIN\\) concentration below which uptake is 0 \\[\\small{mmol\\: N/m^3}\\] float NA K_N \\[K_N\\] half-saturation concentration of nitrogen \\[\\small{mmol\\: N/m^3}\\] float NA X_ncon \\[\\chi_{ncon}^{PHY}\\] constant internal nitrogen concentration \\[\\small{mmol\\: N/m^3}\\] float NA used if simINDynamics = 0 or 1 X_nmin \\[\\chi_{nmin}^{PHY}\\] minimum internal nitrogen concentration \\[\\small{mmol\\: N/m^3}\\] float NA used if simINDynamics = 2 X_nmax \\[\\chi_{nmax}^{PHY}\\] maximum internal nitrogen concentration \\[\\small{mmol\\: N/m^3}\\] float NA used if simINDynamics = 2 R_nuptake \\[R_{nuptake}^{PHY}\\] maximum nitrogen uptake rate \\[\\small{mmol\\: N/m^3/d\\: /(mmol\\: C/m^3)}\\] float NA used if simINDynamics = 2 k_nfix \\[k_{nfix}\\] growth rate reduction under maximum nitrogen fixation \\[\\small{-}\\] float NA used if simINDynamics \\(\\gt 0\\) R_nfix \\[R_{nfix}^{PHY}\\] nitrogen fixation rate \\[\\small{/d}\\] float NA used if simINDynamics \\(\\gt 0\\) Phosphorus simDIPUptake \\[\\Theta_{dip}^{phy}\\] switch for the selected group to simulate \\(DIP\\) uptake \\[\\small{-}\\] integer NA simIPDynamics \\[\\Theta_{ip}^{phy}\\] switch for the selected group to simulate dynamic intracellular \\(P\\) store \\[\\small{-}\\] integer NA P_0 \\[P_o\\] external \\(DIP\\) concentration below which uptake is 0 \\[\\small{mmol\\: P/m^3}\\] float NA K_P \\[K_P\\] half-saturation concentration of phosphorus \\[\\small{mmol\\: P/m^3}\\] float NA X_pcon \\[\\chi_{pcon}^{PHY}\\] constant internal phosphorus concentration \\[\\small{mmol\\: P/m^3}\\] float NA X_pmin \\[\\chi_{pmin}^{PHY}\\] minimum internal phosphorus concentration \\[\\small{mmol\\: P/m^3}\\] float NA X_pmax \\[\\chi_{pmax}^{PHY}\\] maximum internal phosphorus concentration \\[\\small{mmol\\: P/m^3}\\] float NA R_puptake \\[R_{puptake}^{PHY}\\] maximum phosphorus uptake rate \\[\\small{mmol\\: P/m^3/d\\: /(mmol\\: C/m^3)}\\] float NA Silica simSiUptake \\[\\Theta_{si}^{phy}\\] switch for the selected group to simulate \\(Si\\) uptake \\[\\small{-}\\] integer NA Si_0 \\[Si_o\\] external \\(SiO2\\) concentration below which uptake is 0 \\[\\small{mmol\\: Si/m^3}\\] float NA K_Si \\[K_{Si}\\] half-saturation concentration of silica uptake \\[\\small{mmol\\: Si/m^3}\\] float NA X_sicon \\[\\chi_{sicon}^{PHY}\\] constant internal silica concentration \\[\\small{mmol\\: Si/m^3}\\] float NA Settling w_p \\[\\omega_{phy}\\] sedimentation rate \\[\\small{m/d}\\] float -1 - 1 used if \\(\\Theta_{set}^{phy}\\) is 1 or 2 d_phy \\[d_{phy}\\] phytoplankton group mean cell diameter \\[\\small{m}\\] float NA used if \\(\\Theta_{set}^{phy}\\) is 3 c1 \\[c_1\\] rate coefficient for density increase \\[\\small{kg/m^3/s}\\] float NA used if \\(\\Theta_{set}^{phy}\\) is 3 c3 \\[c_3\\] minimum rate of density decrease with time \\[\\small{kg/m^3/s}\\] float NA used if \\(\\Theta_{set}^{phy}\\) is 3 f1 \\[f_1\\] fraction of maximum intracellular nitrogen where motility tends down towards nutrients \\[\\small{-}\\] float NA used if \\(\\Theta_{set}^{phy}\\) is 4 f2 \\[f_2\\] fraction of maximum intracellular nitrogen where motility tends up towards light \\[\\small{-}\\] float NA used if \\(\\Theta_{set}^{phy}\\) is 4 The module level parameters and settings are read in as normal through the aed.nml, summarised in Table 10.4. Table 10.4: Phytoplankton group-specific parameters and configuration options AED name Symbol Description Unit Type Typical Range Comments Groups num_phy \\[N_{a}^{phy}\\] number of phytoplankton groups/species \\[\\small{-}\\] integer 1 - 64 the_phy \\[\\mathbb{PHY}\\] set of chosen group ID’s within the database file, where \\(a \\in \\mathbb{PHY}\\) \\[\\small{-}\\] integer 1, 2, 3, … settling \\[\\Theta_{set}^{phy}\\] option to set the method of settling for \\(PHY\\) group \\(a\\) \\[\\small{-}\\] integer 0 - 4 Microphytobenthos do_mpb \\[\\Theta_{mpb}^{phy}\\] option to include \\(MPB\\) as a simulated benthic variable \\[\\small{-}\\] float 0 , 1, 2 R_mpbg \\[R_{mpb-g}\\] maximum growth rate of \\(MPB\\) \\[\\small{/d}\\] float 0 - 3 R_mpbr \\[R_{mpb-r}\\] dark respiration rate of \\(MPB\\) \\[\\small{/d}\\] float 0 - 1 I_Kmpb \\[I_{K_{mpb}}\\] half saturation constant for light limitation of growth \\[\\small{W/m^2}\\] float 0 - 100 mpb_max \\[MPB_{max}\\] maximum biomass density of \\(MPB\\) \\[\\small{mmol\\: C/m^2}\\] float 10000 resuspension \\[\\Theta_{resus}^{phy}\\] fraction to set the amount of resuspension for \\(PHY\\) group \\(a\\) \\[\\small{-}\\] float 0 , 1 n_zones \\[N_{sz}^{mpb}\\] number of benthic zones where \\(MPB\\) is active \\[\\small{-}\\] integer 0 - 64 active_zones \\[\\mathbb{Z}_{sz}^{mpb}\\] set of benthic zones with \\(MPB\\) active, where \\(sz \\in \\mathbb{Z}\\) \\[\\small{-}\\] integer 1, 2, 3, … resus_link \\[-\\] variable simulating resuspension rate to link to \\[\\small{-}\\] string NCS_resus Links p_excretion_target_variable \\[DOP\\] state variable to add DOP excretion \\[\\small{mmol\\: P/m^3}\\] string OGM_dop n_excretion_target_variable \\[DON\\] state variable to add DON excretion \\[\\small{mmol\\: N/m^3}\\] string OGM_don c_excretion_target_variable \\[DOC\\] state variable to add DOC excretion \\[\\small{mmol\\: C/m^3}\\] string OGM_doc si_excretion_target_variable \\[Si\\] state variable to add Si excretion \\[\\small{mmol\\: Si/m^3}\\] string SIL_rsi p_mortality_target_variable \\[POP\\] state variable to add POP mortality \\[\\small{mmol\\: P/m^3}\\] string OGM_pop n_mortality_target_variable \\[PON\\] state variable to add PON mortality \\[\\small{mmol\\: N/m^3}\\] string OGM_pon c_mortality_target_variable \\[POC\\] state variable to add POC mortality \\[\\small{mmol\\: C/m^3}\\] string OGM_poc si_mortality_target_variable \\[Si\\] state variable to add Si mortality \\[\\small{mmol\\: Si/m^3}\\] string SIL_rsi p1_uptake_target_variable \\[FRP\\] state variable to provide FRP for growth \\[\\small{mmol\\: P/m^3}\\] string PHS_frp n1_uptake_target_variable \\[NO_3\\] state variable to provide \\(NO_3\\) for growth \\[\\small{mmol\\: N/m^3}\\] string NIT_nit n2_uptake_target_variable \\[NH_4\\] state variable to provide \\(NH_4\\) for growth \\[\\small{mmol\\: N/m^3}\\] string NIT_amm si_uptake_target_variable \\[Si\\] state variable to provide \\(Si\\) for growth \\[\\small{mmol\\: Si/m^3}\\] string SIL_rsi do_uptake_target_variable \\[DO\\] state variable to increment \\(O_2\\) during growth \\[\\small{mmol\\: O_2/m^3}\\] string OXY_oxy c_uptake_target_variable \\[DIC\\] state variable to provide \\(DIC\\) during growth \\[\\small{mmol\\: C/m^3}\\] string CAR_dic Advanced dbase \\[-\\] phytoplankton parameter database file \\[\\small{-}\\] string aed_phyto_pars.csv aed_dbase link min_rho \\[\\rho_{min}^{phy}\\] minimum cellular density \\[\\small{kg/m^3}\\] float 900 used if \\(\\Theta_{set}^{phy}\\) is 3 max_rho \\[\\rho_{max}^{phy}\\] maximum cellular density \\[\\small{kg/m^3}\\] float 1200 used if \\(\\Theta_{set}^{phy}\\) is 3 diag_level \\[-\\] extent of diagnostic output \\[\\small{-}\\] integer 0 - 10 see Table X.X 10.4 Setup &amp; Configuration 10.4.1 Setup Example An example aed.nml configuration block for the aed_phytoplankton module that includes a single simulated group plus microphytobenthos (MPB) and resuspension effects, and doesn’t consider Si limitation, is shown below: &amp;aed_phytoplankton !-- Configure phytoplankton groups to simulate num_phytos = 1 the_phytos = 1 settling = 1 !-- Benthic phytoplankton group (microphytobenthos) do_mpb = 1 R_mpbg = 0.5 R_mpbr = 0.05 I_Kmpb = 100. mpb_max = 2000. resuspension = 0.45 n_zones = 4 active_zones = 2,3,4,5 resus_link = &#39;NCS_resus&#39; !-- Set link variables to other modules p_excretion_target_variable =&#39;OGM_dop&#39; n_excretion_target_variable =&#39;OGM_don&#39; c_excretion_target_variable =&#39;OGM_doc&#39; si_excretion_target_variable =&#39;&#39; p_mortality_target_variable =&#39;OGM_pop&#39; n_mortality_target_variable =&#39;OGM_pon&#39; c_mortality_target_variable =&#39;OGM_poc&#39; si_mortality_target_variable =&#39;&#39; p1_uptake_target_variable =&#39;PHS_frp&#39; n1_uptake_target_variable =&#39;NIT_nit&#39; n2_uptake_target_variable =&#39;NIT_amm&#39; si_uptake_target_variable =&#39;&#39; do_uptake_target_variable =&#39;OXY_oxy&#39; c_uptake_target_variable =&#39;&#39; !-- General options dbase = &#39;../External/AED/aed_phyto_pars.nml&#39; diag_level = 1 / Note that when simulating benthic phytoplankton, the bottom zones in the model to be active must be selected. Another example aed.nml block for the phytoplankton module that includes no benthic (bottom) phytoplankton, and three different groups is shown below: &amp;aed_phytoplankton !-- Configure phytoplankton groups to simulate num_phytos = 3 the_phytos = 1,2,3 ! cyanos,greens,diatoms settling = 3,1,1 ! approach to settling/migration !-- Benthic phytoplankton group (microphytobenthos) do_mpb = 0 !-- Set link variables to other modules p_excretion_target_variable =&#39;OGM_dop&#39; n_excretion_target_variable =&#39;OGM_don&#39; c_excretion_target_variable =&#39;OGM_doc&#39; si_excretion_target_variable=&#39;&#39; p_mortality_target_variable =&#39;OGM_pop&#39; n_mortality_target_variable =&#39;OGM_pon&#39; c_mortality_target_variable =&#39;OGM_poc&#39; si_mortality_target_variable=&#39;&#39; p1_uptake_target_variable =&#39;PHS_frp&#39; n1_uptake_target_variable =&#39;NIT_amm&#39; n2_uptake_target_variable =&#39;NIT_nit&#39; si_uptake_target_variable =&#39;SIL_rsi&#39; do_uptake_target_variable =&#39;OXY_oxy&#39; c_uptake_target_variable =&#39;CAR_dic&#39; !-- General options dbase = &#39;aed/aed_phyto_pars.csv&#39; diag_level = 10 min_rho = 900.0 max_rho = 1200.0 / The numbers reported here are for example purposes and should be reviewed before use based on the users chosen site context. In addition to adding the above code block to aed.nml, users must also supply a valid AED phytoplankton parameter database file (aed_phyto_pars). The database file can be supplied in either NML or CSV format, though after AED 2.0 it is reccomended users use the CSV option. Users can create a standard file in the correct format from the online AED parameter database by selecting from the available groups of interest, downloading via the “Make CSV” button, and then tailoring to the simulation being undertaken as required. Carefully check the parameter units and values! 10.5 Case Studies &amp; Examples 10.5.1 Case Study : Falling Creek Reservoir Falling Creek Reservoir (FCR) is a water supply reservoir in Virginia. Figure X: Example outputs from the FCR GLM-AED model, showing a) the total chl-a concentration depth profiles, and b) the change in biomass of the indivdual simulated groups. An example GLM-AED simulation for FCR is available in the GLM example simulations provided on GitHub. "],["aqueous-geochemistry.html", "11 Aqueous Geochemistry 11.1 Contributors 11.2 Overview 11.3 Model Description 11.4 Setup &amp; Configuration 11.5 Case Studies &amp; Examples", " 11 Aqueous Geochemistry 11.1 Contributors 11.2 Overview The module allows the user to choose from a wide array of geochemical ‘components’ (e.g., anions, cations, metals) to simulate, and then solves for the equilibrium speciation of the solution. The module includes an advanced solver, and provides pH and other solution properties, and optional mineral or gas phases. Relevant kinetic transformations (e.g. redox reactions) between simulated components are also included. Metals may be simulated as part of the model and can also be active within the biological cycles. The module is flexible and simple in its configuration and can be used in the water column and in the sediment if the dynamic sediment diagenesis model (see Section ?) is also being simulated. The module dynamically links with the other biogeochemical processes within AED2, such that any biological activity (e.g. algal nutrient uptake and photosynthesis, microbial respiration, and nitrification) will dynamically affect the aqueous speciation and pH. Details of the equilibrium and non-equilibrium processes included are described in the adjacent tab. Figure 11.1: Conceptual diagram highlighting key variables and interactions within the model 11.3 Model Description 11.3.1 Process Descriptions 11.3.1.1 General Approach The aqueous geochemistry sub-model was developed to simulate aqueous speciation and solubility equilibrium control of pure-phase minerals using an approach similar to PHREEQC and as reported previously in Salmon et al (in review). Each dissolved component, \\(X\\), and mineral phase, \\(PP\\), is a state variable within the model and is mass-conserved. In addition to external loading from inflows, the model includes a configurable dissolved sediment flux term for the dissolved species and a sedimentation term for the particulates. If we remove the hydrodynamic terms (e.g., inflows/outflows, mixing) for brevity, the differential equation is defined for the dissolved state variables as: Aqueous Speciation &amp; Solubility Equilibrium Control The aqueous geochemistry model is conceptually similar to other equilbrium codes (e.g. … ). The model defines geochemical reactions in terms of components. An aqueous species \\(C\\) is created as a product of reaction between components \\(A\\) and \\(B\\), as shown in the following example: \\[\\begin{equation} aA + bB \\Longleftrightarrow cC \\tag{11.1} \\end{equation}\\] where \\(a\\), \\(b\\) and \\(c\\) are the stoichiometric coefficients. The reaction shown above is able to proceed back and forward depending on the prevailing conditions of the aqueous solution. The equilibrium of the reaction is a function of the standard free energy, and from this the familiar mass-action expression is defined: \\[\\begin{equation} K_C=\\frac{[C]^c}{[A]^a[B]^b} \\tag{11.2} \\end{equation}\\] where \\(K_{C}\\) is denoted the equilibrium constant. In any natural aquatic system, numerous components are present and there are therefore hundreds of reactions similar to Eq. above that will be close to equilibrium. The many reactions form a complex and interdependent set of simultaneous expressions which can be solved numerically, discussed next. For each component, \\(X_{x}\\), (generally components are equivalent to elements, except for the case of elements with multiple redox states, in which case each redox state is assigned as a unique component), a set of \\(M\\) components is defined, \\(X \\in \\{X_1, X_2, ..., X_M\\}\\). Combination of all the components into an aqueous solution results in numerous reactions taking place of the form of Eq. .., and we define the resultant set of aqueous species that result as: \\(C \\in \\{C_1, C_2 ..., C_N\\}\\), where \\(N\\) is the total number produced. The `activity’ of an aqueous species is not equivalent to its molality due to the nonideality of aqueous solutions; a species activity, is related to its molality according to the activity coefficient, : \\[\\begin{equation} [C_i] = \\tilde{C_i} = \\gamma_i C_i \\tag{11.3} \\end{equation}\\] Numerous methods exist for estimating a species activity coefficient. The first is known as the Davies equation: \\[\\begin{equation} \\log \\gamma_i = -c_1z_i^2\\left(\\frac{\\sqrt{\\mu}}{1+\\sqrt{\\mu}}-0.3\\mu \\right) \\tag{11.4} \\end{equation}\\] and the other one used in the AED2 solution is the Debye-Huckel equation: \\[\\begin{equation} \\log \\gamma_i = -\\frac{c_1z_i^2\\sqrt{\\mu}}{1+c_2c_3\\sqrt{\\mu}} +c_4\\mu \\tag{11.5} \\end{equation}\\] where \\(z_{i}\\) is the ionic charge of the \\(i^{\\text{th}}\\) species \\(c_{1-4}\\) are constants that depend upon properties such as the temperature of the solution. The activity of a species is dependent on the ionic strength, \\(\\mu\\), a solution property defined as: \\[\\begin{equation} \\mu = \\frac{1}{2}\\sum_i^N{z_i^2\\frac{C_i}{W_{aq}}} \\tag{11.6} \\end{equation}\\] where \\(W_{aq}\\) is mass of water in the aqueous phase. To numerically solve the system of equations, the total number of moles of any component is estimated by adding up the amount contained in each species: \\[\\begin{equation} T_j = \\sum_{i=1}^N{a_{ij}C_i} \\:\\:\\:\\:\\:\\:\\:\\:\\:\\:\\: j=1..M \\tag{11.7} \\end{equation}\\] where \\())aix\\) is the stoichiometric coefficient of component \\(x\\) in species \\(i\\). The activity of each species is calculated using the mass-action equations, which are defined more generically as: \\[\\begin{equation} \\tilde{C}_i = K_i \\prod_{j=1}^M{\\tilde{X}_j^{a_{ij}}} \\:\\:\\:\\:\\:\\:\\: j=1..N \\tag{11.8} \\end{equation}\\] Taking the logarithm of both sides of Equation above leaves: \\[\\begin{equation} log \\tilde{C}_i = \\log K_i + \\sum_{j=1}^M{a_{ij}\\log \\tilde{X}_j} \\:\\:\\:\\:\\: j=1..N \\tag{11.9} \\end{equation}\\] which can be defined in matrix notation as: \\[\\begin{equation} \\tilde{C}^* = K^*+A\\tilde{X}^* \\tag{11.10} \\end{equation}\\] where \\(*\\) denotes a vector quantity. The solution is achieved by iterating using a Newton-Rhapson scheme, which aims to minimize the residual, \\(R\\), between the estimated component molalities (\\(T\\)) and the known values: \\[\\begin{equation} R_x = \\sum_{i=1}^{N}{a_{ix}C_i-T_x}\\:\\:\\:\\:\\: i=1..N \\tag{11.11} \\end{equation}\\] In matrix notation: \\[\\begin{equation} R=A^{-1}C-T \\tag{11.12} \\end{equation}\\] The Newton-Rhapson technique iterates towards a solution by employing a derivative (termed Jacobian) matrix, \\(J\\): \\[\\begin{equation} R=J \\Delta X \\tag{11.13} \\end{equation}\\] which is solved for \\(\\Delta X\\) at each iteration. The new estimates for \\(X\\) are then updated according to: \\[\\begin{equation} X^{n+1} = X^n + \\Delta X \\tag{11.14} \\end{equation}\\] and the whole scheme proceeds until the solution has sufficiently converged, \\(R&lt;\\epsilon\\), where \\(\\epsilon\\) is a pre-defined convergence criterion (\\(10^{-10}\\) in this code). The Jacobian matrix is defined as: \\[\\begin{equation} J = \\frac{dR_x}{dX_k} \\tag{11.15} \\end{equation}\\] which can be expanded to: \\[\\begin{equation} \\frac{dR_x}{dX_k} = \\sum_{i=1}^{N}{a_{ik}}\\frac{dC_i}{dX_k}-\\frac{dT_x}{dX_k} \\tag{11.16} \\end{equation}\\] using Eq. …. The derivatives are then defined according to: \\[\\begin{equation} \\frac{dC_i}{dX_k} = a_{ik}\\frac{C_i}{X_k} \\tag{11.17} \\end{equation}\\] and \\[\\begin{equation} \\frac{dT_x}{dX_k} = 0 \\tag{11.18} \\end{equation}\\] which are the substituted into Eq. .. to leave \\[\\begin{equation} \\frac{dR_x}{dX_k} = \\sum_{i=1}^{N}{a_{ik}\\:a_{ik}}\\frac{C_i}{X_k}. \\tag{11.19} \\end{equation}\\] Therefore for a given total number of moles of each element in each computational cell, using this scheme the model solves for the activity of each aqueous species, ionic strength and \\(pH\\). The charge balance variable (denoted \\(ubalchg\\)) is also subject to advection and mixing as all other state variables, and importantly, an estimate of \\(ubalchg\\) must be provided at any inflow boundaries. If this is not done, then the charge balance will be compromised, and will manifest in a poor \\(pH\\) prediction. The Newton-Rhapson scheme described above is implemented by making use of the Simplex numerical solver (Barrodale and Roberts, 1980; Parkhurst and Appelo, 1999). This is because AED2 also allows for simulation of pure phase (i.e. non-aqueous phase) minerals. When minerals can precipitate and dissolve, properties such as the ionic strength (\\(MU\\)), activity of water (\\(XH_{2}O\\)) and charge balance (\\(CV\\)) may be non-conservative in the aqueous solution. These are therefore included as unknowns in the simplex solver, which uses the Newton-Rhapson technique to solve the following matrix: \\[\\begin{equation} \\begin{array}{lll} \\begin{pmatrix} R_{PP}\\\\ R_{X_{1}}\\\\ \\vdots\\\\ R_{X_{N}}\\\\ R_{MU}\\\\ R_{H_2O}\\\\ R_{CB}\\\\ R_{W_{aq}}\\\\ X_{PP}\\\\ \\end{pmatrix} =&amp; \\begin{pmatrix} \\pd{R_{PP}}{\\text{ln}(\\tilde{X}_1)} &amp; \\dots &amp; \\pd{R_{PP}}{\\text{ln}(\\tilde{X}_N)} &amp; \\pd{R_{PP}}{d\\mu} &amp; &amp; \\\\ \\pd{R_{X_1}}{\\text{ln}(\\tilde{X}_1)} &amp; &amp; &amp; &amp; &amp; \\\\ &amp; &amp; &amp; &amp; &amp; \\\\ \\vdots &amp; &amp; &amp; &amp; &amp; \\\\ &amp; &amp; &amp; &amp; &amp; \\\\ &amp; &amp; &amp; &amp; &amp; \\pd{R_{Waq}}{X_{PP}} \\\\ &amp; &amp; &amp; &amp; &amp; 1 \\\\ \\end{pmatrix} &amp; \\begin{pmatrix} d\\text{ln}(\\tilde{X}_1)\\\\ R_{X_{1}}\\\\ \\vdots\\\\ d\\text{ln}(\\tilde{X}_N)\\\\ d\\mu \\\\ d\\text{ln}(\\tilde{X}_{H_2O})\\\\ d\\text{ln}(\\tilde{X}_{H^+})\\\\ d\\text{ln}(W_{aq})\\\\ dX_{PP}\\\\ \\end{pmatrix} \\end{array} \\tag{11.20} \\end{equation}\\] The operation of the simplex solver is complicated and the reader is referred to Barrodale and Roberts (1980) for a detailed account. The aqueous species used in the simulations is based on those from Nordstrom et al. (1990), termed the WATEQ4F database. Redox Transformations Other Geochemistry Sources/sinks (optional) 11.3.2 Variable Summary State Vairables Table 11.1: State variables Variable Name Description Units Variable Type Core/Optional GEO_{var} — \\(mmol m^{-3}\\) pelagic configurable 11.3.3 Parameter Summary Table 11.2: Parameters and configuration Parameter Name Description Units Parameter Type Default Typical Range Comment geochem_file Link to geochem database — string — — — num_components number f dissolved components to be concidered — integer — — — dis_components list of component names — string — — — component_link Active variables to be used as a componenet — string — — — Fsed_gch sediment flux rate of dissolved components \\(mmol\\,m^{-2}\\,day^{-1}\\) array — — — num_minerals number of particulate mineral phases to be included — integer — — — the_minerals list of mineral names — string — — — mineral_link name of any active variables to be used as a mineral — string — — — w_gch sedimentation rate of chosen particulate phases \\(m\\,day^{-1}\\) array — — — Riron_red — — float — — — Kiron_red — — float — — — theta_iron_red — — float — — — Riron_aox — — float — — — Riron_box — — float — — — theta_iron_ox — — float — — — simEq — — boolean — — — dis_initial — — array — — — speciesOutput — — string — — — min_initial — — array — — — 11.3.4 Optional Module Links 11.3.5 Feedbacks to the Host Model 11.4 Setup &amp; Configuration 11.4.1 Setup Example An example nml block for the geochemistry module is shown below: &amp;aed2_geochemistry geochem_file = &#39;../External/AED2/aed2_geochem_pars.dat&#39; !-- dissolved components num_components = 10 dis_components = &#39;DIC&#39;, &#39;FeII&#39;, &#39;FeIII&#39; ,&#39;Al&#39;, &#39;Cl&#39;, &#39;SO4&#39;, &#39;Na&#39;, &#39;K&#39;, &#39;Mg&#39;, &#39;Ca&#39;,&#39;H2S&#39; component_link = &#39;CAR_dic&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39;,&#39;&#39; Fsed_gch = 0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0.,0. !-- mineral components num_minerals = 3 the_minerals = &#39;Gibbsite&#39;,&#39;FeOH3A&#39;,&#39;Calcite&#39; mineral_link = &#39;&#39;, &#39;&#39;, &#39;&#39; w_gch = 0.0, -1.0, 0.0 !-- iron redox Riron_red = 0.0 Kiron_red = 100. theta_iron_red = 1.07 Riron_aox = 0.0 !1 = 100% per day decay Riron_box = 0.5 theta_iron_ox = 1.06 !-- advanced simEq = .true. ! dis_initial = 0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1,0.1 ! speciesOutput = &#39;CO2&#39; ! min_initial = 0.01,0.01,0.01,0.01 / 11.5 Case Studies &amp; Examples 11.5.1 Case Study 11.5.2 Publications "],["pathogens-microbial-indicator-organisms.html", "12 Pathogens &amp; Microbial Indicator Organisms 12.1 Contributors 12.2 Overview 12.3 Model Description 12.4 Setup &amp; Configuration 12.5 Case Studies &amp; Examples", " 12 Pathogens &amp; Microbial Indicator Organisms 12.1 Contributors Matthew R. Hipsey 12.2 Overview Understanding the fate and transport of pathogenic and indicator microbes within drinking water reservoirs, rivers and coastal waters is critical for environmental managers to effectively reduce public health risks. Over the past decade several advances have been made for the simulating organism dynamics using coupled hydrodynamic-organism fate models (Hipsey, Antenucci, and Brookes 2008). These have generally been used for simulating coliform bacteria (Madani et al. 2022), with applications also reported for other organisms such as Cryptosporidium (Hipsey et al. 2004) and viruses (Sokolova et al. 2012). In general, these models simulate organism concentrations within water bodies by accounting for external loading (e.g. from stormwater or wastewater inputs), advection and mixing process that occur within the interior of the water body, organism inactivation and sedimentation. This chapter describes the basis for the AED pathogen model based on relevant information from empirical and prior modelling studies, and then summarises the setup requirements of the pathogen module within the AED model framework. 12.3 Model Description General Approach The general balance equation for organism transport and fate is summarized in Hipsey, Antenucci, and Brookes (2008) as: \\[\\begin{eqnarray} \\frac{D}{Dt}C = \\color{darkgray}{ \\mathbb{M} + \\mathcal{S} } \\quad &amp;+&amp; \\overbrace{f_{growth}^{C} -f_{mor}^{C} - f_{set}^{C} +\\hat{f}_{res}^{C}}^\\text{aed_pathogen} \\\\ \\tag{12.1} \\end{eqnarray}\\] where \\(C\\) is the organic concentration (orgs m-3). Within the AED model framework, the transport terms are solved via hydrodynamic model transport routines and the remaining terms are simulated by the aed_pathogens module. The main term controlling pathogen fate is the mortality or inactivation term, \\(f_{mor}^{C}\\): \\[\\begin{equation} f_{mor}^{C} = [k_{g}(T,S,DOC_{L})-k_{d}(T,S,pH)-k_{l}(I_{0},S,DO,pH)-k_{s}(T,S,SS)-k_{p}(T)]C \\tag{12.2} \\end{equation}\\] which relates organism inactivation to the environmental conditions experienced that influence their viability (including temperature, salinity, light intensity, dissolved organic carbon, oxygen and pH). This comprehensive description is usually simplified for specific applications, based on justification of the dominant processes present in any particular waterbody and available data for model setup and validation. The terms for simulation of organism resuspension and inactivation are described in next. 12.3.1 Process Descriptions Natural Mortality Natural mortality, or the ‘dark-death rate’, \\(k_d\\), is an important process determining the net rate of die off of protozoan, viral and bacterial organisms and has been reported to vary for specific organisms due to changes in temperature, salinity and pH. The reported die off rates in the literature however are widely variable, with a synthesis of numerous studies from a range of water bodies presented in Hipsey, Antenucci, and Brookes (2008). For freshwater reservoirs, changes in salinity and pH are unlikely to be a significant driver of organism viability relative to the range presented Hipsey, Antenucci, and Brookes (2008) and therefore a simple constant die-off rate that depends on temperature is appropriate: \\[\\begin{equation} k_{d}(T) = k_{d_{20}}\\vartheta _{M}^{T-20} \\tag{12.3} \\end{equation}\\] where \\(k_{d_{20}}\\) is the rate of mortality in the dark at 20C and in freshwater. Since the AED2 implementation of the model to be applied with NPD does not include protozoan grazing as a separate term (as in Eq 1), the grazing effect needs to be embodied within the \\(k_{d_{20}}\\) term. This effectively assumes a constant grazing pressure over time, and if chosen to be a low value this will essentially ensure conservative estimate of the die-off due to grazing. Empirical data from Wivenhoe dam shows the presence of native micro-organisms can increase the background die-off rate by 1.1-3.0x (eg Table 5 in Sidhu and Toze (2012)). Sunlight Inactivation Depending on the clarity of the water, the light climate of the lake can be a dominant factor influencing organism viability and this has been observed empirically in Wivenhoe Dam by Sidhu and Toze (2012). Different organism types experience different sensitivity to different light bandwidths, with most organisms sensitive to UV-B and UV-A and some sensitive to light in the visible spectrum (Sinton, Hall, and Braithwaite 2007). Hipsey, Antenucci, and Brookes (2008) formulated a multiple band-width model for organisms that included direct and indirect mechanisms for sunlight mediated inactivation by accounting for the effect of salinity, oxygen and pH on free radical formation. Here we use a simplified form that accounts only for direct sunlight denaturation as the indirect mechanism is more specific to MS2 phage relative to rotavirus for example (Verbyla and Mihelcic 2015). The implemented expression is therefore: \\[\\begin{equation} k_{l} = \\sum_{b=1}^{N_{b}}[\\varphi k_{b} I_{b}] \\tag{12.4} \\end{equation}\\] where \\(N_B\\) is the number of discrete solar bandwidths to be modeled, \\(b\\) is the bandwidth class {1, 2, … , \\(N_B\\)}, \\(k_b\\) is the freshwater inactivation rate coefficient for exposure to the \\(b^{th}\\) class (m2 MJ-1), \\(I_b\\) is the intensity of the \\(b^{th}\\) bandwidth class (Wm-2), \\(\\varphi\\) is a constant to convert units from seconds to days and J to MJ (= 8.64*10-2). In AED2, the light intensity is computed for 3 distinct bandwidths, including UV-B, UV-A and PAR, and the attenuation of each through the reservoir water column is based on bandwidth specific light extinction coefficients, that account for the effect of turbidity and chromophoric dissolved organic matter (CDOM) on attenutation. Sedimentation Sedimentation of organisms occurs at a rate depending on the degree to which the population is attached to suspended particles. Within AED2, this is captured by simulating free and attached organisms and multiple groups of particles may be accounted for. If we assume a single dominant particle size and ignore the effect of salinity on the settling velocity, then the expression in Hipsey, Antenucci, and Brookes (2008) for the effective sedimentation velocity reduces to: \\[\\begin{equation} k_{s}=(1-f_{a})\\frac{V_{c}}{\\Delta z}+f_{a}\\frac{V_{s}}{\\Delta z} \\tag{12.5} \\end{equation}\\] where \\(f_a\\) is the attached fraction, and \\(V\\) is the vertical velocity of organisms or sediment particles. Resupension Resuspension of organisms accumulated within the sediment has been show to be a relatively important terms in environments where high currents or waves exist. In reservoirs this can occur in the lake margins or deeper in the lake where internal waves or river underflows increase the shear stress at the sediment. The amount of organisms that resuspend depends not only on the shear stress but also n the concentration of organisms in the surficial layers of the sediment. This may be modelled by accounting for the deposited organisms, decay within the sediment and resuspension rate, however, this is notoriously difficult given potentially complex dynamics of organisms in the sediment. Instead we assume that a standard background concentration exists within different sediment regions (based on depth and local geomorphology) and simulate resuspension rate as: \\[\\begin{equation} C_{r}(\\tau)=\\alpha_{c}\\frac{(\\tau - \\tau_{c_{s}})}{\\tau _{ref}}\\frac{1}{\\Delta z_{bot}} \\tag{12.6} \\end{equation}\\] where, \\(\\alpha_C\\) is the rate of organism suspension (orgs m-2s-1), which occurs when the critical shear stress is exceeded in the relative computational cell. +C_{r}(,SS_{SED},C_{SED})+ 12.3.2 Variable Summary State Variables Table 12.1: State variables Variable Name Description Units Variable Type Core/Optional PTH_name Concentration of pathogens cfu/100mL Pelagic Optional Diagnostics 12.3.3 Parameter Summary Table 12.2: Diagnostics p_name ‘crypto’ ‘ecoli’ ‘totalcoli’ string pathogen name coef_grwth_uMAX 0.00e+00 3.00e+00 2.40e+00 real Max growth rate at 20C coef_grwth_Tmin 4.00e+00 4.00e+00 4.00e+00 real Tmin and Tmax f(T) coef_grwth_Tmax 3.50e+01 3.50e+01 3.50e+01 real Tmin and Tmax ? coef_grwth_T1 8.00e-03 8.00e-03 8.00e-03 real coef_grwth_T1 and coef_grwth_T2 coef_grwth_T2 1.00e-01 1.00e-01 1.00e-01 real coef_grwth_T1 and coef_grwth_T2 coef_grwth_Kdoc 0.00e+00 3.00e-01 3.00e-01 real Half-saturation for growth coef_grwth_Kdoc coef_grwth_ic 0.00e+00 0.00e+00 0.00e+00 real coef_grwth_ic coef_mort_kd20 3.00e-02 4.80e-01 3.40e-01 real Mortality rate (Dark death rate) @ 20C and 0 psu coef_mort_theta 1.08e+00 1.08e+00 1.11e+00 real Temperature multiplier for mortality: coef_mort_theta coef_mort_c_SM 0.00e+00 0.00e+00 2.00e-07 real Salinity effect on mortality coef_mort_alpha 0.00e+00 6.10e+00 4.20e+00 real Salinity effect on mortality coef_mort_beta 0.00e+00 2.50e-01 2.50e-01 real Salinity effect on mortality coef_mort_c_PHM 0.00e+00 5.00e+01 5.00e+01 real pH effect on mortality coef_mort_K_PHM 0.00e+00 6.00e+00 6.00e+00 real pH effect on mortality coef_mort_delta_M 0.00e+00 4.00e+00 4.00e+00 real pH effect on mortality coef_mort_fdoc 0.00e+00 5.00e-01 5.00e-01 real Fraction of mortality back to doc coef_light_kb_vis 0.00e+00 9.70e-02 9.70e-02 real Light inactivation coef_light_kb_uva 0.00e+00 1.16e+00 1.16e+00 real Light inactivation coef_light_kb_uvb 0.00e+00 3.64e+01 3.64e+01 real Light inactivation coef_light_cSb_vis 6.70e-03 6.70e-03 6.70e-03 real Salinity effect on light inactivation coef_light_cSb_uva 6.70e-03 6.70e-03 6.70e-03 real Salinity effect on light inactivation coef_light_cSb_uvb 6.70e-03 6.70e-03 6.70e-03 real Salinity effect on light inactivation coef_light_kDOb_vis 5.00e-01 5.00e-01 5.00e-01 real DO effect on light coef_light_kDOb_uva 5.00e-01 5.00e-01 5.00e-01 real DO effect on light coef_light_kDOb_uvb 5.00e-01 5.00e-01 5.00e-01 real DO effect on light coef_light_cpHb_vis 1.00e+01 1.00e+01 1.00e+01 real pH effect on light inactivation coef_light_cpHb_uva 1.00e+01 1.00e+01 1.00e+01 real pH effect on light inactivation coef_light_cpHb_uvb 1.00e+01 1.00e+01 1.00e+01 real pH effect on light inactivation coef_light_KpHb_vis 5.00e+00 5.00e+00 5.00e+00 real pH effect on light inactivation coef_light_KpHb_uva 5.00e+00 5.00e+00 5.00e+00 real pH effect on light inactivation coef_light_KpHb_uvb 5.00e+00 5.00e+00 5.00e+00 real pH effect on light inactivation coef_light_delb_vis 3.00e+00 3.00e+00 3.00e+00 real exponent for pH effect on light inactivation coef_light_delb_uva 3.00e+00 3.00e+00 3.00e+00 real exponent for pH effect on light inactivation coef_light_delb_uvb 3.00e+00 3.00e+00 3.00e+00 real exponent for pH effect on light inactivation coef_pred_kp20 0.00e+00 2.00e-01 2.00e-01 real Loss rate due to predation and temp multiplier coef_pred_theta_P 1.00e+00 1.04e+00 1.04e+00 real Loss rate due to predation and temp multiplier coef_sett_fa 0.00e+00 9.40e-01 8.10e-01 real Attached fraction in water column coef_sett_w_path -2.50e-06 -5.00e-07 -5.00e-07 real Sedimentation velocity (m/d) at 20C (-ve means down) for NON-ATTACHED orgs coef_resus_epsilonP 1.00e-02 1.00e-02 1.00e-02 real Pathogen resuspension rate coef_resus_tauP_0 1.00e-02 1.00e-02 1.00e-02 real Critical shear stress for organism resuspension 12.3.4 Optional Module Links 12.3.5 Feedbacks to the Host Model 12.4 Setup &amp; Configuration 12.4.1 Setup Example Table 12.3: Parameters and configuration Parameter Name Description Units Parameter Type Default Typical Range Comment num_pathogens number of pathogens to model 1-? NA NA NA NA An example nml block for the phytoplankton module is shown below: &amp;aed2_pathogens num_pathogens = 2 the_pathogens = 1,3 dbase = &#39;./the_path_to/aed2_pathogen_pars.nml&#39; ! OPTIONAL VARS HERE resuspension num_ss ss_set ss_tau ss_ke sim_sedorgs oxy_variable epsilon tau_0 tau_0_min Ktau_0 extra_diag att_ts / 2018 : aed2_pathogen_pars.nml parameter formatting style: !------------------------------------------------------------------------------- ! aed2_pathogen_pars.nml : PATHOGEN PARAMETER DATABASE !------------------------------------------------------------------------------- ! p_name : [ string] - pathogen name ! coef_grwth_uMAX : [ real] - Max growth rate at 20C ! coef_grwth_Tmin : [ real] - Tmin and Tmax, f(T) ! coef_grwth_Tmax : [ real] - Tmin and Tmax, f(T) ! coef_grwth_T1 : [ real] - coef_grwth_T1 and coef_grwth_T2 ! coef_grwth_T2 : [ real] - coef_grwth_T1 and coef_grwth_T2 ! coef_grwth_Kdoc : [ real] - Half-saturation for growth, coef_grwth_Kdoc ! coef_grwth_ic : [ real] - coef_grwth_ic ! coef_mort_kd20 : [ real] - Mortality rate (Dark death rate) @ 20C and 0 psu ! coef_mort_theta : [ real] - Temperature multiplier for mortality: coef_mort_theta ! coef_mort_c_SM : [ real] - Salinity effect on mortality ! coef_mort_alpha : [ real] - Salinity effect on mortality ! coef_mort_beta : [ real] - Salinity effect on mortality ! coef_mort_c_PHM : [ real] - pH effect on mortality ! coef_mort_K_PHM : [ real] - pH effect on mortality ! coef_mort_delta_M : [ real] - pH effect on mortality ! coef_mort_fdoc : [ real] - Fraction of mortality back to doc ! coef_light_kb_vis : [ real] - Light inactivation ! coef_light_kb_uva : [ real] - Light inactivation ! coef_light_kb_uvb : [ real] - Light inactivation ! coef_light_cSb_vis : [ real] - Salinity effect on light inactivation ! coef_light_cSb_uva : [ real] - Salinity effect on light inactivation ! coef_light_cSb_uvb : [ real] - Salinity effect on light inactivation ! coef_light_kDOb_vis : [ real] - DO effect on light ! coef_light_kDOb_uva : [ real] - DO effect on light ! coef_light_kDOb_uvb : [ real] - DO effect on light ! coef_light_cpHb_vis : [ real] - pH effect on light inactivation ! coef_light_cpHb_uva : [ real] - pH effect on light inactivation ! coef_light_cpHb_uvb : [ real] - pH effect on light inactivation ! coef_light_KpHb_vis : [ real] - pH effect on light inactivation ! coef_light_KpHb_uva : [ real] - pH effect on light inactivation ! coef_light_KpHb_uvb : [ real] - pH effect on light inactivation ! coef_light_delb_vis : [ real] - exponent for pH effect on light inactivation ! coef_light_delb_uva : [ real] - exponent for pH effect on light inactivation ! coef_light_delb_uvb : [ real] - exponent for pH effect on light inactivation ! coef_pred_kp20 : [ real] - Loss rate due to predation and temp multiplier ! coef_pred_theta_P : [ real] - Loss rate due to predation and temp multiplier ! coef_sett_fa : [ real] - Attached fraction in water column ! coef_sett_w_path : [ real] - Sedimentation velocity (m/d) at 20C (-ve means down) for NON-ATTACHED orgs ! coef_resus_epsilonP : [ real] - Pathogen resuspension rate ! coef_resus_tauP_0 : [ real] - Critical shear stress for organism resuspension &amp;pathogen_data pd%p_name = &#39;crypto&#39;, &#39;ecoli&#39;, &#39;totalcoli&#39; pd%coef_grwth_uMAX = 0, 3, 2.4 pd%coef_grwth_Tmin = 4, 4, 4 pd%coef_grwth_Tmax = 35, 35, 35 pd%coef_grwth_T1 = 0.008, 0.008, 0.008 pd%coef_grwth_T2 = 0.1, 0.1, 0.1 pd%coef_grwth_Kdoc = 0, 0.3, 0.3 pd%coef_grwth_ic = 1.0E-9, 1.0E-9, 1.0E-9 pd%coef_mort_kd20 = 0.03, 0.48, 0.34 pd%coef_mort_theta = 1.08, 1.08, 1.11 pd%coef_mort_c_SM = 0, 2.0E-10, 2.0E-7 pd%coef_mort_alpha = 0, 6.1, 4.2 pd%coef_mort_beta = 0, 0.25, 0.25 pd%coef_mort_c_PHM = 0, 50, 50 pd%coef_mort_K_PHM = 0, 6, 6 pd%coef_mort_delta_M = 0, 4, 4 pd%coef_mort_fdoc = 0, 0.5, 0.5 pd%coef_light_kb_vis = 0, 0.097, 0.097 pd%coef_light_kb_uva = 0, 1.16, 1.16 pd%coef_light_kb_uvb = 0, 36.4, 36.4 pd%coef_light_cSb_vis = 0.0067, 0.0067, 0.0067 pd%coef_light_cSb_uva = 0.0067, 0.0067, 0.0067 pd%coef_light_cSb_uvb = 0.0067, 0.0067, 0.0067 pd%coef_light_kDOb_vis = 0.5, 0.5, 0.5 pd%coef_light_kDOb_uva = 0.5, 0.5, 0.5 pd%coef_light_kDOb_uvb = 0.5, 0.5, 0.5 pd%coef_light_cpHb_vis = 10, 10, 10 pd%coef_light_cpHb_uva = 10, 10, 10 pd%coef_light_cpHb_uvb = 10, 10, 10 pd%coef_light_KpHb_vis = 5, 5, 5 pd%coef_light_KpHb_uva = 5, 5, 5 pd%coef_light_KpHb_uvb = 5, 5, 5 pd%coef_light_delb_vis = 3, 3, 3 pd%coef_light_delb_uva = 3, 3, 3 pd%coef_light_delb_uvb = 3, 3, 3 pd%coef_pred_kp20 = 0, 0.2, 0.2 pd%coef_pred_theta_P = 1, 1.04, 1.04 pd%coef_sett_fa = 0, 0.94, 0.81 pd%coef_sett_w_path = -2.5E-6, -5.0E-7, -5.0E-7 pd%coef_resus_epsilonP = 0.01, 0.01, 0.01 pd%coef_resus_tauP_0 = 0.01, 0.01, 0.01 / Go to the aed2_pathogen_pars.nml Parameter Database 2014: aed2_pathogen_pars.nml style parameters (note: not compatible with the online parameter database) !----------------------------------------------------------------! ! coef_grwth_uMAX !-- Max growth rate at 20C ! coef_grwth_Tmin, coef_grwth_Tmax !-- Tmin and Tmax, f(T) ! coef_grwth_T1, coef_grwth_T2 !-- coef_grwth_T1 and coef_grwth_T2 ! coef_grwth_Kdoc !-- Half-saturation for growth, coef_grwth_Kdoc ! coef_grwth_ic !-- coef_grwth_ic ! coef_mort_kd20 !-- Mortality rate (Dark death rate) @ 20C and 0 psu ! coef_mort_theta !-- Temperature multiplier for mortality: coef_mort_theta ! coef_mort_c_SM, coef_mort_alpha, coef_mort_beta !-- Salinity effect on mortality ! coef_mort_c_PHM, coef_mort_K_PHM, coef_mort_delta_M !-- pH effect on mortality ! coef_mort_fdoc !-- Fraction of mortality back to doc ! coef_light_kb_vis, coef_light_kb_uva, coef_light_kb_uvb !-- Light inactivation ! coef_light_cSb_vis, coef_light_cSb_uva, coef_light_cSb_uvb !-- Salinity effect on light inactivation ! coef_light_kDOb_vis, coef_light_kDOb_uva, coef_light_kDOb_uvb !-- DO effect on light ! coef_light_cpHb_vis, coef_light_cpHb_uva, coef_light_cpHb_uvb !-- pH effect on light inactivation ! coef_light_KpHb_vis, coef_light_KpHb_uva, coef_light_KpHb_uvb !-- pH effect on light inactivation ! coef_light_delb_vis, coef_light_delb_uva, coef_light_delb_uvb !-- exponent for pH effect on light inactivation ! coef_pred_kp20, coef_pred_theta_P !-- Loss rate due to predation and temp multiplier ! coef_sett_fa !-- Attached fraction in water column ! coef_sett_w_path !-- Sedimentation velocity (m/d) at 20C (-ve means down) for NON-ATTACHED orgs !----------------------------------------------------------------! ! p_name coef_grwth_uMAX, coef_grwth_Tmin, coef_grwth_Tmax, coef_grwth_T1, coef_grwth_T2, coef_grwth_Kdoc, coef_grwth_ic, coef_mort_kd20, coef_mort_theta, coef_mort_c_SM, coef_mort_alpha, coef_mort_beta, coef_mort_c_PHM, coef_mort_K_PHM, coef_mort_delta_M, coef_mort_fdoc, coef_light_kb_vis, coef_light_kb_uva, coef_light_kb_uvb, coef_light_cSb_vis, coef_light_cSb_uva, coef_light_cSb_uvb, coef_light_kDOb_vis, coef_light_kDOb_uva, coef_light_kDOb_uvb, coef_light_cpHb_vis, coef_light_cpHb_uva, coef_light_cpHb_uvb, coef_light_KpHb_vis, coef_light_KpHb_uva, coef_light_KpHb_uvb, coef_light_delb_vis, coef_light_delb_uva, coef_light_delb_uvb, coef_pred_kp20, coef_pred_theta_P, coef_sett_fa, coef_sett_w_path &amp;pathogen_data pd = &#39;crypto&#39;, 0.0, 4.0, 35.0, 0.008, 0.1, 0.0, 1e-9, 0.03, 1.14, 0.00, 0.0, 0.00, 0.0, 0.0, 0.0, 0.0, 0.000, 2.13, 33.7, 0.0067, 0.0067, 0.0067, 0.5, 0.5, 0.5, 10.0, 10.0, 10.0, 5.0, 5.0, 5.0, 3.0, 3.0, 3.0, 0.0, 1.00, 0.00, -2.\\5e-6, &#39;ecoli&#39;, 0.0, 4.0, 35.0, 0.008, 0.1, 0.3, 1e-9, 0.48, 1.08, 2e-10, 6.1, 0.25, 50.0, 6.0, 4.0, 0.5, 0.097, 1.16, 36.4, 0.0067, 0.0067, 0.0067, 0.5, 0.5, 0.5, 10.0, 10.0, 10.0, 5.0, 5.0, 5.0, 3.0, 3.0, 3.0, 0.0, 1.04, 0.94, -0.5e-6, &#39;fcoli&#39;, 0.0, 4.0, 35.0, 0.008, 0.1, 0.3, 1e-9, 0.71, 1.06, 2e-3, 1.8, 0.25, 50.0, 6.0, 4.0, 0.5, 0.097, 1.16, 36.4, 0.0067, 0.0067, 0.0067, 0.5, 0.5, 0.5, 10.0, 10.0, 10.0, 5.0, 5.0, 5.0, 3.0, 3.0, 3.0, 0.0, 1.04, 0.81, -0.5e-6, &#39;ent&#39;, 0.0, 4.0, 35.0, 0.008, 0.1, 0.3, 1e-9, 0.45, 1.04, 0.00, 0.0, 0.25, 50.0, 6.0, 4.0, 0.5, 0.882, 1.16, 17.2, 0.0067, 0.0067, 0.0067, 0.5, 0.5, 0.5, 10.0, 10.0, 10.0, 5.0, 5.0, 5.0, 3.0, 3.0, 3.0, 0.0, 1.04, 0.81, -0.5e-6, &#39;totalcoli&#39;, 0.0, 4.0, 35.0, 0.008, 0.1, 0.3, 1e-9, 0.34, 1.11, 2e-7, 4.2, 0.25, 50.0, 6.0, 4.0, 0.5, 0.097, 1.16, 36.4, 0.0067, 0.0067, 0.0067, 0.5, 0.5, 0.5, 10.0, 10.0, 10.0, 5.0, 5.0, 5.0, 3.0, 3.0, 3.0, 0.0, 1.04, 0.81, -0.5e-6, / 12.5 Case Studies &amp; Examples 12.5.1 Case Study 12.5.2 Publications References "],["sediment-biogeochemistry.html", "13 Sediment Biogeochemistry 13.1 Contributors 13.2 Overview 13.3 Model Description 13.4 Setup &amp; Configuration 13.5 Case Studies &amp; Examples", " 13 Sediment Biogeochemistry 13.1 Contributors Daniel Paraska, Matthew R. Hipsey 13.2 Overview Sediment diagenesis models are highly complex environmental reactive transport modelling tools. The meta-analysis by Paraska et al (2014) discussed the history of their evolution to these complex configurations, in which the original models of Boudreau (1996), Van Cappellen and Wang (1996) and Soetaert et al. (1996) were taken up and applied in many contexts by new modellers, who added new features and extended their capabilities, or discarded old features as required. The meta-analysis also identified the major challenges associated with developing new sediment diagenesis models. Here, a new modelling package for sediment biogeochemistry is presented, CANDI-AED, which is an extension of the Approach 1 models, but reengineered and augmented with new model approaches and capabilities as a way to address some of these challenges. Paraska et al (in prep) outlined the significance and uncertainty associated with different parameterisation approaches of organic matter dynamics. In these cases, simulations were run to test the significance of different theoretical approaches and model structural assumptions, using an idealised model setup with only primary oxidation reactions and no physical processes or spatial resolution. The true impact of these different model approaches within a spatially-resolved model, accounting for all of the advection, diffusion and secondary reaction processes, however, is yet to be determined and it is unclear whether some formulations may suit some application contexts better than others. Therefore there is a need for a fully flexible model structure that can include these different organic matter breakdown parameterisations and allow users to assess critically the alternative approaches. In addition, other aspects related to secondary redox reactions, mineral reactions, precipitation and adsorption should similarly be subject to comparative assessments. A further challenge identified in Paraska et al (2014) was the difficulty involved in taking up these models by the broader modelling community, because of problems related to connecting these complex model structures with other water quality and aquatic ecosystem models. For example, there are problems related to mapping variables of ecosystem models to those of diagenesis models. There are also problems related to the mismatch between the resolution of processes that occur over different spatial and temporal scales, for example fast equilibrium reactions between sediment layers, and seasonal temperature or salinity changes across a study site. The model developed as part of this research aimed to address these challenges by building a full-featured, open-source model code with the flexibility to do the following: - set different kinetic rate equation approaches - set different organic matter pools and breakdown processes - use standard inhibition or thermodynamic limits on primary oxidation - optionally use manganese, iron and iron sulphide reactions - simulate adsorbed metals and nutrients - simulate calcium, iron and manganese carbonates - connect the boundary to either another model, a programmed file or a fixed concentration Therefore the numerical model presented in this chapter has many optional features and alternative parameterisations for key processes, without mandating their inclusion in the calculations or enforcing a fixed model structure. The sediment model CANDI-AED presented here is implemented as an optionally configurable module i the AED model library. Through the model coupling approach it may be applied with any of the hydrodynamic models linked to AED, or alternatively, options to run in isolation are also possible. This chapter provides a scientific description of the model and describes attributes of the model associated with its practical implementation and operation. An case-study of the model framework is also demonstrated. 13.3 Model Description The heart of this model is the reaction, diffusion, advection model of Berner (1980), which was implemented as the Carbon and Nutrient Diagenesis model of Boudreau (1996) and developed into Approach 1 from Chapter 2. The basic structure of this model is an adaptation of the C.CANDI code (Luff et al. 2000), which added extensions related to the geochemical aspects. Further additions to the C.CANDI code have been made to: - the organic matter dynamics - the geochemical dynamics - extensions for nutrients and trace metals The chemical reactions included in this model, including new features added to the model, are expanded upon below and summarised in Figure 13.1. Figure 13.1: AED CANDI includes chemical processes of organic matter transformation and oxidation, and reduction/oxidation, crystallisation, adsorption and precipitation reactions of inorganic by-products. Most of the processes are triggered by the input of POM at the sediment-water interface. 13.3.1 Process Descriptions Primary Redox Reactions The key chemical process that causes ongoing change in the sediment is the breakdown of organic matter. The user can decide how complex or simple the organic matter breakdown pathway should be, with three options of varying complexity for parameterising the pathways included (Figure 5 - 3). The first option (OMModel = 1) is a common multi-G model in which the POM phases are decomposed straight to CO2 and other breakdown products. Here POM is a variable that is not precisely defined, and its components (such as C, N and P) must be determined in post-processing based on a user-defined fixed stoichiometry. The second option (OMModel = 2) is another 2G model with both particulate and dissolved organic matter (POM and DOM) phases included and parameterisation hydrolysis of POM to DOM, and then DOM to CO2 and other breakdown products. The POM and DOM phases consist of three variables each, which trace the reaction and transport of carbon, nitrogen and phosphorus, thereby allowing for variable stoichiometry of organic matter to occur temporally and spatially. The third option (OMModel = 3) has many POM phases, which are all hydrolysed to DOM, which then undergoes fermentation and terminal metabolism, as using the mechanistic approach from Chapter 3. This allows the carbon, nitrogen and phosphorus to be calculated precisely before and after a model run, and allows the free energies of the reaction of each phase to be included. This third option is the most detailed and mechanistic, and allows for expansion of more detailed reaction mechanisms to be included. Table 13.1: Parameters and configuration Description Reaction Rate equation OMModel 1 \\(POM_{Lab} \\text{ oxidation}\\) \\(POM_{\\text{Lab}} \\rightarrow CO_{2 \\text{ space}}\\) \\[\\begin{equation} k_{DOMRef}{\\sum R}_{{Ox}_i} \\tag{13.1} \\end{equation}\\] POMRefoxidation OMModel 2 POMLab hydrolysis POMRef hydrolysis DOMLab oxidation DOMRef oxidation OMModel 3 POMi hydrolysis DHyd fermentation DHyd oxidation OAc, H2 oxidation Figure 13.2: Three options for different levels of complexity in organic matter breakdown, by setting the OMModel switch. a – Model in which POM breaks down directly to CO2 and other waste products. b – Model in which POM is first hydrolysed to DOM and then oxidised to CO2. c – Model in which POM is hydrolysed to DOM, which can then be fermented and oxidised. The terminal redox reaction pathways are the six pathways that are available in most diagenesis models, and are driven by different organic matter pools, depending on the OMModel configuration chosen from the above options (Table 5 - 2). AED CANDI allows the use of Approach 1 or 2 organic matter oxidation rate equations, as examined in detail in Paraska et al (in prep). The rate equation for the oxidation of the oxidants with any of the pools above can include any of the terms in equation 5 - 12, where \\(R_{{Ox}_i}\\) is the reaction of an oxidant \\(i\\) (Arndt et al. 2013) (Table 5 - 3). The kinetic rate constant \\(k_{OM}\\) gives the maximum oxidation rate, which is different for each reactive type, but the same for each oxidation pathway. Alternatively, using OMModel 3, the kinetic rate constant is the rate of bacterial growth. The factor for terminal electron acceptor (TEA) limitation is FTEA (5 - 11), where options for Approach 1 or Approach 2 equations are available. The Monod constant for rate limitation at low oxidant concentration is \\(K_{TEA}\\) in Approach 1 and LTEA in Approach 2. Similarly, the inhibition term \\(F_{In}\\) (5 - 14) can be set to Approach 1 or 2 equations, or turned off entirely. The constant for inhibition until low oxidant concentrations is \\(K_{In}\\) for Approach 1 and \\(L_{IN}\\) for Approach 2. \\(F_{T}\\) is the thermodynamic factor, as described in chapter 3. The current version of the model includes FT only for OMModel 3, for terminal oxidation reactions and fermentation. \\(F_{OM}\\) is the organic matter concentration and may be a Monod function as in equation 5 - 8 (\\(K_{OM}\\) is a half saturation constant and the index \\(i\\) is the reactive phase). Using OMModels 1 and 2, \\(F_{OM}\\) is the concentration of the substrate, rather than a Monod function. The current version of the model has switches built in for both the temperature dependence factor, \\(F_{Tem}\\), where values of 1 or 2 turn them off and on. However, implementation and testing of the factors has not been carried out for this version of the model. The metabolism rate at \\(T_{0}\\) is \\(R_{0}\\), \\(ξ\\) is a scaling constant (see, for example, Eldridge and Morse 2008). Secondary Redox Reactions In the meta-analysis, we identified the many secondary redox reactions that have been included across the diversity of diagenesis model applications. In AED CANDI, they are all included as options, and may be turned on or off as desired (Table 5 - 4). Equilibrium Geochemistry The pH is calculated as the sum of all charged species, where any unbalanced positive charge indicates H+. The charge balance is at each time step is solved as a state variable, which is subject to advection, diffusion and bioturbation reactions. The precipitation of minerals is solved as an equilibrium reaction, dependent on the concentrations of the dissolved and solid substances, their \\(K_{sp}\\) and ion activity product (IAP). The equations are applied in a similar manner to those in Van Cappellen and Wang (1996) and numerous other studies, but with the exact forms of the equations based on those from Tufano et al. (2009) (Table 5 - 5). A positive rate indicates precipitation and a negative rate indicates dissolution. This model applies the function to all mineral simulated, including Fe(OH)3, FeS, FeS2, FeCO3, CaCO3 and MnCO3. This model has a process of mineral ageing, whereby iron and manganese oxides become crystalline and no longer react with organic matter, but can still undergo secondary redox reactions. Physical Transport The analysis from chapter 2 showed that advection and diffusion reactions (equations 5 - 102, 5 - 103) are fairly consistent in diagenesis models, and here we use the same methods (Table 5 - 8). Porosity (ϕ) is defined according to equation 5 - 104, which allows it to decrease with depth, and the solid fraction is defined from \\(\\phi_s=1-\\phi)\\). For bioturbation the model uses a diffusion coefficient that varies with depth (\\(D_{B(x)}\\)) as a two layer function or a Gaussian decrease (Boudreau 1996). For the porewater components, diffusion coefficients are used that are based on free-solution molecular diffusion constants corrected for sediment tortuosity, \\(θ\\), according to equation 5 - 105. 13.3.2 Variable Summary 13.3.3 Parameter Summary 13.3.4 Optional Module Links 13.3.5 Feedbacks to the Host Model 13.4 Setup &amp; Configuration The preceding details were an explanation of the scientific aspects of this diagenesis model, and next we turn to practical implementation. 13.4.1 Implementation within the AED framework The sediment diagenesis model AED CANDI is one module of the AED library, which is composed of numerous model components. The model allows any combination of these modules, or any other model package, to be included in a model simulation and couples them to a physical model of the water column, which provides the spatial and temporal resolution, and calculates the transport processes (Figure 5 - 1). Figure 13.3: Spatial resolution options available through AED. a) Water column studies have traditionally assigned a flux to the sediment water interface without resolving the sediment chemical concentrations by depth, though they can be resolved laterally. b) The 0D water column is the method used in most sediment diagenesis studies, and use of multiple sediment zones is an option available within AED. 13.4.2 Program Structure The general structure of the program is shown in Figure 5 - 5. The program is firstly initialised, then loops through the kinetic and equilibrium reactions for each time step and writes the resulting concentrations and rates at each depth to an output file. The kinetic reactions are solved by the VODE program (Brown et al. 1989) and the equilibrium reactions by the Simplex program. Figure 13.4: The program is firstly initialised, then loops through the kinetic and equilibrium reactions for each time step and writes the resulting concentrations and rates at each depth to an output file. The kinetic reactions are solved by the VODE program (Brown et al. 1989) and the equilibrium reactions by the Simplex program. 13.4.3 Model Setup, Boundary Conditions &amp; Parameter Definition The model is set up via the name list text file aed.nml using the module keyword “&amp;aed_seddiagenesis” and a model namelist block termed “&amp;aed_sediment” configured to select the sediment_model as “Dynamic” or “Dynamic2D” option. Once this is selected, the model will search for the “&amp;aed_sedcandi” parameter block within aed.nml. Each active sediment model within this module is discretised into a user definable number of depth layers () that start at a thickness of a few mm at the sediment-water interface and which increase exponentially down to a pre-defined sediment depth (xl). Users must define the sediment domain physical properties as summarised in Table 5 - 10, including configuration options related to bioturbation and irrigation. The biogeochemical configuration (Table 5 - 11), rate constants (see Table 5 - 12 and Table 5 - 13) must be set according to the sub-model options described above. Table 13.2: Sediment physical and transport parameters Parameter name Unit Example value Description db0 cm2 y-1 10.00 Biodiffusion coefficient at sediment-water ineterface imix 0/1 0.00 Bioturbation function: 0-Gaussian; 1 – two-layer model xs cm 3.00 Half depth for Gaussian mixing (imix - 0) x1 cm 1.00 Depth at which db starts to decreacse (imix -1) x2 cm 5.00 Depth at which db is zero (imix - 1) irrig 0/1 1.00 Bioirrigation switch alpha0 y-1 15.00 Irrigation coefficient xirrig cm 4.00 Maximum irrigation depth ventflow cm y-1 0.00 Advective flux (positive value indicates from below) w00 cm y-1 0.75 Sediment accumulation velocity at maximum depth p0 0.90 Porosity at sediment-water interface (\\(\\phi_{0}\\) in equation 5 - 104) p00 0.80 Porosity at maximum depth (\\(\\phi_{xl}\\) in equation 5 - 104) bp 2.50 Porosity attenuation coefficient (\\(\\beta\\) in equation 5 - 104) torteq 1/2/3 3.00 Tortuosity calculation method switch: 1-Archie; 2-Burger; 3-Weissberg an 2.14 Porosity exponent for tortuosity (if Archie) aa 3.79 Porosity exponent for tortuosity (if Burger) ab 2.02 Porosity exponent for tortuosity (if Weissberg) xl cm 100.00 Maximum simulation depth maxnpts 40.00 Number of vertical layers Table 13.3: The major biogeochemical configuration options, which are set by the user before the model is initialised Biogeochemical configuration Unit Description Omapproach 1/2 Kinetic redox equations, corresponding to the approaches of chapter 2 OMModel 1/2/3 Organic matter breakdown models, as described in Table 5 - 1, Figure 5 - 2 FTem switch 1/2 Sets reaction rate dependency on temperature FT switch 1/2 Sets reaction rate dependency on thermodynamics FBio switch 1/2 Sets reaction rate dependency on biomass concentration FIN switch 1/2 Sets reaction rate dependency on concentration of other oxidants simMnFe T/F Turns all Mn and Fe primary and secondary reactions on or off simFeS T/F Turns all FeS reactions on or off simX T/F Allows simulation of adsorbed metal X Xname “X” Metal X: “As”, “Cu”, “Cd”, “Pb”, “Ni”, “Zn” simCaCO3 T/F Turns all calcite reactions on or off simFeCO3 T/F Turns all siderite reactions on or off simMnCO3 T/F Turns all rhodchrosite reactions on or off simNPads T/F Turns N and P adsorption on or off rxn_mode 0/1 Sets precipitation to: kinetic-0; IAP/Ksp-1 The initial conditions for each variable are set as a list by the “initial_vals”, which sets a constant concentration with depth in units of μmol L-1. For organic matter initial concentrations only, there are three available options for the concentration with depth, set by “OMInitMethodL”. The sediment-water interface is the uppermost layer of the sediment, for which there are three configuration options set by the parameter ibc2. If the user specifies ibc2 = 2, the concentration is a constant value set by default_vals in the aed.nml name list. For ibc2 = 1, the concentration is provided by a “link_variable”, which provides the concentration from another simulated water column AED module. If the variable name in the link list is left blank (“ ”) then AED-CANDI will assume these variables are not linked to any water column variables and default to the “default_vals” values. If ibc2 = 10, the concentration is provided by a user-prescribed temporally variable value read from the file aed_sediment_swibc.dat. This option may desirable, for example, for simulating a seasonally or daily changing boundary condition. Regardless of the ibc2 surface boundary condition option, fluxes of dissolved species occur between the sediment and water column. They are calculated from the concentration gradient at the sediment-water interface according to Fick’s Law: \\[\\begin{equation} F = D_{0}\\frac{\\Delta C}{\\Delta x} = \\frac{D_{0}}{\\delta} (C_{bw} - C_{1}) \\tag{13.1} \\end{equation}\\] where \\(D_{0}\\) is the diffusivity as defined above, \\(\\delta\\) is the thickness of the diffusive boundary layer at the sediment water interface and defined as the length scale of the first sediment layer, \\(C_{bw}\\) is the bottom water concentration and \\(C_{1}\\) is the concentration in the top sediment layer. At the bottom of the domain (\\(x\\) = “xl”) the model can be specified to have a fixed-concentration (ibbc = 0) such that the concentration at \\(xl = C_{Bot}\\), or it can be specified to have a zero-derivative (ibbc = 1) defined as \\(\\frac{dC}{dx}=0\\) at \\(x = xl\\). 13.4.4 Model Output &amp; Post-processing The model output files are written for each variable as text files, giving time (in years) as the first column depth as the first row and concentrations in the other fields. These can be read in using a data processing program such as R, Matlab or Excel for analysis. Further, the model outputs the file rates.sed for each variable at every depth for the final time step. 13.5 Case Studies &amp; Examples 13.5.1 Case Study "],["bivalves.html", "14 Bivalves 14.1 Contributors 14.2 Overview 14.3 Model Description 14.4 Setup &amp; Configuration 14.5 Case Studies &amp; Examples", " 14 Bivalves 14.1 Contributors 14.2 Overview Based on work in freshwater and estuarine systems a bivalve module to simulate growth, production, and (optionally) population dynamics has been incorporated into the AED2+ library. The model is originally based on an application to Oneida Lake and Lake Erie for mussels. One to several size classes of mussels are simulated based on physiological parameters assembled by Schneider (1992) and modified by Bierman et al. (2005) to estimate effect of mussels on Saginaw Bay, Michigan, USA; a formulation also used by Gudimov et al. (2015) to estimate mussel effects in Lake Simcoe, Ontario, Canada. Additionally, some model structure was taken from the Spillman et al. (2008) model of Tapes clams in the Barbamarco Lagoon, Italy, as modified by Bocaniov et al. (2014) for mussels in Lake Erie. The physiology of mussels are set to be size dependent, and can vary between species (e.g., Zebra vs Quagga)(Hetherington, 2016). Three size classes of mussels can be incorporated in the model, roughly corresponding to age-0, age-1 and age&gt;1 mussels. Physiological parameters are calculated for the weight assigned to each age class, using equations in Table 4. Individual mussel mass is given in mmol C or in the case of calculations of N and P budgets, in mmol N and mmol P. The stoichiometric ratios (C:N:P) are fixed. Group mussel biomass is calculated at each time step by calculating ingestion and subtracting pseudofeces production, standard dynamic action, respiration, excretion, egestion and mortality (expressed in mmol C/mmol C/day, mmol N/mmol N/day; mmol P/mmol P/day). Several of these processes are also functions of temperature, algal+POC concentrations, salinity, suspended solids and mussel density. The effect of salinity, suspended solids and mussel density is incorporated as a multiplier of filtration rate with the multipliers having values between -0 – (no filtering) and 1 (no effect). Mussel nitrogen and phosphorus concentrations are fixed ratios of mussel carbon concentrations. Since the various input and output fluxes have variable C:N:P ratios, the excretion of nutrients is dynamically adjusted each time-step to maintain this ratio at each time step. Reproduction and larval dynamics are not simulated. There is no transfer of biomass between age groups. 14.3 Model Description 14.3.1 Process Descriptions Ingestion Ingestion is modelled as a function of filtration rate, food availability, pseudofeces production, density, suspended solids, and salinity (Equation 2) (Schneider 1992; Bierman et al. 2005; Spillman et al. 2008; Gudimov et al. 2015). Filtration rate is based on maximum ingestion, temperature, food availability, and pseudofeces production according to the following: \\[\\begin{equation} FR = \\frac{\\frac{I_{max}*f(T)_{I}}{K_{A}}}{PF_{min}} \\text{ for } [A] &lt; KA \\tag{14.1} \\end{equation}\\] \\[\\begin{equation} FR = \\frac{\\frac{I_{max}*f(T)_{I}}{[A]}}{PF_{min}} \\text{ for } [A] &gt; KA \\tag{14.2} \\end{equation}\\] where \\(FR\\) is filtration rate (mmol/mmol/d), \\(Imax\\) is maximum ingestion rate (mmol/mmol/d), \\(f(T)_{I}\\) is filtration temperature function, \\(K_{A}\\) is optimum algal concentration (mmol/m3), \\([A]\\) is algal concentration + particulate organic carbon (POC) concentration (mmol/m3), and \\(PFmin\\) is minimum pseudofeces production (-). The maximum ingestion rate is based on weight from length according to the following: \\[\\begin{equation} I_{max} = (a_{I} * W^{bI}) \\tag{14.3} \\end{equation}\\] \\[\\begin{equation} W = \\frac{0.071}{1000} * L^{2.8} \\tag{14.4} \\end{equation}\\] where \\(Imax\\) is maximum ingestion rate (mmol/mmol/d), \\(a_{I}\\) is maximum standard ingestion rate (mmol/mmol/d), \\(W\\) is weight (g), \\(bI\\) is exponent for weight effect on ingestion, \\(L\\) in length (mm) (Schneider 1992; Bierman et al. 2005). The temperature dependence function (Thornton and Lessem 1978) was fit to zebra and quagga mussel data (Hetherington et al. Submitted) with optimal ingestion from 17°C to 20°C according to the following: \\[\\begin{equation} f(T)_{I} = 1 \\text{ for } T_{min_{I}} &lt; T &lt; T_{max_{I}} \\tag{14.5} \\end{equation}\\] \\[\\begin{equation} f(T)_{I} = (2*\\frac{Tmin_{TI}}{Tmin_{I}} - \\frac{(Tmin_{TI})^2}{(Tmin_{I})^2}) / (2*\\frac{Tmin_{I}-minT_{I}}{Tmin_{I}}-\\frac{(Tmin_{I}-minT_{I})^2}{(Tmin_{I})^2}) \\text{ for } minT_{I} &lt; T &lt; Tmin_{I} \\tag{14.6} \\end{equation}\\] \\[\\begin{equation} f(T)_{I} = -\\frac{(T^{2} + 2*Tmax_{I}*T–2*Tmax_{I}*maxT_{I} + maxT_{I}^{2})}{(Tmax_{I}-maxT_{I})^{2}} \\text{ for } Tmax_{I}&lt;T&lt;maxT_{I} \\tag{14.7} \\end{equation}\\] \\[\\begin{equation} f(T)_{I} = 0 \\text{ for } T &gt; maxT_{I} \\text{ or } T &lt; minT_{I} \\tag{14.8} \\end{equation}\\] where \\(T\\) is temperature (°C), \\(minT_{I}\\) is lower temperature for no ingestion (°C), \\(Tmin_{I}\\) is lower temperature for optimum ingestion (°C), \\(Tmax_{I}\\) is upper temperature for optimum ingestion, \\(maxT_{I}\\) is upper temperature for no ingestion (°C). Filtration rate is related to food concentration [Walz (1978); Sprung and Rose (1988); Schneider (1992); Bierman et al. (2005)). The filtration rate is maintained at a maximum value for all food values less than saturation food concentration. The filtration rate decreases as food concentrations increase above this value. Pseudofeces production is implicit as the difference between the mass filtered and consumed. According to Walz (1978), pseudofeces production (66%) was approximately double the ingestion rate (34%) at high food concentrations Bierman et al. (2005). Mussel density limits ingestion above some maximum density according to the following: \\[\\begin{equation} $f(D) = 1$ for $D&lt;Dmax$ \\tag{14.9} \\end{equation}\\] \\[\\begin{equation} f(D) = \\frac{-(D^{2} + 2*Dmax*D – 2*Dmax*maxD + maxD^{2})}{(Dmax – maxD)^{2}} \\text{ for } D&gt;Dmax \\tag{14.10} \\end{equation}\\] \\[\\begin{equation} f(D) = 0 \\text{ for } D&gt;maxD \\tag{14.11} \\end{equation}\\] where \\(D\\) is density (mmol/m2), \\(Dmax\\) is upper density for optimum ingestion (mmol/m2), and \\(maxD\\) is upper density for no ingestion (mmol/m2). An additional function to reduce ingestion is the suspended solids function which decreases ingestion with high inorganic loads according to the following: \\[\\begin{equation} f(SS) = 1 \\text{ for } SS&lt;SSmax \\tag{14.12} \\end{equation}\\] \\[\\begin{equation} f(SS) = \\frac{-(SS^{2} + 2*SSmax*SS – 2*SSmax*maxSS + maxSS^{2})}{(SSmax – maxSS)^{2}} \\text{ for } SS&gt;SSmax \\tag{14.13} \\end{equation}\\] \\[\\begin{equation} f(SS) = 0 \\text{ for } SS&gt;maxSS \\tag{14.14} \\end{equation}\\] where \\(SS\\) is suspended solids (mg/L), \\(SSmax\\) is upper suspended solids for optimum ingestion (mg/L), and \\(maxSS\\) is upper suspended solids for no ingestion (mg/L) (Spillman et al. 2008). Along with suspended solids, salinity limits ingestion according to the following: \\[\\begin{equation} f(S) = 1 \\text{ for } Smin &lt; S &lt; Smax \\tag{14.15} \\end{equation}\\] \\[\\begin{equation} f(S) = \\frac{(2*(S-minS)/Smin)–(S-minS)^{2}/Smin^{2})}{(2*(Smin-minS)/Smin)–(Smin-minS)^{2}/Smin^{2})} \\text{ for } minS&lt; S &lt; Smin \\tag{14.16} \\end{equation}\\] \\[\\begin{equation} f(S) = \\frac{-(S^{2} + 2*Smax*S – 2*Smax*maxS + maxS^{2})}{(Smax-maxS)^{2}} \\text{ for } Smax&lt;S&lt;maxS \\tag{14.17} \\end{equation}\\] \\[\\begin{equation} f(S) = 0 \\text{ for } S &gt; maxS \\text{ or } S &lt; minS \\tag{14.18} \\end{equation}\\] where \\(S\\) is salinity (psu), \\(minS\\) is lower salinity for no ingestion (psu), \\(Smin\\) is lower salinity for optimum ingestion (psu), \\(Smax\\) is upper salinity for optimum ingestion (psu), \\(maxS\\) is upper salinity for no ingestion (psu) (Spillman et al. 2008). Respiration Respiration is modelled as a base or standard respiration rate based on weight and temperature (Spillman et al. 2008). Respiration rate coefficient at 20°C is based on weight from length according to the following: \\[\\begin{equation} R_{20} = (a_{R} * W^{b}_{R}) \\tag{14.19} \\end{equation}\\] \\[\\begin{equation} W = \\frac{0.071}{1000} * L^{2.8} \\tag{14.20} \\end{equation}\\] where \\(R_{20}\\) is respiration rate coefficient at 20°C (mmol/mmol/d), \\(a_{R}\\) is standard respiration rate (mmol/mmol/d), \\(W\\) is weight (g), \\(b_{R}\\) is exponent for weight effect of respiration, and \\(L\\) is length (mm) (Schneider 1992). The respiration rate coefficient is adjusted for temperature according to the following: \\[\\begin{equation} f(T)_{RSpillman} = \\Theta_{RSpillman}^{T-20} \\tag{14.21} \\end{equation}\\] where \\(f(T)_{RSpillman}\\) is respiration temperature function, \\(\\Theta_{RSpillman}\\) is temperature multiplier for bivalve respiration (-), and \\(T\\) is temperature (°C) (Spillman et al. 2008). Alternatively, respiration is modelled as a base or standard respiration rate based on weight and temperature in addition to the energetic cost of feeding. Respiration rate coefficient at 30°C is based on weight from length according to the following: \\[\\begin{equation} R_{30} = (a^{R} * W^{b}_{R}) \\tag{14.22} \\end{equation}\\] \\[\\begin{equation} W = \\frac{0.071}{1000} * L^{2.8} \\tag{14.23} \\end{equation}\\] where \\(R_{30}\\) is respiration rate coefficient at 30°C (mmol/mmol/d), \\(a^{R}\\) is standard respiration rate (mmol/mmol/d), \\(W\\) is weight (g), \\(b_{R}\\) is exponent for weight effect of respiration, and \\(L\\) is length (mm) (Schneider 1992). The temperature function follows Schneider (1992) application of the model of Kitchell, Stewart, and Weininger (1977) to the data of Jr and McMahon (2004) according to the following: \\[\\begin{equation} f(T)_{RSchneider} = V^{X} * e^{X * (1-V)} \\tag{14.24} \\end{equation}\\] \\[\\begin{equation} V = \\frac{Tmax_{R} – T}{Tmax_{R} – maxT_{R}} \\tag{14.25} \\end{equation}\\] \\[\\begin{equation} X = (\\frac{W*(1+\\sqrt{1 + (\\frac{40}{Y})})}{20})^2 \\tag{14.26} \\end{equation}\\] \\[\\begin{equation} W = lnQ_{R}*(Tmax_{R} – maxT_{R}) \\tag{14.27} \\end{equation}\\] \\[\\begin{equation} Y = lnQ_{R}*(Tmax_{R} – maxT_{R} + 2) \\tag{14.28} \\end{equation}\\] where \\(T\\) is temperature (°C), \\(Tmax_{R}\\) is upper temperature for optimum respiration (°C), \\(maxT_{R}\\) is upper temperature for no respiration (°C), and \\(Q_{R}\\) is respiration curve slope estimate (-). The maximum respiration occurs at 30°C with 43°C as the upper lethal temperature. The energetic cost of feeding or specific dynamic action is applied only to the portion of ingestion that is not egested (Schneider 1992; Bierman et al. 2005; Gudimov et al. 2015). Excretion Excretion is modelled as a constant fraction of assimilated food (Schneider 1992; Bierman et al. 2005; Gudimov et al. 2015). Excretion data for zebra and quagga mussels are limited; therefore, the excretion formulation for Mytilus edulis derived by Bayne and Newell (1983) was used (Schneider 1992; Bierman et al. 2005; Gudimov et al. 2015). Egestion Egestion is modeled as a function of ingestion (Schneider 1992; Bierman et al. 2005; Gudimov et al. 2015). The model follows the assumption that ingestion is directly proportional to the food content of the water for all food concentrations less than the maximum which can be ingested. For all food concentrations above this saturation value, ingestion remains constant at a maximum value (\\(I_{max}\\)) (Walz 1978). Mortality Mortality is a function of dissolved oxygen and predation (Equation 7). Mortality increases with low dissolved oxygen concentrations according to the following: \\[\\begin{equation} f(DO) = 1 + K_{BDO} * \\frac{K_{DO}}{K_{DO} + DO} \\tag{14.29} \\end{equation}\\] where \\(DO\\) is dissolved oxygen (mmol/m3), \\(K_{BDO}\\) is basal respiration rate (mmol/m3), and \\(K_{DO}\\) is half saturation constant for metabolic response to dissolved oxygen (mmol/m3) (Spillman et al. 2008). A mortality rate coefficient (\\(K_{MORT}\\)) further influences the dissolved oxygen function. Additionally, mortality from predation is a constant rate added to the effect from dissolved oxygen. 14.3.2 Variable Summary State Variables Table 14.1: State variables Variable Name Description Units Variable Type Core/Optional BIV_{group} Bivalve group \\(mmol C\\,m^{-2}\\,day^{-1}\\) Benthic Core BIV_filtfrac Filtered fraction of water % Pelagic Optional : biv_tracer = .true. Diagnostics Table 14.2: Diagnostics Variable Name Description Units Variable Type Core/Optional BIV_tgrz Total rate of food filtration/grazing in the water column \\(mmol C\\,m^{-3}\\,day^{-1}\\) Pelagic diagnostic Core BIV_nmp Net mussel production \\(mmol C\\,m^{-3}\\,day^{-1}\\) Benthic diagnostic Core BIV_tbiv Total bivalve density (all groups) \\(mmol C\\,m^{-3}\\,day^{-1}\\) Benthic diagnostic Core BIV_grz Net bivalve filtration/grazing \\(mmol C\\,m^{-3}\\,day^{-1}\\) Benthic diagnostic Core BIV_resp Net bivalve respiration \\(mmol C\\,m^{-3}\\,day^{-1}\\) Benthic diagnostic Core BIV_mort Net bivalve mortality \\(mmol C\\,m^{-3}\\,day^{-1}\\) Benthic diagnostic Core BIV_excr Net bivalve excretion \\(mmol C\\,m^{-3}\\,day^{-1}\\) Benthic diagnostic Core BIV_egst Net bivalve egestion (faeces) \\(mmol C\\,m^{-3}\\,day^{-1}\\) Benthic diagnostic Core BIV_fT Bivalve temperature limitation NA Benthic diagnostic Optional: extra_diag=.true. BIV_fD Bivalve sediment limitation NA Benthic diagnostic Optional: extra_diag=.true. BIV_fG Bivalve food limitation NA Benthic diagnostic Optional: extra_diag=.true. BIV_fR Filtration rate \\(m^{3}\\, mmol C\\,m^{-2}\\,day^{-1}\\) Benthic diagnostic Optional: extra_diag=.true. BIV_pf Pseudofeaces production rate \\(day^{-1}\\) Benthic diagnostic Optional: extra_diag=.true. 14.3.3 Parameter Summary Table 14.3: Diagnostics name ‘zebra’ ‘quagga’ string Name of bivalve group General Parameters initial_conc 833 833 real Initial concentration of bivalve (mmolC/m2) min 8.3 8.3 real Minimum concentration of bivalve (mmolC/m3) length 15 15 real Length of bivalve (mm) INC 291.67 291.67 real Ratio of internal nitrogen to carbon of bivalve (-) IPC 64.58 64.58 real Ratio of internal phosphorus to carbon of bivalve (-) FILTRATION &amp; INGESTION Parameters Rgrz 1.9 0.12 real Maximum ingestion rate of bivalve (mmol/mmol/day) (Spillman et al. 2008) Calculated from Schneider 1992 based on 15 mm mussel Ing 0 0 integer Type of maximum ingestion for bivalve; 0=Enter (mmol/mmol/d) or 1=Calculate based on length WaI 0 0 real Maximum standard ingestion rate of bivalve (mmol/mmol/day) (Schneider 1992) WbI -0.39 -0.39 real Exponent for weight effect on ingestion of bivalve (-) (Schneider 1992) fassim 0.34 0.34 real Minimum proportion of food lost as pseudofeces for bivalve (-) Cmin_grz 0.05 0.05 real Minimum prey concentration for grazing by bivalve (mmolC/m3) Kgrz 187.5 187.5 real Optimum algae+POC concentration for ingestion of bivalve (mmol/m3) minT 4 4 real Lower temperature for no ingestion of bivalve (degC) Tmin 17 17 real Lower temperature for optimum ingestion of bivalve (degC) Tmax 20 20 real Upper temperature for optimum ingestion of bivalve (degC) maxT 32 32 real Upper temperature for no ingestion of bivalve (degC) Dmax 6333.3 6333.3 real Upper density for optimum ingestion of bivalve (mmol/m2) maxD 20000 20000 real Upper density for no ingestion of bivalve (mmol/m2) Ssmax 20 20 real Upper suspended solids for optimum ingestion of bivalve (mg/L) maxSS 100 100 real Upper suspended solids for no ingestion of bivalve (mg/L) EXCRETION AND EGESTION Parameters Rexcr 0 0 real Excretion fraction of ingestion for bivalve(-) Regst 0 0 real Minimum proportion egested as feces for bivalve (-) gegst 0 0 real Gamma coefficient for food availability dependence for bivalve RESPIRATION Parameters Rresp 0.01 0.01 real Respiration rate coefficient of bivalve (/day) (Calculated from Schneider 1992 based on 15 mm mussel) saltfunc 0 0 integer Type of salinity function for bivalve; 0=None or 1=Spillman et al. 2008 minS 0 0 real Lower salinity for no ingestion of bivalve (psu) Smin 0 0 real Lower salinity for optimum ingestion of bivalve (psu) Smax 0 0 real Upper salinity for optimum ingestion of bivalve (psu) maxS 0 0 real Upper salinity for no ingestion of bivalve (psu) fR20 0 0 integer Type of maximum respiration for bivalve; 0=Enter or 1=Calculate based on length (mm) War 16.759 16.759 real Standard respiration rate of bivalve (mmol/mmol/d) (Schneider 1992) Wbr -0.25 -0.25 real Exponent for weight effect on respiration of bivalve (-) fR 1 1 integer Type of respiration function for bivalve; 0=Schneider 1992 or 1=Spillman et al. 2008 theta_resp 1.08 1.08 real Temperature multiplier for respiration of bivalve (-) TmaxR 30 30 real Upper temperature for optimum respiration of bivalve (degC) maxTR 43 43 real Upper temperature for no respiration of bivalve (degC) Qresp 2.3 2.3 real Respiration curve slope estimate for bivalve (-) SDA 0.285 0.285 real Specific dynamic action of bivalve (-) MORTALITY Parameters Rmort 0 0 real Mortality rate coefficient for bivalve (/day) Rpred 0 0 real Mortality rate from predation of bivalve (/day) fDO 0 0 integer Type of dissolved oxygen function for bivalve; 0=None or 1=XXX or 2=XXX K_BDO 160 160 real Basal respiration rate of bivalve (mmol/m3) KDO 8 8 real Half saturation constant for metabolic response to DO for bivalve (mmol/m3) GENERAL Parameters num_prey 3 3 integer Number of state variables for bivalve prey prey(1)%bivalve_prey PHY_green PHY_green string State variable name of bivalve prey prey(1)%Pbiv_prey 1 1 real Preference factors for bivalve predators grazing on prey prey(2)%bivalve_prey PHY_diatom PHY_diatom string State variable name of bivalve prey prey(2)%Pbiv_prey 1 1 real Preference factors for bivalve predators grazing on prey prey(3)%bivalve_prey PHY_crypto OGM_poc string State variable name of bivalve prey prey(3)%Pbiv_prey 1 1 real Preference factors for bivalve predators grazing on prey 14.3.4 Optional Module Links 14.3.5 Feedbacks to the Host Model 14.4 Setup &amp; Configuration 14.4.1 Setup Example Table 14.4: Parameters and configuration Parameter Name Description Units Parameter Type Default Typical Range Comment num_biv Number of zooplankton groups NA Integer NA 0-3 NA the_biv List of ID’s of groups in aed_zoo_pars.nml (len=num_phyto) NA Integer NA 1/3/17 NA n_zones Number of sediment zones where bivalves will be active NA Integer NA NA NA active_zones The vector of sediment zones to include NA Integer (vector) NA NA NA biv_tracer Opton to include water column tracer tracking filtration amount NA Boolean .false. NA NA biv_feedback Switch to enable/disable feedbacks between bivalve metabolism and water column variable concentration NA Boolean .false. NA NA dn_target_variable Water column variable to receive DON excretion NA String NA NA NA pn_target_variable Water column variable to receive PON egestion/mortality NA String NA NA NA dp_target_variable Water column variable to receive DOP excretion NA String NA NA NA pp_target_variable Water column variable to receive POP egestion/mortality NA String NA NA NA dc_target_variable Water column variable to receive DOC excretion NA String NA NA NA pc_target_variable Water column variable to receive POC egestion/mortality NA String NA NA NA do_uptake_variable Water column variable providing DO concentration NA String NA NA NA ss_uptake_variable Water column variable providing SS concentration NA String NA NA NA dbase = 'AED2/aed2_bivalve_pars.nml' NA NA String aed2_bivalve_pars.nml aed2/aed2_bivalve_pars.nml NA extra_diag Switch to enable/disable extra diagnostics to be output NA Boolean .false. NA NA biv_fixedenv Switch to enable/disable environmental variables to be fixed (for testing) NA Boolean .false. NA NA fixed_temp Fixed temperature C Float NA 20 NA fixed_oxy Fixed oxygen concentration \\(mmol O_2\\,m^{-3}\\) Float NA 300 NA fixed_food Fixed food concentration \\(mmol C\\,m^{-3}\\) Float NA 20 NA An example nml block for the bivalve module is shown below: &amp;aed2_bivalve num_biv = 2 the_biv = 1,2 ! dn_target_variable=&#39;&#39; ! dissolved nitrogen target variable pn_target_variable=&#39;&#39; ! particulate nitrogen target variable dp_target_variable=&#39;&#39; ! dissolved phosphorus target variable pp_target_variable=&#39;&#39; ! particulate phosphorus target variable dc_target_variable=&#39;&#39; ! dissolved carbon target variable pc_target_variable=&#39;&#39; ! particulate carbon target variable do_uptake_variable=&#39;OXY_oxy&#39; ! oxygen uptake variable ss_uptake_variable=&#39;&#39; ! oxygen uptake variable !FIX FROM ERIE! !n_zones, active_zones, extra_diag,&amp; !simBivTracer, simBivFeedback, simStaticBiomass, &amp; !dbase, simFixedEnv, fixed_temp, fixed_sal, fixed_oxy, fixed_food, &amp; initFromDensity / 14.5 Case Studies &amp; Examples 14.5.1 Case Study 14.5.2 Publications References "],["publications-7.html", "15 Publications", " 15 Publications The following publications have applied the AED modelling library. Please edit this page by clicking the above icon if you wish to have a new publication added, or contact the authors. /* Style the buttons inside the tab */ .tab button { background-color: #2481AA; float: left; border: none; outline: none; cursor: pointer; padding: 14px 16px; transition: 0.3s; font-size: 17px; color: #FFFFFF; font-weight: bold; } Publications Tab 2 Tab 3 Table 15.1: Publications Author/Year Paper Title Description Bruce et al. (2014) Hydrodynamic controls on oxygen dynamics in a riverine salt wedge estuary, the Yarra River estuary, Australia Estuarine Bucak et al. (2018) Modeling the effects of climatic and land use changes on phytoplankton and water quality of the largest Turkish freshwater lake: Lake Beyşehir Estuarine Chen et al. (2018) Effectiveness of a bubble-plume mixing system for managing phytoplankton in lakes and reservoirs Lake Coletti, Vogwill, and Hipsey (2017) Water management can reinforce plant competition in salt-affected semi-arid wetlands Wetland Devlin and Toby (2019) Integrated aquaculture modelling to determine carrying capacity of aquaculture development zones in the Arab Gulf Aquaculture Fadel et al. (2019) A simple modelling approach to simulate the effect of different climate scenarios on toxic cyanobacterial bloom in a eutrophic reservoir Lake Farrell et al. (2020) Ecosystem-scale nutrient cycling responses to increasing air temperatures vary with lake trophic state Lake Fenocchi et al. (2019) Applicability of a one-dimensional coupled ecological-hydrodynamic numerical model to future projections in a very deep large lake (Lake Maggiore, Northern Italy/Southern Switzerland) Lake Fenocchi et al. (2020) Model simulations of the ecological dynamics induced by climate and nutrient load changes for deep subalpine Lake Maggiore (Italy/Switzerland): Model simulations of the future ecological dynamics of Lake Maggiore Lake Griffith and Tate (2014) Hawkesbury Nepean River and South Creek Model River Huang et al. (2018) Assessing artificial oxygenation in a riverine salt-wedge estuary with a three-dimensional finite-volume model Estuarine Krinos et al. (2019) Including variability in air temperature warming scenarios in a lake simulation model highlights uncertainty in predictions of cyanobacteria Lake Liu et al. (2020) Unravelling the metabolism black-box in a dynamic wetland environment using a hybrid model framework: Storm driven changes in oxygen budgets Wetland Snortheim et al. (2017) Meteorological drivers of hypolimnetic anoxia in a eutrophic, north temperate lake Lake Subratie et al. (2017) GRAPLEr: A distributed collaborative environment for lake ecosystem modeling that integrates overlay networks, high-throughput computing, and WEB services Lake Ward et al. (2020) Differential responses of maximum versus median chlorophyll‐ a to air temperature and nutrient loads in an oligotrophic lake over 31 years Lake Weber et al. (2017) Optimizing withdrawal from drinking water reservoirs to reduce downstream temperature pollution and reservoir hypoxia River Weng et al. (2020) Coupling Natural and Human Models in the Context of a Lake Ecosystem: Lake Mendota, Wisconsin, USA Lake Zhang et al. (2017) Simulation of multiple water source ecological replenishment for Chagan Lake based on coupled hydrodynamic and water quality models Lake Tab 2 This is the second tab Tab 3 This is the third tab. References "],["forthcoming-chapters.html", "Forthcoming chapters We invite you to contribute to these chapters! Editing the book", " Forthcoming chapters A number of additional chapters describing additional AED modules are a work in progress, including: Host-model coupling; Tracers and water age; Suspended sediment; Further development/expansion of silica, inorganic phosphorus, organic matter, and phytoplankton chapters; Zooplankton; Total nutrients and carbon; Stable isotopes; Bioactive particles; Submerged macrophytes; Macroalgae; Benthic habitat quality; Soil hydrology; Soil biogeochemistry; Acid sulfate soils; Riparian vegetation; and Riparian habitat quality; We invite you to contribute to these chapters! bookdown makes editing a book as easy as editing a wiki, provided you have a GitHub account (sign-up at github.com). Once logged-in to GitHub, click on the ‘edit me’ icon highlighted with a red ellipse in the image below. This will take you to an editable version of the the source R Markdown file that generated the page you’re on: To raise an issue about the book’s content (e.g. code not running) or make a feature request, check-out the [issue tracker]https://github.com/AquaticEcoDynamics/aed-science/issues). Readers may also use the hypothes.is utility on the right margin of the book to add personal annotations and public comments on the book content. Maintainers and contributors must follow this repository’s CODE OF CONDUCT. Editing the book To build the book locally, clone or download the aed-science repo, load R in root directory (e.g. by opening aed-sceince.Rproj in RStudio) and run the following lines: bookdown::render_book(&quot;index.Rmd&quot;) # to build the book browseURL(&quot;_book/index.html&quot;) # to view it "],["references.html", "References", " References "],["404.html", "Page not found", " Page not found The page you requested cannot be found (perhaps it was moved or renamed). You may want to try searching to find the page's new location, or use the table of contents to find the page you are looking for. "]]
